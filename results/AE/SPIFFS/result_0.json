{
  "repair_begin": "2021-05-06 23:08:28.016357",
  "repair_end": "2021-05-07 00:08:28.042982",
  "patches": [
    {
      "target_file": "src/service.i",
      "fix": "",
      "edits": [
        "1283c1283,1284\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n---\n>   while (1) {\n> \n",
        "335c335\n<   workingData->group = cgc__add_group((char *)\"root\", (pGroup )0);\n---\n> \n",
        "361a362\n>     {\n370a372,373\n>     }\n>     tempPerm = node->perms;\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n",
        "358a359\n>   {\n359a361,362\n>   return (1);\n>   }\n",
        "1302a1303\n>     {\n1306a1308,1316\n>     }\n>     while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n>       if ((int )temp->type == 70) {\n>         return (temp->file);\n>       } else {\n> \n>       }\n>       temp = cgc_find_node_by_name(name, temp->next);\n>     }\n",
        "419,421d418\n<   if ((unsigned long )group != (unsigned long )((pGroup )0)) {\n<     newPerms->group = group;\n<   } else {\n423d419\n<   }\n",
        "1303a1304\n>       {\n1304a1306,1307\n>       tmp = cgc_find_node_by_name(name, directory->directoryHeadNode);\n>       }\n",
        "469a470\n>     {\n470a472,473\n>     (temp->prev)->next = temp->next;\n>     }\n",
        "1224c1224\n<   tmp___1 = cgc_recursive_path(start, end->parent);\n---\n> \n",
        "879a880\n>   {\n880a882,883\n>   return (1);\n>   }\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   tmp = cgc_init_data();\n>   }\n",
        "361a362\n>     {\n370a372,373\n>     }\n>     tmp = cgc_strcmp((tempPerm->user)->name, name);\n",
        "879a880\n>   {\n880a882,890\n>   while ((unsigned long )temp != (unsigned long )((pUser )0)) {\n>     if ((unsigned long )temp == (unsigned long )user) {\n>       return (1);\n>     } else {\n> \n>     }\n>     temp = temp->next;\n>   }\n>   }\n",
        "358a359\n>   {\n359a361,366\n>   if (tmp == 0) {\n>     return (tempPerm);\n>   } else {\n> \n>   }\n>   }\n",
        "650c650\n<     file->tail = newFileChunk;\n---\n> \n",
        "343c343\n<   (workingData->root)->parent = (struct Node_s *)0;\n---\n> \n",
        "562c562\n<   cgc_strcpy(newName, name);\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         return;\n>         }\n",
        "362a363\n>       {\n363a365,370\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>       }\n",
        "1302a1303\n>     {\n1306a1308,1313\n>     }\n>     if ((int )temp->type == 70) {\n>       return (temp->file);\n>     } else {\n> \n>     }\n",
        "362a363\n>       {\n363a365,366\n>       cgc_validate_current_perms(node, workingData);\n>       }\n",
        "358a359\n>   {\n359a361,362\n>   cgc_validate_current_perms(node, workingData);\n>   }\n",
        "1283,1286d1282\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n<     if ((int )temp->type == 68) {\n<       return (temp);\n<     } else {\n1288,1290d1283\n<     }\n<     temp = cgc_find_node_by_name(name, temp->next);\n<   }\n",
        "552c552\n<   newNode->next = (struct Node_s *)0;\n---\n> \n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return (0);\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   return (1);\n>   }\n",
        "816c816\n<   tmp___0 = cgc_strlen((char const   *)name);\n---\n> \n",
        "362a363\n>       {\n363a365,366\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       }\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return ((pGroupUserList )0);\n",
        "679a680\n>     {\n680a682,683\n>     return ((pNode )0);\n>     }\n",
        "1337a1338\n>   {\n1338a1340,1341\n>   return ((pNode )0);\n>   }\n",
        "364a365\n>         {\n365a367,390\n>         while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>           if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>             tmp = cgc_strcmp((tempPerm->user)->name, name);\n>             if (tmp == 0) {\n>               return (tempPerm);\n>             } else {\n> \n>             }\n>           } else {\n> \n>           }\n>           if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>             tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>             if (tmp___0 == 0) {\n>               return (tempPerm);\n>             } else {\n> \n>             }\n>           } else {\n> \n>           }\n>           tempPerm = tempPerm->next;\n>         }\n>         }\n",
        "451c451\n<     lastPerm->next = newPerms;\n---\n> \n",
        "361a362\n>     {\n370a372,395\n>     }\n>     while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>         tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>         if (tmp___0 == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       tempPerm = tempPerm->next;\n>     }\n",
        "1253c1253\n<   return;\n---\n> \n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return ((pNode )0);\n",
        "439,442d438\n<       if ((unsigned long )lastPerm->group != (unsigned long )((pGroup )0)) {\n<         if ((unsigned long )lastPerm->group == (unsigned long )group) {\n<           return ((pPerms )0);\n<         } else {\n444,447d439\n<         }\n<       } else {\n< \n<       }\n",
        "1094c1094\n<     return (newGroup);\n---\n> \n",
        "679a680\n>     {\n680a682,683\n>     tmp___1 = cgc__add_node((char)70, date, name, directory, user);\n>     }\n",
        "1300c1300\n<   tmp = cgc_find_node_by_name(name, directory->directoryHeadNode);\n---\n> \n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return (tempPerm);\n",
        "1087c1087\n<   cgc_strcpy(newName, name);\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         return ((pNode )0);\n>         }\n",
        "1238c1238\n<   cgc_strcat(retpath, end->name);\n---\n> \n",
        "363a364\n>       {\n366a368,369\n> \n>       }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return (0);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       tempPerm = node->perms;\n",
        "364a365\n>         {\n365a367,368\n>         return;\n>         }\n",
        "684c684\n<   newNode->file = newFile;\n---\n> \n",
        "363c363\n<       tmp = cgc_strcmp((tempPerm->user)->name, name);\n---\n> \n",
        "364a365\n>         {\n365a367,368\n>         cgc_validate_current_perms(node, workingData);\n>         }\n",
        "1301c1301\n<   temp = tmp;\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         return (1);\n>         }\n",
        "469a470\n>     {\n470a472,473\n>     return (retval);\n>     }\n",
        "1236c1236\n<   cgc_strcpy(retpath, path___0);\n---\n> \n",
        "800c800\n<   return (newDirectory);\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         temp = tempNxt;\n>         }\n",
        "359a360\n>   {\n360a362,363\n> \n>   }\n",
        "557c557\n<   newNode->perms = cgc_add_perm(user, (pGroup )0, newNode);\n---\n> \n",
        "359a360\n>   {\n360a362,363\n>   return ((pNode )0);\n>   }\n",
        "364a365\n>         {\n365a367,368\n> \n>         }\n",
        "1338a1339\n>   {\n1339a1341,1342\n> \n>   }\n",
        "",
        "797c797\n<   newDirectory = tmp;\n---\n> \n",
        "430,433d429\n<       if ((unsigned long )lastPerm->user != (unsigned long )((pUser )0)) {\n<         if ((unsigned long )lastPerm->user == (unsigned long )user) {\n<           return ((pPerms )0);\n<         } else {\n435,438d430\n<         }\n<       } else {\n< \n<       }\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   return;\n>   }\n",
        "339,340c339\n<   (workingData->root)->perms = cgc_add_perm(workingData->user, (pGroup )0,\n<                                             workingData->root);\n---\n> \n",
        "1337a1338\n>   {\n1338a1340,1341\n> \n>   }\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return ((pNode )0);\n",
        "563c563\n<   newNode->name = newName;\n---\n> \n",
        "515c515\n<       tmp = cgc_is_user_valid(temp->user, workingData);\n---\n> \n",
        "362a363\n>       {\n363a365,375\n>       if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       }\n",
        "428c428\n<     tempPerm = lastPerm;\n---\n> \n",
        "660c660\n<   return (newFileChunk);\n---\n> \n",
        "469a470\n>     {\n470a472,473\n>     return ((pNode )0);\n>     }\n",
        "1337a1338\n>   {\n1338a1340,1341\n>   return (1);\n>   }\n",
        "679a680\n>     {\n680a682,683\n> \n>     }\n",
        "362a363\n>       {\n363a365,366\n>       tempPerm = node->perms;\n>       }\n",
        "1337a1338\n>   {\n1338a1340,1341\n>   cgc_start_UI(workingData);\n>   }\n",
        "359a360\n>   {\n360a362,363\n>   tempPerm = node->perms;\n>   }\n",
        "1338a1339\n>   {\n1339a1341,1342\n>   tmp = cgc_init_data();\n>   }\n",
        "1303a1304\n>       {\n1304a1306,1311\n>       if ((unsigned long )temp != (unsigned long )((pNode )0)) {\n> \n>       } else {\n>         break;\n>       }\n>       }\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return (temp->file);\n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return (tempPerm);\n",
        "649c649\n<     file->head = newFileChunk;\n---\n> \n",
        "364a365\n>         {\n365a367,372\n>         if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>         } else {\n>           break;\n>         }\n>         }\n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return ((pGroupUserList )0);\n",
        "455c455\n<   return (newPerms);\n---\n> \n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return ((pNode )0);\n>       }\n",
        "518a519\n>         {\n519a521,531\n>         if ((unsigned long )temp->user == (unsigned long )((pUser )0)) {\n>           if ((unsigned long )temp->group == (unsigned long )((pGroup )0)) {\n>             cgc_printf(\"Bad perm @s\\n\", node->name);\n>             return;\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         }\n",
        "328c328\n<   (workingData->root)->parent = (struct Node_s *)0;\n---\n> \n",
        "1240c1240\n<   return (retpath);\n---\n> \n",
        "359a360\n>   {\n360a362,363\n>   return (tempPerm);\n>   }\n",
        "498,500d497\n<   if ((unsigned long )temp == (unsigned long )((pPerms )0)) {\n<     return;\n<   } else {\n502d498\n<   }\n",
        "414,416d413\n<   if ((unsigned long )user != (unsigned long )((pUser )0)) {\n<     newPerms->user = user;\n<   } else {\n418d414\n<   }\n",
        "358a359\n>   {\n359a361,362\n>   tmp = cgc_strcmp((tempPerm->user)->name, name);\n>   }\n",
        "361a362\n>     {\n370a372,377\n>     }\n>     if (tmp == 0) {\n>       return (tempPerm);\n>     } else {\n> \n>     }\n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return ((pGroupUserList )0);\n>       }\n",
        "363a364\n>       {\n367a369,392\n>       }\n>       while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>         if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>           tmp = cgc_strcmp((tempPerm->user)->name, name);\n>           if (tmp == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>           tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>           if (tmp___0 == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         tempPerm = tempPerm->next;\n>       }\n",
        "1263c1263,1264\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n---\n>   while (1) {\n> \n",
        "359a360\n>   {\n360a362,372\n>   if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>     tmp = cgc_strcmp((tempPerm->user)->name, name);\n>     if (tmp == 0) {\n>       return (tempPerm);\n>     } else {\n> \n>     }\n>   } else {\n> \n>   }\n>   }\n",
        "564c564\n<   newNode->file = (pFile )0;\n---\n> \n",
        "1080,1081c1080\n<   tmp = cgc_mallocOrDie((int )sizeof(sGroup ),\n<                         (char *)\"Failed to allocate group\");\n---\n> \n",
        "590c590\n<   return ((int )size);\n---\n> \n",
        "362a363\n>       {\n363a365,388\n>       while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>         if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>           tmp = cgc_strcmp((tempPerm->user)->name, name);\n>           if (tmp == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>           tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>           if (tmp___0 == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         tempPerm = tempPerm->next;\n>       }\n>       }\n",
        "364a365\n>         {\n365a367,368\n>         return (tempPerm);\n>         }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     tempPerm = node->perms;\n>     }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       tempPerm = node->perms;\n>       }\n>     } else {\n>       break;\n>     }\n",
        "322,323c322\n<   tmp = cgc_mallocOrDie((int )sizeof(sDataStruct ),\n<                         (char *)\"Failed to malloc workingData\");\n---\n> \n",
        "429,433d428\n<     while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n<       if ((unsigned long )lastPerm->user != (unsigned long )((pUser )0)) {\n<         if ((unsigned long )lastPerm->user == (unsigned long )user) {\n<           return ((pPerms )0);\n<         } else {\n435,450d429\n<         }\n<       } else {\n< \n<       }\n<       if ((unsigned long )lastPerm->group != (unsigned long )((pGroup )0)) {\n<         if ((unsigned long )lastPerm->group == (unsigned long )group) {\n<           return ((pPerms )0);\n<         } else {\n< \n<         }\n<       } else {\n< \n<       }\n<       lastPerm = tempPerm;\n<       tempPerm = lastPerm->next;\n<     }\n",
        "1272c1272\n<   return ((pNode )0);\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n> \n>       }\n>     } else {\n>       break;\n>     }\n",
        "1132c1132\n<     group->userList = newGroupUserListNode;\n---\n> \n",
        "325,326c325\n<   tmp___0 = cgc_mallocOrDie((int )sizeof(sNode ),\n<                             (char *)\"Failed to malloc root node\");\n---\n> \n",
        "878c878\n<     temp = temp->next;\n---\n> \n",
        "1302c1302,1303\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n---\n>   while (1) {\n> \n",
        "395,411c395\n<   if ((unsigned long )user == (unsigned long )((pUser )0)) {\n<     if ((unsigned long )group == (unsigned long )((pGroup )0)) {\n<       cgc_die((char *)\"Bad call to _add_perm\");\n<     } else {\n<       goto _L;\n<     }\n<   } else\n<   _L: /* CIL Label */ \n<   if ((unsigned long )user != (unsigned long )((pUser )0)) {\n<     if ((unsigned long )group != (unsigned long )((pGroup )0)) {\n<       cgc_die((char *)\"Bad call to _add_perm\");\n<     } else {\n< \n<     }\n<   } else {\n< \n<   }\n---\n>   _L: ;\n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return;\n",
        "349c349\n<   return (workingData);\n---\n> \n",
        "360a361\n>   {\n382a384,385\n>   }\n>   tempPerm = node->perms;\n",
        "361c361,373\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>       }\n>     } else {\n>       break;\n>     }\n",
        "341c341\n<   cgc_add_perm((pUser )0, workingData->group, workingData->root);\n---\n> \n",
        "321c321\n<   workingData = (pDataStruct )0;\n---\n> \n",
        "361a362\n>     {\n370a372,377\n>     }\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n",
        "1337a1338\n>   {\n1338a1340,1341\n>   return;\n>   }\n",
        "871c871\n<   temp = workingData->user;\n---\n> \n",
        "358a359\n>   {\n359a361,362\n>   return ((pGroupUserList )0);\n>   }\n",
        "679a680\n>     {\n680a682,683\n>     return (1);\n>     }\n",
        "514,521d513\n<     if ((unsigned long )temp->user != (unsigned long )((pUser )0)) {\n<       tmp = cgc_is_user_valid(temp->user, workingData);\n<       if (tmp) {\n<         tempNxt = temp->next;\n<       } else {\n<         tempNxt = cgc_delete_perms(node, temp);\n<       }\n<     } else {\n523d514\n<     }\n",
        "1338a1339\n>   {\n1339a1341,1342\n>   return;\n>   }\n",
        "358a359\n>   {\n359a361,362\n> \n>   }\n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return;\n",
        "516,520c516\n<       if (tmp) {\n<         tempNxt = temp->next;\n<       } else {\n<         tempNxt = cgc_delete_perms(node, temp);\n<       }\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       cgc_validate_current_perms(node, workingData);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   return ((pGroupUserList )0);\n>   }\n",
        "1210c1210\n<     tmp = cgc_strlen((char const   *)end->name);\n---\n> \n",
        "324c324\n<   workingData = (pDataStruct )tmp;\n---\n> \n",
        "361c361,378\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     }\n",
        "361c361,391\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>         tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>         if (tmp___0 == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       tempPerm = tempPerm->next;\n>     }\n>     }\n",
        "643c643\n<   newFileChunk = (pFileChunk )tmp;\n---\n> \n",
        "1235c1235\n<   retpath = (char *)tmp___4;\n---\n> \n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return;\n>       }\n",
        "346c346\n<   name = (char *)tmp___1;\n---\n> \n",
        "584c584\n<   temp = file->head;\n---\n> \n",
        "332c332\n<   (workingData->root)->type = (char)68;\n---\n> \n",
        "1302,1305d1301\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n<     if ((int )temp->type == 70) {\n<       return (temp->file);\n<     } else {\n1307,1309d1302\n<     }\n<     temp = cgc_find_node_by_name(name, temp->next);\n<   }\n",
        "1266c1266\n<       return (temp);\n---\n> \n",
        "1249c1249\n<   tmp = cgc_recursive_path(workingData->root, end);\n---\n> \n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return (0);\n",
        "358a359\n>   {\n359a361,362\n>   return (tempPerm);\n>   }\n",
        "1303a1304\n>       {\n1304a1306,1307\n> \n>       }\n",
        "429c429,430\n<     while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>     while (1) {\n> \n",
        "641,642c641\n<   tmp = cgc_mallocOrDie((int )sizeof(sFileChunk ),\n<                         (char *)\"Failed to malloc filechunk\");\n---\n> \n",
        "822,836c822\n<   if ((unsigned long )userList == (unsigned long )((pUser )0)) {\n<     newUser->prev = (struct User_s *)0;\n<     newUser->next = (struct User_s *)0;\n<     return (newUser);\n<   } else {\n<     lastUser = userList;\n<     tempUser = userList->next;\n<     while ((unsigned long )tempUser != (unsigned long )((pUser )0)) {\n<       lastUser = tempUser;\n<       tempUser = tempUser->next;\n<     }\n<     lastUser->next = newUser;\n<     newUser->prev = lastUser;\n<     newUser->next = (struct User_s *)0;\n<   }\n---\n> \n",
        "362a363\n>       {\n363a365,370\n>       if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>       } else {\n>         break;\n>       }\n>       }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return (tempPerm);\n>     }\n",
        "679a680\n>     {\n680a682,683\n>     return ((pGroupUserList )0);\n>     }\n",
        "360c360\n<   tempPerm = node->perms;\n---\n> \n",
        "363a364\n>       {\n367a369,379\n>       }\n>       if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n",
        "555c555\n<   newNode->type = type;\n---\n> \n",
        "1339a1340\n>   {\n1340a1342,1343\n>   return ((pNode )0);\n>   }\n",
        "364a365\n>         {\n365a367,368\n>         return (0);\n>         }\n",
        "1251c1251\n<   cgc_strcpy(path, newPath);\n---\n> \n",
        "485c485\n<   return (retval);\n---\n> \n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return ((pGroupUserList )0);\n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return (temp->file);\n>       }\n",
        "497c497\n<   tempNxt = (pPerms )0;\n---\n> \n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return (1);\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return (1);\n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return (1);\n>       }\n",
        "348c348\n<   cgc_strcpy(name, (char *)\"\");\n---\n> \n",
        "880c880\n<   return (0);\n---\n> \n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return ((pNode )0);\n",
        "879a880\n>   {\n880a882,883\n>   return (0);\n>   }\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return;\n",
        "824c824\n<     newUser->next = (struct User_s *)0;\n---\n> \n",
        "360a361\n>   {\n382a384,385\n>   }\n>   cgc_validate_current_perms(node, workingData);\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   cgc_start_UI(workingData);\n>   }\n",
        "331c331\n<   workingData->date = 0U;\n---\n> \n",
        "679a680\n>     {\n680a682,688\n>     if (size > 0U) {\n>       tmp___0 = cgc_add_file_chunk(data, newFile, size);\n>       newFileChunk = tmp___0;\n>     } else {\n> \n>     }\n>     }\n",
        "561c561\n<   newName = (char *)tmp___1;\n---\n> \n",
        "363a364\n>       {\n367a369,370\n>       }\n>       cgc_validate_current_perms(node, workingData);\n",
        "518a519\n>         {\n519a521,522\n>         tempNxt = (pPerms )0;\n>         }\n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return (1);\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return ((pGroupUserList )0);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "1133c1133\n<     newGroupUserListNode->prev = (struct GroupUserList_s *)0;\n---\n> \n",
        "358a359\n>   {\n359a361,384\n>   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>       tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>       if (tmp___0 == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     tempPerm = tempPerm->next;\n>   }\n>   }\n",
        "1303,1305d1302\n<     if ((int )temp->type == 70) {\n<       return (temp->file);\n<     } else {\n1307d1303\n<     }\n",
        "648,658c648\n<   if ((unsigned long )file->tail == (unsigned long )((pFileChunk )0)) {\n<     file->head = newFileChunk;\n<     file->tail = newFileChunk;\n<     newFileChunk->prev = (struct FileChunk_s *)0;\n<     file->chunkCount = 1U;\n<   } else {\n<     (file->chunkCount) ++;\n<     (file->tail)->next = newFileChunk;\n<     newFileChunk->prev = file->tail;\n<     file->tail = newFileChunk;\n<   }\n---\n> \n",
        "360a361\n>   {\n382a384,394\n>   }\n>   if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>     tmp = cgc_strcmp((tempPerm->user)->name, name);\n>     if (tmp == 0) {\n>       return (tempPerm);\n>     } else {\n> \n>     }\n>   } else {\n> \n>   }\n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return ((pNode )0);\n",
        "817,818c817\n<   tmp___1 = cgc_mallocOrDie((int )(tmp___0 + 1UL),\n<                             (char *)\"Failed to allocate username\");\n---\n> \n",
        "551c551\n<   newNode->parent = parent;\n---\n> \n",
        "1239c1239\n<   cgc_free((void *)path___0);\n---\n> \n",
        "568c568\n<     parent->directoryTailNode = newNode;\n---\n> \n",
        "396,400c396\n<     if ((unsigned long )group == (unsigned long )((pGroup )0)) {\n<       cgc_die((char *)\"Bad call to _add_perm\");\n<     } else {\n<       goto _L;\n<     }\n---\n> \n",
        "1303a1304\n>       {\n1304a1306,1311\n>       if ((int )temp->type == 70) {\n>         return (temp->file);\n>       } else {\n> \n>       }\n>       }\n",
        "513c513,514\n<   while ((unsigned long )temp != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n> \n",
        "645c645\n<   newFileChunk->chunk = (char *)tmp___0;\n---\n> \n",
        "359a360\n>   {\n360a362,363\n>   tmp = cgc_strcmp((tempPerm->user)->name, name);\n>   }\n",
        "814c814\n<   tmp = cgc_mallocOrDie((int )sizeof(sUser ), (char *)\"Failed to allocate user\");\n---\n> \n",
        "676,679d675\n<   if (size > 0U) {\n<     tmp___0 = cgc_add_file_chunk(data, newFile, size);\n<     newFileChunk = tmp___0;\n<   } else {\n681d676\n<   }\n",
        "1215c1215\n<     return (path);\n---\n> \n",
        "518a519\n>         {\n519a521,522\n> \n>         }\n",
        "819c819\n<   newName = (char *)tmp___1;\n---\n> \n",
        "1338a1339\n>   {\n1339a1341,1342\n>   workingData = tmp;\n>   }\n",
        "401,408d400\n<   } else\n<   _L: /* CIL Label */ \n<   if ((unsigned long )user != (unsigned long )((pUser )0)) {\n<     if ((unsigned long )group != (unsigned long )((pGroup )0)) {\n<       cgc_die((char *)\"Bad call to _add_perm\");\n<     } else {\n< \n<     }\n410c402\n< \n---\n>     _L: ;\n",
        "1282c1282\n<   temp = tmp;\n---\n> \n",
        "798c798\n<   newDirectory->directoryHeadNode = (struct Node_s *)0;\n---\n> \n",
        "347c347\n<   (workingData->root)->name = name;\n---\n> \n",
        "345c345\n<   tmp___1 = cgc_mallocOrDie(5, (char *)\"Failed to malloc root name\");\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         tempNxt = cgc_delete_perms(node, temp);\n>         }\n",
        "469a470\n>     {\n470a472,473\n>     return (1);\n>     }\n",
        "1338a1339\n>   {\n1339a1341,1342\n>   return ((pGroupUserList )0);\n>   }\n",
        "872c872,873\n<   while ((unsigned long )temp != (unsigned long )((pUser )0)) {\n---\n>   while (1) {\n> \n",
        "1233,1234c1233\n<   tmp___4 = cgc_mallocOrDie((int )((tmp___2 + tmp___3) + 2UL),\n<                             (char *)\"Failed to allocate retpath\");\n---\n> \n",
        "823c823\n<     newUser->prev = (struct User_s *)0;\n---\n> \n",
        "363a364\n>       {\n367a369,374\n>       }\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n",
        "1284,1286d1283\n<     if ((int )temp->type == 68) {\n<       return (temp);\n<     } else {\n1288d1284\n<     }\n",
        "463,465d462\n<   if ((unsigned long )temp == (unsigned long )((pPerms )0)) {\n<     return ((pPerms )0);\n<   } else {\n467d463\n<   }\n",
        "1302a1303\n>     {\n1306a1308,1313\n>     }\n>     if ((unsigned long )temp != (unsigned long )((pNode )0)) {\n> \n>     } else {\n>       break;\n>     }\n",
        "873,875d872\n<     if ((unsigned long )temp == (unsigned long )user) {\n<       return (1);\n<     } else {\n877d873\n<     }\n",
        "1091c1091\n<   newGroup->next = (struct Group_s *)0;\n---\n> \n",
        "575c575\n<   return (newNode);\n---\n> \n",
        "565c565\n<   newNode->parent = parent;\n---\n> \n",
        "879a880\n>   {\n880a882,883\n>   return ((pNode )0);\n>   }\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     temp = tmp;\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n> \n>     }\n",
        "1086c1086\n<   newName = (char *)tmp___1;\n---\n> \n",
        "1338a1339\n>   {\n1339a1341,1342\n>   return ((pNode )0);\n>   }\n",
        "644c644\n<   tmp___0 = cgc_mallocOrDie((int )size, (char *)\"Failed to malloc chunk\");\n---\n> \n",
        "1134c1134\n<     group->userCount = 1U;\n---\n> \n",
        "329c329\n<   (workingData->root)->prev = (struct Node_s *)0;\n---\n> \n",
        "1092,1095d1091\n<   if ((unsigned long )group == (unsigned long )((pGroup )0)) {\n<     group = newGroup;\n<     return (newGroup);\n<   } else {\n1097d1092\n<   }\n",
        "1262c1262\n<   temp = directoryNode;\n---\n> \n",
        "413c413\n<   newPerms = (pPerms )tmp;\n---\n> \n",
        "1337a1338\n>   {\n1338a1340,1341\n>   tmp = cgc_init_data();\n>   }\n",
        "1250c1250\n<   newPath = tmp;\n---\n> \n",
        "549c549\n<   tmp = cgc_mallocOrDie((int )sizeof(sNode ), (char *)\"Failed to mallod node\");\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         tempNxt = temp->next;\n>         }\n",
        "524,531d523\n<     if ((unsigned long )temp->group != (unsigned long )((pGroup )0)) {\n<       tmp___0 = cgc_is_group_valid(temp->group, workingData);\n<       if (tmp___0) {\n<         tempNxt = temp->next;\n<       } else {\n<         tempNxt = cgc_delete_perms(node, temp);\n<       }\n<     } else {\n533d524\n<     }\n",
        "588c588\n<     temp = temp->next;\n---\n> \n",
        "1302a1303\n>     {\n1305a1307,1308\n> \n>     }\n",
        "364a365\n>         {\n365a367,368\n>         return (1);\n>         }\n",
        "404,406d403\n<     if ((unsigned long )group != (unsigned long )((pGroup )0)) {\n<       cgc_die((char *)\"Bad call to _add_perm\");\n<     } else {\n408d404\n<     }\n",
        "518a519\n>         {\n519a521,522\n>         return (0);\n>         }\n",
        "301c301\n<   tmp = cgc_malloc((cgc_size_t )size);\n---\n> \n",
        "519c519\n<         tempNxt = cgc_delete_perms(node, temp);\n---\n> \n",
        "453c453\n<     newPerms->next = (struct Perms_s *)0;\n---\n> \n",
        "359a360\n>   {\n360a362,363\n>   return (0);\n>   }\n",
        "469a470\n>     {\n470a472,473\n>     retval = temp->next;\n>     }\n",
        "334c334\n<   workingData->user = cgc__add_user((char *)\"root\", (pUser )0);\n---\n> \n",
        "336c336\n<   workingData->currentUser = workingData->user;\n---\n> \n",
        "518a519\n>         {\n519a521,531\n>         if ((unsigned long )temp->group != (unsigned long )((pGroup )0)) {\n>           tmp___0 = cgc_is_group_valid(temp->group, workingData);\n>           if (tmp___0) {\n>             tempNxt = temp->next;\n>           } else {\n>             tempNxt = cgc_delete_perms(node, temp);\n>           }\n>         } else {\n> \n>         }\n>         }\n",
        "415c415\n<     newPerms->user = user;\n---\n> \n",
        "303,305d302\n<   if ((unsigned long )retval == (unsigned long )((void *)0)) {\n<     cgc_die(message);\n<   } else {\n307d303\n<   }\n",
        "1252c1252\n<   cgc_free((void *)newPath);\n---\n> \n",
        "362,366d361\n<     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n<       tmp = cgc_strcmp((tempPerm->user)->name, name);\n<       if (tmp == 0) {\n<         return (tempPerm);\n<       } else {\n368,371d362\n<       }\n<     } else {\n< \n<     }\n",
        "337c337\n<   workingData->currentGroup = workingData->group;\n---\n> \n",
        "556c556\n<   newNode->date = date;\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         return ((pGroupUserList )0);\n>         }\n",
        "651c651\n<     newFileChunk->prev = (struct FileChunk_s *)0;\n---\n> \n",
        "1303a1304\n>       {\n1304a1306,1307\n>       return (0);\n>       }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return (tempPerm);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "1285c1285\n<       return (temp);\n---\n> \n",
        "879a880\n>   {\n880a882,883\n> \n>   }\n",
        "364a365\n>         {\n365a367,372\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>         }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     tmp = cgc_strcmp((tempPerm->user)->name, name);\n>     }\n",
        "1082c1082\n<   newGroup = (pGroup )tmp;\n---\n> \n",
        "361a362\n>     {\n370a372,373\n>     }\n>     cgc_validate_current_perms(node, workingData);\n",
        "360a361\n>   {\n382a384,385\n>   }\n>   return (0);\n",
        "553c553\n<   newNode->directoryTailNode = (struct Node_s *)0;\n---\n> \n",
        "679a680\n>     {\n680a682,683\n>     tmp = cgc_mallocOrDie((int )sizeof(sFile ), (char *)\"Failed to malloc file\");\n>     }\n",
        "679a680\n>     {\n680a682,683\n>     newFile = (pFile )tmp;\n>     }\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     tmp = cgc_find_node_by_name(name, directory->directoryHeadNode);\n",
        "1302a1303\n>     {\n1306a1308,1309\n>     }\n>     return (1);\n",
        "820c820\n<   cgc_strcpy(newName, name);\n---\n> \n",
        "361c361,378\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         if (tmp == 0) {\n>           return (tempPerm);\n>         } else {\n> \n>         }\n>       } else {\n> \n>       }\n>       }\n>     } else {\n>       break;\n>     }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     cgc_validate_current_perms(node, workingData);\n>     }\n",
        "518a519\n>         {\n519a521,522\n>         tmp = cgc_is_user_valid(temp->user, workingData);\n>         }\n",
        "1225c1225\n<   path___0 = tmp___1;\n---\n> \n",
        "586c586,587\n<   while ((unsigned long )temp != (unsigned long )((pFileChunk )0)) {\n---\n>   while (1) {\n> \n",
        "360a361\n>   {\n382a384,407\n>   }\n>   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>       tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>       if (tmp___0 == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     tempPerm = tempPerm->next;\n>   }\n",
        "362a363\n>       {\n363a365,366\n>       return;\n>       }\n",
        "362a363\n>       {\n363a365,366\n>       return (0);\n>       }\n",
        "361,366d360\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n<     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n<       tmp = cgc_strcmp((tempPerm->user)->name, name);\n<       if (tmp == 0) {\n<         return (tempPerm);\n<       } else {\n368,383d361\n<       }\n<     } else {\n< \n<     }\n<     if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n<       tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n<       if (tmp___0 == 0) {\n<         return (tempPerm);\n<       } else {\n< \n<       }\n<     } else {\n< \n<     }\n<     tempPerm = tempPerm->next;\n<   }\n",
        "344c344\n<   (workingData->root)->directoryHeadNode = (struct Node_s *)0;\n---\n> \n",
        "364a365\n>         {\n365a367,368\n>         return ((pNode )0);\n>         }\n",
        "1231c1231\n<   tmp___2 = cgc_strlen((char const   *)path___0);\n---\n> \n",
        "518a519\n>         {\n519a521,544\n>         while ((unsigned long )temp != (unsigned long )((pPerms )0)) {\n>           if ((unsigned long )temp->user != (unsigned long )((pUser )0)) {\n>             tmp = cgc_is_user_valid(temp->user, workingData);\n>             if (tmp) {\n>               tempNxt = temp->next;\n>             } else {\n>               tempNxt = cgc_delete_perms(node, temp);\n>             }\n>           } else {\n> \n>           }\n>           if ((unsigned long )temp->group != (unsigned long )((pGroup )0)) {\n>             tmp___0 = cgc_is_group_valid(temp->group, workingData);\n>             if (tmp___0) {\n>               tempNxt = temp->next;\n>             } else {\n>               tempNxt = cgc_delete_perms(node, temp);\n>             }\n>           } else {\n> \n>           }\n>           temp = tempNxt;\n>         }\n>         }\n",
        "569c569\n<     newNode->prev = (struct Node_s *)0;\n---\n> \n",
        "518a519\n>         {\n519a521,531\n>         if ((unsigned long )temp->user != (unsigned long )((pUser )0)) {\n>           tmp = cgc_is_user_valid(temp->user, workingData);\n>           if (tmp) {\n>             tempNxt = temp->next;\n>           } else {\n>             tempNxt = cgc_delete_perms(node, temp);\n>           }\n>         } else {\n> \n>         }\n>         }\n",
        "359a360\n>   {\n360a362,385\n>   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>       tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>       if (tmp___0 == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     tempPerm = tempPerm->next;\n>   }\n>   }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return (0);\n>     }\n",
        "659c659\n<   newFileChunk->next = (struct FileChunk_s *)0;\n---\n> \n",
        "879a880\n>   {\n880a882,887\n>   if ((unsigned long )temp == (unsigned long )user) {\n>     return (1);\n>   } else {\n> \n>   }\n>   }\n",
        "469a470\n>     {\n470a472,477\n>     if ((unsigned long )temp == (unsigned long )((pPerms )0)) {\n>       return ((pPerms )0);\n>     } else {\n> \n>     }\n>     }\n",
        "468c468\n<   retval = temp->next;\n---\n> \n",
        "358a359\n>   {\n359a361,362\n>   return ((pNode )0);\n>   }\n",
        "674c674\n<   tmp = cgc_mallocOrDie((int )sizeof(sFile ), (char *)\"Failed to malloc file\");\n---\n> \n",
        "1340c1340\n<   cgc_start_UI(workingData);\n---\n> \n",
        "364,366d363\n<       if (tmp == 0) {\n<         return (tempPerm);\n<       } else {\n368d364\n<       }\n",
        "361c361,373\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     }\n",
        "1093c1093\n<     group = newGroup;\n---\n> \n",
        "872,875d871\n<   while ((unsigned long )temp != (unsigned long )((pUser )0)) {\n<     if ((unsigned long )temp == (unsigned long )user) {\n<       return (1);\n<     } else {\n877,879d872\n<     }\n<     temp = temp->next;\n<   }\n",
        "362a363\n>       {\n363a365,366\n> \n>       }\n",
        "452c452\n<     newPerms->prev = lastPerm;\n---\n> \n",
        "559,560c559\n<   tmp___1 = cgc_mallocOrDie((int )(tmp___0 + 1UL),\n<                             (char *)\"Failed to malloc name\");\n---\n> \n",
        "558c558\n<   tmp___0 = cgc_strlen((char const   *)name);\n---\n> \n",
        "1303a1304\n>       {\n1304a1306,1314\n>       while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n>         if ((int )temp->type == 70) {\n>           return (temp->file);\n>         } else {\n> \n>         }\n>         temp = cgc_find_node_by_name(name, temp->next);\n>       }\n>       }\n",
        "652c652\n<     file->chunkCount = 1U;\n---\n> \n",
        "469a470\n>     {\n470a472,473\n>     return;\n>     }\n",
        "364a365\n>         {\n365a367,377\n>         if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>           tmp = cgc_strcmp((tempPerm->user)->name, name);\n>           if (tmp == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         }\n",
        "1209,1216d1208\n<   if ((unsigned long )end == (unsigned long )start) {\n<     tmp = cgc_strlen((char const   *)end->name);\n<     tmp___0 = cgc_mallocOrDie((int )(tmp + 2UL),\n<                               (char *)\"Failed to allocate endName\");\n<     path = (char *)tmp___0;\n<     cgc_strcpy(path, end->name);\n<     return (path);\n<   } else {\n1218d1209\n<   }\n",
        "586,589c586\n<   while ((unsigned long )temp != (unsigned long )((pFileChunk )0)) {\n<     size += temp->chunkSize;\n<     temp = temp->next;\n<   }\n---\n> \n",
        "796c796\n<   tmp = cgc__add_node((char)68, date, name, parent, user);\n---\n> \n",
        "425c425\n<     node->perms = newPerms;\n---\n> \n",
        "420c420\n<     newPerms->group = group;\n---\n> \n",
        "1338a1339\n>   {\n1339a1341,1342\n>   return (1);\n>   }\n",
        "359a360\n>   {\n360a362,363\n>   return;\n>   }\n",
        "302c302\n<   retval = tmp;\n---\n> \n",
        "518a519\n>         {\n519a521,526\n>         if ((unsigned long )temp != (unsigned long )((pPerms )0)) {\n> \n>         } else {\n>           break;\n>         }\n>         }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return (1);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "675c675\n<   newFile = (pFile )tmp;\n---\n> \n",
        "1213c1213\n<     path = (char *)tmp___0;\n---\n> \n",
        "362a363\n>       {\n363a365,366\n>       return (1);\n>       }\n",
        "427c427\n<     lastPerm = node->perms;\n---\n> \n",
        "469a470\n>     {\n470a472,477\n>     if ((unsigned long )temp->prev != (unsigned long )((struct Perms_s *)0)) {\n>       (temp->prev)->next = temp->next;\n>     } else {\n> \n>     }\n>     }\n",
        "1146c1146\n<   return (newGroupUserListNode);\n---\n> \n",
        "360a361\n>   {\n382a384,385\n>   }\n> \n",
        "587c587\n<     size += temp->chunkSize;\n---\n> \n",
        "1265,1267d1264\n<     if (tmp == 0) {\n<       return (temp);\n<     } else {\n1269d1265\n<     }\n",
        "646c646\n<   cgc_memcpy((void *)newFileChunk->chunk, (void *)data, (cgc_size_t )size);\n---\n> \n",
        "469a470\n>     {\n470a472,473\n>     return (0);\n>     }\n",
        "1129c1129\n<   newGroupUserListNode->user = user;\n---\n> \n",
        "469a470\n>     {\n470a472,473\n>     return ((pGroupUserList )0);\n>     }\n",
        "825c825\n<     return (newUser);\n---\n> \n",
        "1338a1339\n>   {\n1339a1341,1342\n>   return (0);\n>   }\n",
        "517c517\n<         tempNxt = temp->next;\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return (1);\n>     }\n",
        "362a363\n>       {\n363a365,366\n>       return (tempPerm);\n>       }\n",
        "799c799\n<   newDirectory->directoryTailNode = (struct Node_s *)0;\n---\n> \n",
        "1338c1338\n<   tmp = cgc_init_data();\n---\n> \n",
        "358a359\n>   {\n359a361,371\n>   if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>     tmp = cgc_strcmp((tempPerm->user)->name, name);\n>     if (tmp == 0) {\n>       return (tempPerm);\n>     } else {\n> \n>     }\n>   } else {\n> \n>   }\n>   }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return;\n>     }\n",
        "1339a1340\n>   {\n1340a1342,1343\n>   return (0);\n>   }\n",
        "1084,1085c1084\n<   tmp___1 = cgc_mallocOrDie((int )(tmp___0 + 1UL),\n<                             (char *)\"Failed to allocate groupName\");\n---\n> \n",
        "1130c1130\n<   newGroupUserListNode->next = (struct GroupUserList_s *)0;\n---\n> \n",
        "359a360\n>   {\n360a362,363\n>   return ((pGroupUserList )0);\n>   }\n",
        "342c342\n<   (workingData->root)->file = (pFile )0;\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return;\n>       }\n>     } else {\n>       break;\n>     }\n",
        "1263,1267d1262\n<   while ((unsigned long )temp != (unsigned long )((pNode )0)) {\n<     tmp = cgc_strcmp(name, temp->name);\n<     if (tmp == 0) {\n<       return (temp);\n<     } else {\n1269,1271d1263\n<     }\n<     temp = temp->next;\n<   }\n",
        "365c365\n<         return (tempPerm);\n---\n> \n",
        "308c308\n<   cgc_bzero(retval, (cgc_size_t )size);\n---\n> \n",
        "585c585\n<   size = 0U;\n---\n> \n",
        "536c536\n<   return;\n---\n> \n",
        "685c685\n<   return (newNode);\n---\n> \n",
        "566,574c566\n<   if ((unsigned long )parent->directoryHeadNode == (unsigned long )((struct Node_s *)0)) {\n<     parent->directoryHeadNode = newNode;\n<     parent->directoryTailNode = newNode;\n<     newNode->prev = (struct Node_s *)0;\n<   } else {\n<     (parent->directoryTailNode)->next = newNode;\n<     newNode->prev = parent->directoryTailNode;\n<     parent->directoryTailNode = newNode;\n<   }\n---\n> \n",
        "1214c1214\n<     cgc_strcpy(path, end->name);\n---\n> \n",
        "647c647\n<   newFileChunk->chunkSize = size;\n---\n> \n",
        "683c683\n<   newNode = tmp___1;\n---\n> \n",
        "1337a1338\n>   {\n1338a1340,1341\n>   return ((pGroupUserList )0);\n>   }\n",
        "358a359\n>   {\n359a361,362\n>   return (0);\n>   }\n",
        "815c815\n<   newUser = (pUser )tmp;\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       return ((pNode )0);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "513,521d512\n<   while ((unsigned long )temp != (unsigned long )((pPerms )0)) {\n<     if ((unsigned long )temp->user != (unsigned long )((pUser )0)) {\n<       tmp = cgc_is_user_valid(temp->user, workingData);\n<       if (tmp) {\n<         tempNxt = temp->next;\n<       } else {\n<         tempNxt = cgc_delete_perms(node, temp);\n<       }\n<     } else {\n523,535d513\n<     }\n<     if ((unsigned long )temp->group != (unsigned long )((pGroup )0)) {\n<       tmp___0 = cgc_is_group_valid(temp->group, workingData);\n<       if (tmp___0) {\n<         tempNxt = temp->next;\n<       } else {\n<         tempNxt = cgc_delete_perms(node, temp);\n<       }\n<     } else {\n< \n<     }\n<     temp = tempNxt;\n<   }\n",
        "412c412\n<   tmp = cgc_mallocOrDie((int )sizeof(sPerms ), (char *)\"Failed to malloc pPerms\");\n---\n> \n",
        "503,507d502\n<   if ((unsigned long )temp->user == (unsigned long )((pUser )0)) {\n<     if ((unsigned long )temp->group == (unsigned long )((pGroup )0)) {\n<       cgc_printf(\"Bad perm @s\\n\", node->name);\n<       return;\n<     } else {\n509,512d503\n<     }\n<   } else {\n< \n<   }\n",
        "484c484\n<   cgc_free((void *)temp);\n---\n> \n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return ((pGroupUserList )0);\n>     }\n",
        "679a680\n>     {\n680a682,683\n>     return;\n>     }\n",
        "679a680\n>     {\n680a682,683\n>     return (newNode);\n>     }\n",
        "1264c1264\n<     tmp = cgc_strcmp(name, temp->name);\n---\n> \n",
        "1088c1088\n<   newGroup->name = newName;\n---\n> \n",
        "431,433d430\n<         if ((unsigned long )lastPerm->user == (unsigned long )user) {\n<           return ((pPerms )0);\n<         } else {\n435d431\n<         }\n",
        "1339a1340\n>   {\n1340a1342,1343\n> \n>   }\n",
        "1219,1221d1218\n<   if ((unsigned long )end->parent == (unsigned long )((struct Node_s *)0)) {\n<     return ((char *)0);\n<   } else {\n1223d1219\n<   }\n",
        "679a680\n>     {\n680a682,683\n>     newNode->file = newFile;\n>     }\n",
        "874c874\n<       return (1);\n---\n> \n",
        "327c327\n<   workingData->root = (pNode )tmp___0;\n---\n> \n",
        "448c448\n<       lastPerm = tempPerm;\n---\n> \n",
        "469a470\n>     {\n470a472,473\n>     cgc_free((void *)temp);\n>     }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     return ((pNode )0);\n>     }\n",
        "360a361\n>   {\n382a384,385\n>   }\n>   tmp = cgc_strcmp((tempPerm->user)->name, name);\n",
        "518a519\n>         {\n519a521,522\n>         tmp___0 = cgc_is_group_valid(temp->group, workingData);\n>         }\n",
        "362a363\n>       {\n363a365,366\n>       return ((pNode )0);\n>       }\n",
        "362a363\n>       {\n363a365,366\n>       return ((pGroupUserList )0);\n>       }\n",
        "333c333\n<   workingData->workingDir = workingData->root;\n---\n> \n",
        "1211,1212c1211\n<     tmp___0 = cgc_mallocOrDie((int )(tmp + 2UL),\n<                               (char *)\"Failed to allocate endName\");\n---\n> \n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return (tempPerm);\n",
        "361c361,373\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>     } else {\n>       break;\n>     }\n>     if (tmp == 0) {\n>       return (tempPerm);\n>     } else {\n> \n>     }\n>     }\n",
        "469a470\n>     {\n470a472,482\n>     if ((unsigned long )temp->next != (unsigned long )((struct Perms_s *)0)) {\n>       (temp->next)->prev = temp->prev;\n>       if ((unsigned long )temp->prev == (unsigned long )((struct Perms_s *)0)) {\n>         node->perms = temp->next;\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n>     }\n",
        "359a360\n>   {\n360a362,363\n>   return (1);\n>   }\n",
        "363a364\n>       {\n367a369,374\n>       }\n>       if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>       } else {\n>         break;\n>       }\n",
        "518a519\n>         {\n519a521,526\n>         if ((unsigned long )temp == (unsigned long )((pPerms )0)) {\n>           return;\n>         } else {\n> \n>         }\n>         }\n",
        "1089c1089\n<   newGroup->userCount = 0U;\n---\n> \n",
        "1090c1090\n<   newGroup->userList = (pGroupUserList )0;\n---\n> \n",
        "361c361,391\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>         if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>           tmp = cgc_strcmp((tempPerm->user)->name, name);\n>           if (tmp == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         if ((unsigned long )tempPerm->group != (unsigned long )((pGroup )0)) {\n>           tmp___0 = cgc_strcmp((tempPerm->group)->name, name);\n>           if (tmp___0 == 0) {\n>             return (tempPerm);\n>           } else {\n> \n>           }\n>         } else {\n> \n>         }\n>         tempPerm = tempPerm->next;\n>       }\n>       }\n>     } else {\n>       break;\n>     }\n",
        "1232c1232\n<   tmp___3 = cgc_strlen((char const   *)end->name);\n---\n> \n",
        "534c534\n<     temp = tempNxt;\n---\n> \n",
        "567c567\n<     parent->directoryHeadNode = newNode;\n---\n> \n",
        "879a880\n>   {\n880a882,883\n>   return;\n>   }\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return;\n",
        "1237c1237\n<   cgc_strcat(retpath, (char *)\"/\");\n---\n> \n",
        "550c550\n<   newNode = (pNode )tmp;\n---\n> \n",
        "309c309\n<   return (retval);\n---\n> \n",
        "518a519\n>         {\n519a521,526\n>         if (tmp) {\n>           tempNxt = temp->next;\n>         } else {\n>           tempNxt = cgc_delete_perms(node, temp);\n>         }\n>         }\n",
        "1131,1145c1131\n<   if ((unsigned long )group->userList == (unsigned long )((pGroupUserList )0)) {\n<     group->userList = newGroupUserListNode;\n<     newGroupUserListNode->prev = (struct GroupUserList_s *)0;\n<     group->userCount = 1U;\n<   } else {\n<     last = group->userList;\n<     temp = last;\n<     while ((unsigned long )temp != (unsigned long )((pGroupUserList )0)) {\n<       last = temp;\n<       temp = temp->next;\n<     }\n<     last->next = newGroupUserListNode;\n<     newGroupUserListNode->prev = last;\n<     (group->userCount) ++;\n<   }\n---\n> \n",
        "338c338\n<   cgc_add_user_to_group(workingData->user, workingData->group);\n---\n> \n",
        "449c449\n<       tempPerm = lastPerm->next;\n---\n> \n",
        "330c330\n<   (workingData->root)->date = 0U;\n---\n> \n",
        "424,433d423\n<   if ((unsigned long )node->perms == (unsigned long )((pPerms )0)) {\n<     node->perms = newPerms;\n<   } else {\n<     lastPerm = node->perms;\n<     tempPerm = lastPerm;\n<     while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n<       if ((unsigned long )lastPerm->user != (unsigned long )((pUser )0)) {\n<         if ((unsigned long )lastPerm->user == (unsigned long )user) {\n<           return ((pPerms )0);\n<         } else {\n435,454d424\n<         }\n<       } else {\n< \n<       }\n<       if ((unsigned long )lastPerm->group != (unsigned long )((pGroup )0)) {\n<         if ((unsigned long )lastPerm->group == (unsigned long )group) {\n<           return ((pPerms )0);\n<         } else {\n< \n<         }\n<       } else {\n< \n<       }\n<       lastPerm = tempPerm;\n<       tempPerm = lastPerm->next;\n<     }\n<     lastPerm->next = newPerms;\n<     newPerms->prev = lastPerm;\n<     newPerms->next = (struct Perms_s *)0;\n<   }\n",
        "364a365\n>         {\n365a367,368\n>         tmp = cgc_strcmp((tempPerm->user)->name, name);\n>         }\n",
        "359c359\n<   cgc_validate_current_perms(node, workingData);\n---\n> \n",
        "518a519\n>         {\n519a521,526\n>         if (tmp___0) {\n>           tempNxt = temp->next;\n>         } else {\n>           tempNxt = cgc_delete_perms(node, temp);\n>         }\n>         }\n",
        "1083c1083\n<   tmp___0 = cgc_strlen((char const   *)name);\n---\n> \n",
        "361a362\n>     {\n369a371,372\n> \n>     }\n",
        "1304c1304\n<       return (temp->file);\n---\n> \n",
        "518a519\n>         {\n519a521,522\n>         temp = node->perms;\n>         }\n",
        "361c361,373\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n> \n>       } else {\n>         break;\n>       }\n>       }\n>     } else {\n>       break;\n>     }\n",
        "363a364\n>       {\n367a369,370\n>       }\n>       return (0);\n",
        "359a360\n>   {\n360a362,363\n>   cgc_validate_current_perms(node, workingData);\n>   }\n",
        "1226,1228d1225\n<   if ((unsigned long )path___0 == (unsigned long )((char *)0)) {\n<     return ((char *)0);\n<   } else {\n1230d1226\n<   }\n",
        "361c361,369\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n>     if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n>       {\n> \n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       }\n>     } else {\n>       break;\n>     }\n",
        "359a360\n>   {\n360a362,367\n>   if (tmp == 0) {\n>     return (tempPerm);\n>   } else {\n> \n>   }\n>   }\n",
        "358a359\n>   {\n359a361,362\n>   return;\n>   }\n",
        "1339c1339\n<   workingData = tmp;\n---\n> \n",
        "1337a1338\n>   {\n1338a1340,1341\n>   return (0);\n>   }\n",
        "554c554\n<   newNode->directoryHeadNode = (struct Node_s *)0;\n---\n> \n",
        "1126,1127c1126\n<   tmp = cgc_mallocOrDie((int )sizeof(sGroupUserList ),\n<                         (char *)\"Failed to allocate newUser\");\n---\n> \n",
        "879a880\n>   {\n880a882,883\n>   return ((pGroupUserList )0);\n>   }\n",
        "821c821\n<   newUser->name = newName;\n---\n> \n",
        "496c496\n<   temp = node->perms;\n---\n> \n",
        "361a362\n>     {\n370a372,382\n>     }\n>     if ((unsigned long )tempPerm->user != (unsigned long )((pUser )0)) {\n>       tmp = cgc_strcmp((tempPerm->user)->name, name);\n>       if (tmp == 0) {\n>         return (tempPerm);\n>       } else {\n> \n>       }\n>     } else {\n> \n>     }\n",
        "364a365\n>         {\n365a367,368\n>         return ((pGroupUserList )0);\n>         }\n",
        "679a680\n>     {\n680a682,683\n>     tmp___0 = cgc_add_file_chunk(data, newFile, size);\n>     }\n",
        "469a470\n>     {\n470a472,473\n> \n>     }\n",
        "1128c1128\n<   newGroupUserListNode = (pGroupUserList )tmp;\n---\n> \n",
        "470c470\n<     (temp->prev)->next = temp->next;\n---\n> \n",
        "1281c1281\n<   tmp = cgc_find_node_by_name(name, directory->directoryHeadNode);\n---\n> \n",
        "469,471d468\n<   if ((unsigned long )temp->prev != (unsigned long )((struct Perms_s *)0)) {\n<     (temp->prev)->next = temp->next;\n<   } else {\n473d469\n<   }\n",
        "360a361\n>   {\n382a384,389\n>   }\n>   if (tmp == 0) {\n>     return (tempPerm);\n>   } else {\n> \n>   }\n",
        "361c361,362\n<   while ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {\n---\n>   while (1) {\n> \n",
        "361a362\n>     {\n370a372,373\n>     }\n>     return ((pGroupUserList )0);\n",
        "474,478d473\n<   if ((unsigned long )temp->next != (unsigned long )((struct Perms_s *)0)) {\n<     (temp->next)->prev = temp->prev;\n<     if ((unsigned long )temp->prev == (unsigned long )((struct Perms_s *)0)) {\n<       node->perms = temp->next;\n<     } else {\n480,483d474\n<     }\n<   } else {\n< \n<   }\n",
        "1338a1339\n>   {\n1339a1341,1342\n>   cgc_start_UI(workingData);\n>   }\n",
        "679a680\n>     {\n680a682,683\n>     return (0);\n>     }\n",
        "682c682\n<   tmp___1 = cgc__add_node((char)70, date, name, directory, user);\n---\n> \n"
      ]
    }
  ],
  "compilations": 430,
  "failed_compilations": 21,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 11
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 12
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 9
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 11
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 12
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 10
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "777e0fe0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "48322382": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7c409e5f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "855a774a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "05553efa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "00b37a12": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ba53544e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e34830a7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9237da33": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b7911334": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4f542d86": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "da732c06": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "11bd5ff6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "13426958": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "09a38881": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4bfd73ce": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000015/src/service.i:882:3: error: non-void function 'cgc_is_user_valid' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "a42597fd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "05625071": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1c9e3094": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9c683535": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "01754cb5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "1c634d87": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6c764de1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "74e3e8b5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000023/src/service.i:682:5: error: non-void function 'cgc_add_file' should return a value [-Wreturn-type]\n    return;\n    ^\n1 error generated.\n"
      ]
    },
    "cf4e27e9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "05945a87": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9cf02d4c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "7d63e0b3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "61b31d72": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c9fd63b6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1fefb1a3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0be1d6a1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "53cf0961": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ce4fa113": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000033/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]\n        return (0);\n        ^      ~~~\n1 error generated.\n"
      ]
    },
    "0caf78e6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bc87ed21": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000035/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]\n        return ((pNode )0);\n        ^      ~~~~~~~~~~~\n1 error generated.\n"
      ]
    },
    "140c8c30": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d2ae90e0": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000037/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]\n        return ((pGroupUserList )0);\n        ^      ~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"
      ]
    },
    "6795a7e1": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000038/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]\n        return (1);\n        ^      ~~~\n1 error generated.\n"
      ]
    },
    "8151c7e6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1ac17af4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "72d57477": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1261202d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1de46668": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "76e779d2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9e415441": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "97444ca5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7c63f7df": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "997b9c72": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "043365dd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "77dac647": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "90c09f96": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4e04389b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "76a762a4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "06dc0d59": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "16476b1d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1101268e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2404aa8a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000057/src/service.i:472:5: error: non-void function 'cgc_delete_perms' should return a value [-Wreturn-type]\n    return;\n    ^\n1 error generated.\n"
      ]
    },
    "eb1d3386": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1deb8bd7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1efb6599": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f013789c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a9027935": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "73d23fa7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c60ec86c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5d25b2da": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f4e57211": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e7ac43d9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0dabcde0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "3e2f0e6c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fa746cd9": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000070/src/service.i:367:9: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n        return;\n        ^\n1 error generated.\n"
      ]
    },
    "5e4c8072": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7a41eb80": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8b58d284": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6021af81": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2e92999c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7d227b63": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f7118052": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "04ab4e4e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e6ad1704": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e3430c41": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "28037385": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "38c166fe": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cf0bff0b": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000083/src/service.i:370:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n      return;\n      ^\n1 error generated.\n"
      ]
    },
    "d5cc113c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "54471d37": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1baa9f99": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f1a500d9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d3d555fa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d2fb1a9b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "96778e8b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2c230a0a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea615437": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "35bc4f79": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d9bbca83": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b17f7ec0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e59a81c2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a014b341": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000097/src/service.i:365:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n      return;\n      ^\n1 error generated.\n"
      ]
    },
    "60a1f400": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "5878253b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cfd19f61": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d882032f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "61c6a947": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4a0c7113": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aadd9f78": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e226b8b4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "473ec04c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d347551e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f1709269": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4b706555": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cc5599ab": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "97087d45": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000111/src/service.i:373:5: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n    return;\n    ^\n1 error generated.\n"
      ]
    },
    "5a391f01": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ef4a6e1b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bf3896ca": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2b6b2384": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7c275a70": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "147dff8a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6190708e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "11ef52b3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "db40c5e2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1e08504a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "39f35548": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "635cbb27": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "69ed668a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "695fdbaa": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000125/src/service.i:365:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n      return;\n      ^\n1 error generated.\n"
      ]
    },
    "b772bc62": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "26f90c0b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "729b7042": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "abf2758f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b9d2b5e5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "de931de3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d4af0016": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "49872477": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "cd0a7062": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "33d49649": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cc1a77d0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ee457d13": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c7bf0259": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c8979f04": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000139/src/service.i:368:5: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n    return;\n    ^\n1 error generated.\n"
      ]
    },
    "0a8f3e28": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "149500e1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "c62bac10": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2f65669d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "4c399aa0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "166e8754": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9af2ea01": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "de7ed9eb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "befd5dbf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "751e4b44": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9589c543": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c9fe495a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "24fb2d14": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "38554003": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000153/src/service.i:385:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "bdd90517": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bf4ab514": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ffe293ea": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2f4e2000": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a79f3503": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bcc2046b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fb8c02e0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cedbcf88": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8695f044": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a480a83a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0d6707bc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "74dbea27": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1ca9cf71": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000166/src/service.i:362:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "7541a398": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "727eac8e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a79c4d6a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0f4de37d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "13bcaf52": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c0925652": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4cc3a2bc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "375a675e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "962e9d4c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aeafc15e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e84bca00": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0873f441": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c7ff31f3": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000179/src/service.i:361:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "ce92eee4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c05dcbec": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "71b732b6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "78aaad95": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b3d8a520": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ff09be62": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "12365352": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f688ac77": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "4854db23": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0446616e": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9fba619e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "513222be": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3375f2ed": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c2f90f02": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "3f414f09": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "60aa8379": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "06c2c1f1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "087ffd82": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "24e66903": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0b1904d4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "48d990f1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d262b23e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "877b3c45": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c0b46b74": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "196a09ea": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "69695815": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "20b65a8b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "58598039": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "75a8091f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "64277cc9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f3f6bb99": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3220d882": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1c3c3c1b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fb67026d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c9aa1839": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "eca9033d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1d47db5d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c8ff7ef1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c24a7429": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9b9ebe33": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "52edea57": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b248f5ef": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aa2c5eb3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1e2d23d8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c95ffc0d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "49298e97": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "17862749": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8b3dd703": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ab36ec5b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6ef7019b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "90339f0d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3095744c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "809b3662": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4135c01b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b745bbce": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bb46fb59": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "29beb975": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "35a99a37": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a533eb65": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "88a9e49a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 18
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ]
      }
    },
    "0e86231a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ceeddda9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3593c604": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "54535fa8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2df860d7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f643eb4c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7e041b3a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "9b5d653c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aeb93e00": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fe3a8db0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c1a101bd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "49abfd5e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "719113ba": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "1004f958": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "37bdf65c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ac4d9161": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f5c94343": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "72f03d7d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0f377a52": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a156af24": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "05a1c1e5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d17c6555": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "f35a497e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "621e9374": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "23cbf3fe": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "546f46ef": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d59a4231": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1a775916": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1e0f8176": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "a847a6f4": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ]
      }
    },
    "6da583d5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9b1ac4c4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f70a4ddf": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ]
      }
    },
    "85b30476": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5df2fbd1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d19b0d23": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0a7e5f23": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3f8b27c2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a3e44043": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "72e58d7a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6bb6e08a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d2f10b98": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "adb58d4c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bb03317b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aff4a66c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d83c55d9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9e1ee327": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "adc62207": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cf44a6b7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9ff01b61": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "5c20dfe8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f422de2e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "07e355ce": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6f07381e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b9ea8569": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "98a501b7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bc1c1c88": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "87c7b4e6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a7db9c7d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4588d5d3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "57988d1a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f8ccea02": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0b601c73": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "63b85e5d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "388d4189": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8092991d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "b1cd41aa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c5c34372": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c1739151": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ab3b9ce6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "653ee817": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "df669b2c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1388dc7c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9d412223": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ad6dd392": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "eabf00bc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2c803f3c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "68a90d74": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6c40d1ff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c60fbbfb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cfa05f61": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "316a7fa6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f0f97fb7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d26404ee": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6b41ce14": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4f9a0c6a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c0409874": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c80a019c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "676c2722": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "1c0cac90": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "94e9ce4b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "0f833e6b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "40f5811d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "40fc1181": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2d82e723": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "48d6fca0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cfb6a563": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d2efacc0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea115f6f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "50783c6d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4176d41a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "50b0a6b6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bcc18ac5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5dd29013": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c2bea2ae": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "29b9de03": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d4709bf8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d5e7bdad": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "79dbacab": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ca947f2b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "06536c8b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f5be042b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d68969af": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "85beb294": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e8a3f155": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ef067afa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "dbd5498c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f7061259": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fc0740a5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4e8cc41f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b4b0b57a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3c148870": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "43927444": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "38c74646": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2c9bf212": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5699f9dd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "40a01ced": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "605e7928": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0ee1e16c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e2f4486e": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "17b95a9a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a8b1820f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5b19fa95": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "138bba9c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1698d29d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9846e794": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "19075412": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "35d935cf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "41eb9215": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "57e4ea51": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "930ac6de": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ]
      }
    },
    "c171f013": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fd6adb44": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 35
          }
        ]
      }
    },
    "8b1e65e8": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "78acd6a9": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "45b1b8fd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "451a3d6a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0fcc294a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0b713642": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9df2698b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8deef7cd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9d44c0ca": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "894b4039": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "10b22097": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "39a33586": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2ead4b86": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cb011bdf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "83d8fb63": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "182f0335": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8e1a79a4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "393c8ec8": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d8ff253e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7282dd3e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2c54a706": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b38f3b47": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "7f380ba3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8c4ba341": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000406/src/service.i:1342:3: error: non-void function 'main' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "3d7a51c7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3afd8c4f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2cf612df": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "72870f10": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4dbd6536": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9d82edd2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "65b1b226": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0ed0d887": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9301b0ae": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000415/src/service.i:1341:3: error: non-void function 'main' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "ea47f0fd": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7e728d8d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "889e381a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b0e35ed0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1a1694f5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3eb60baf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b6acef0d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "41fa69a3": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000423/src/service.i:1340:3: error: non-void function 'main' should return a value [-Wreturn-type]\n  return;\n  ^\n1 error generated.\n"
      ]
    },
    "033a9831": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2dcc170d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3cf887e8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "25cf51d1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3dad9524": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b655b8a6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3bca0024": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4dd5d163": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c9ae221a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9cba1cbf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "70d17001": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000434/src/service.i:1306:7: error: non-void function 'cgc_find_file_by_name' should return a value [-Wreturn-type]\n      return;\n      ^\n1 error generated.\n"
      ]
    },
    "3d065c82": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "2c6af63e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d7904b28": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "31d2ede5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "2cf03692": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6595d282": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9af62d6a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d1d55af6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f7717954": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4d1f6a52": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2150b0ee": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d1b75d5a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/AE/SPIFFS_0/000446/src/service.i:1309:5: error: non-void function 'cgc_find_file_by_name' should return a value [-Wreturn-type]\n    return;\n    ^\n1 error generated.\n"
      ]
    },
    "3f2780ec": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "2b7a0edd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    }
  },
  "neg_tests": 2,
  "pos_tests": 20,
  "passed_neg_tests": 41,
  "passed_pos_tests": 50,
  "failed_neg_tests": 410,
  "failed_pos_tests": 22,
  "duration": 3600.026625,
  "errors": [
    "cat: /etc/redhat-release: No such file or directory",
    "\u001b[1;31m/data/AE/SPIFFS_0/000015/src/service.i:882:3: error: non-void function 'cgc_is_user_valid' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000023/src/service.i:682:5: error: non-void function 'cgc_add_file' should return a value [-Wreturn-type]",
    "    return;",
    "    ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000033/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]",
    "        return (0);",
    "        ^      ~~~",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000035/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]",
    "        return ((pNode )0);",
    "        ^      ~~~~~~~~~~~",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000037/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]",
    "        return ((pGroupUserList )0);",
    "        ^      ~~~~~~~~~~~~~~~~~~~~",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000038/src/service.i:521:9: error: void function 'cgc_validate_current_perms' should not return a value [-Wreturn-type]",
    "        return (1);",
    "        ^      ~~~",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000057/src/service.i:472:5: error: non-void function 'cgc_delete_perms' should return a value [-Wreturn-type]",
    "    return;",
    "    ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000070/src/service.i:367:9: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "        return;",
    "        ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000083/src/service.i:370:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "      return;",
    "      ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000097/src/service.i:365:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "      return;",
    "      ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000111/src/service.i:373:5: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "    return;",
    "    ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000125/src/service.i:365:7: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "      return;",
    "      ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000139/src/service.i:368:5: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "    return;",
    "    ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000153/src/service.i:385:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000166/src/service.i:362:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000179/src/service.i:361:3: error: non-void function 'cgc_find_perm_by_name' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Bug: BF(Liveness): stmtStartData is not initialized for 60: _L: /* CIL Label */ ",
    "#line 96",
    "if ((unsigned long )user != (unsigned long )((pUser )0)) {",
    "#line 96",
    "  if ((unsigned long )group != (unsigned long )((pGroup )0)) {",
    "#line 96 \"/data/AE/SPIFFS_0/SPIFFS/src/service.c\"",
    "    cgc_die((char *)\"Bad call to _add_perm\");",
    "  } else {",
    "",
    "  }",
    "} else {",
    "",
    "}",
    "Liveness failed on function:",
    " pPerms cgc_add_perm(pUser user , pGroup group , pNode node ) ",
    "{ ",
    "  pPerms newPerms ;",
    "  void *tmp ;",
    "  pPerms lastPerm ;",
    "  pPerms tempPerm ;",
    "",
    "  {",
    "   56: /* CIL Label */ ",
    "#line 96",
    "  if ((unsigned long )user == (unsigned long )((pUser )0)) {",
    "     57: /* CIL Label */ ",
    "#line 96",
    "    if ((unsigned long )group == (unsigned long )((pGroup )0)) {",
    "       58: /* CIL Label */ ",
    "#line 96",
    "      cgc_die((char *)\"Bad call to _add_perm\");",
    "    } else {",
    "       -59: /* CIL Label */ ",
    "#line 96",
    "      goto _L;",
    "    }",
    "  } else {",
    "     0: /* CIL Label */ ",
    "    _L: ;",
    "  }",
    "   65: /* CIL Label */ ",
    "#line 97",
    "  tmp = cgc_mallocOrDie((int )sizeof(sPerms ), (char *)\"Failed to malloc pPerms\");",
    "   66: /* CIL Label */ ",
    "#line 97",
    "  newPerms = (pPerms )tmp;",
    "   67: /* CIL Label */ ",
    "#line 98",
    "  if ((unsigned long )user != (unsigned long )((pUser )0)) {",
    "     68: /* CIL Label */ ",
    "#line 99",
    "    newPerms->user = user;",
    "  } else {",
    "     69: /* CIL Label */ ;",
    "  }",
    "   70: /* CIL Label */ ",
    "#line 101",
    "  if ((unsigned long )group != (unsigned long )((pGroup )0)) {",
    "     71: /* CIL Label */ ",
    "#line 102",
    "    newPerms->group = group;",
    "  } else {",
    "     72: /* CIL Label */ ;",
    "  }",
    "   73: /* CIL Label */ ",
    "#line 104",
    "  if ((unsigned long )node->perms == (unsigned long )((pPerms )0)) {",
    "     74: /* CIL Label */ ",
    "#line 105",
    "    node->perms = newPerms;",
    "  } else {",
    "     75: /* CIL Label */ ",
    "#line 107",
    "    lastPerm = node->perms;",
    "     76: /* CIL Label */ ",
    "#line 108",
    "    tempPerm = lastPerm;",
    "     77: /* CIL Label */ ",
    "#line 109",
    "    while (1) {",
    "       78: /* CIL Label */ ",
    "#line 109",
    "      if ((unsigned long )tempPerm != (unsigned long )((pPerms )0)) {",
    "         79: /* CIL Label */ ;",
    "      } else {",
    "         -80: /* CIL Label */ ",
    "#line 109",
    "        break;",
    "      }",
    "       81: /* CIL Label */ ",
    "#line 110",
    "      if ((unsigned long )lastPerm->user != (unsigned long )((pUser )0)) {",
    "         82: /* CIL Label */ ",
    "#line 110",
    "        if ((unsigned long )lastPerm->user == (unsigned long )user) {",
    "           83: /* CIL Label */ ",
    "#line 111",
    "          return ((pPerms )0);",
    "        } else {",
    "           84: /* CIL Label */ ;",
    "        }",
    "      } else {",
    "         85: /* CIL Label */ ;",
    "      }",
    "       86: /* CIL Label */ ",
    "#line 113",
    "      if ((unsigned long )lastPerm->group != (unsigned long )((pGroup )0)) {",
    "         87: /* CIL Label */ ",
    "#line 113",
    "        if ((unsigned long )lastPerm->group == (unsigned long )group) {",
    "           88: /* CIL Label */ ",
    "#line 114",
    "          return ((pPerms )0);",
    "        } else {",
    "           89: /* CIL Label */ ;",
    "        }",
    "      } else {",
    "         90: /* CIL Label */ ;",
    "      }",
    "       91: /* CIL Label */ ",
    "#line 116",
    "      lastPerm = tempPerm;",
    "       92: /* CIL Label */ ",
    "#line 117",
    "      tempPerm = lastPerm->next;",
    "    }",
    "     93: /* CIL Label */ ",
    "#line 119",
    "    lastPerm->next = newPerms;",
    "     94: /* CIL Label */ ",
    "#line 120",
    "    newPerms->prev = lastPerm;",
    "     95: /* CIL Label */ ",
    "#line 121",
    "    newPerms->next = (struct Perms_s *)0;",
    "  }",
    "   96: /* CIL Label */ ",
    "#line 123",
    "  return (newPerms);",
    "}",
    "}",
    "",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000406/src/service.i:1342:3: error: non-void function 'main' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000415/src/service.i:1341:3: error: non-void function 'main' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000423/src/service.i:1340:3: error: non-void function 'main' should return a value [-Wreturn-type]",
    "  return;",
    "  ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000434/src/service.i:1306:7: error: non-void function 'cgc_find_file_by_name' should return a value [-Wreturn-type]",
    "      return;",
    "      ^",
    "1 error generated.\u001b[0m",
    "\u001b[1;31m/data/AE/SPIFFS_0/000446/src/service.i:1309:5: error: non-void function 'cgc_find_file_by_name' should return a value [-Wreturn-type]",
    "    return;",
    "    ^",
    "1 error generated.\u001b[0m",
    "",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}