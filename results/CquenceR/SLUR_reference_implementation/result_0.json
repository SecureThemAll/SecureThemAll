{
  "repair_begin": "2021-05-07 11:30:09.675532",
  "repair_end": "2021-05-07 11:33:59.365320",
  "patches": [
    {
      "target_file": "src/eval.c",
      "fix": "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst )==0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake)) ;\n",
      "edits": [
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR)=n ;\n",
        "264c264,265\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e)){\n> }\n354c355\n<     CDR(CDR(cake)) = n;\n---\n> CDR=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> result ;\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> static\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> break=n ;\n",
        "264c264,266\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e)){\n> return NULL ;\n> }\n354c356\n<     CDR(CDR(cake)) = n;\n---\n> }\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(n);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value,z->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst )==0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake)) ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> result NULL ;\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(li))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst->name.name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(CDR))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e,z))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(break)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value.fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> return NULL ;\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(n)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(z)){\n354c354,356\n<     CDR(CDR(cake)) = n;\n---\n> if(CDR<0){\n> return NULL ; \n> }\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e )==0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR();\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e )==NULL)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->name.name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(cake(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> result== 0 ;\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst->fst->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(li)){\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst==z))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(cake);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(n)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(break)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(z))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR()=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> result=0 ;\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z )!=0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z )==NULL)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ()) ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> result=NULL ;\n354c354,355\n<     CDR(CDR(cake)) = n;\n---\n> \n> \n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->name->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e )!=0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ())=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst)){\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst->name.name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR=NULL ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+0))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(n);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> \n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR();\n",
        "264c264,265\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst)){\n> }\n354c355\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake ()))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+EXP->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ()) ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value,z->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->name->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR<CDR>CDR ; \n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp ())\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ())=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp (!li))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(cake ())=n ;\n",
        "264c264,265\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e))\n> ( e);\n354c355\n<     CDR(CDR(cake)) = n;\n---\n> CDR(\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z ()))\n354c354,355\n<     CDR(CDR(cake)) = n;\n---\n> {\n> }\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name,z->value->name))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ()) ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(cgc_strcmp))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR()=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst==z))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(cake ())=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> \n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> {\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z->value->fst ()))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(sizeof(cake))=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name+z )==0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e->name )==0)\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR=NULL ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e.name,z->value->fst))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(cake)=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ())=n ;\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(e)){\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR);\n",
        "264c264\n<       if (cgc_strcmp(e->name, z->value->fst->name) == 0)\n---\n> if(cgc_strcmp(exptup_list))\n354c354\n<     CDR(CDR(cake)) = n;\n---\n> CDR(CDR ())=n ;\n"
      ]
    }
  ],
  "compilations": 5,
  "failed_compilations": 57,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "74b90f0b": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000000/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e))\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n1 error generated.\n"
      ]
    },
    "b38a38bb": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000001/src/eval.c:264:17: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e )==0)\n   ~~~~~~~~~~   ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000001/src/eval.c:354:1: error: expected expression\nCDR();\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "e01c98cb": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000002/src/eval.c:264:17: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e )!=0)\n   ~~~~~~~~~~   ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000002/src/eval.c:354:5: error: expected expression\nCDR(CDR ())=n ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "2094d0a4": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e)){\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:286:1: error: function definition is not allowed here\nDEF_LIST_APPEND(exptup, exptup_t *);\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_list.h:36:62: note: expanded from macro 'DEF_LIST_APPEND'\n  int name##_list_append(name##_list *list, data_type value) {  \\\n                                                             ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:289:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:362:34: error: function definition is not allowed here\nstatic sym_list *make_syms(void) {\n                                 ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:421:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:480:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000003/src/eval.c:254:1: note: to match this '{'\n{\n^\n8 errors generated.\n"
      ]
    },
    "96d91fbb": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000004/src/eval.c:264:15: error: use of undeclared identifier 'li'\nif(cgc_strcmp(li))\n              ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000004/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR\n^\n2 errors generated.\n"
      ]
    },
    "9c1f425e": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000005/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(z))\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000005/src/eval.c:354:1: error: expected expression\nCDR()=n ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "291e49fa": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000006/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exp_t *' (aka 'struct exp_t *'))\nif(cgc_strcmp(e->name+z->value->fst))\n              ~~~~~~~^~~~~~~~~~~~~~\n1 error generated.\n"
      ]
    },
    "dcac5110": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000007/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000007/src/eval.c:354:1: error: expected expression\nCDR();\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "aea4ccb5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000008/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 0\nif(cgc_strcmp ())\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000008/src/eval.c:354:5: error: expected expression\nCDR(CDR ())=n ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "4fa96ee6": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000009/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e))\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000009/src/eval.c:354:5: error: expected expression\nCDR(CDR ())=n ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "8de1e8c7": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fd581a97": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:264:17: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e )==NULL)\n   ~~~~~~~~~~   ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:354:1: error: unterminated function-like macro invocation\nCDR(\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:9: note: macro 'CDR' defined here\n#define CDR(e) (e->cdr)\n        ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:339:17: note: to match this '{'\n  if (cnt == 4) {\n                ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000011/src/eval.c:289:1: note: to match this '{'\n{\n^\n4 errors generated.\n"
      ]
    },
    "54e85553": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000012/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exptup_list *' (aka 'struct exptup_list *'))\nif(cgc_strcmp(e->name+z))\n              ~~~~~~~^~\n1 error generated.\n"
      ]
    },
    "f3810eab": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000013/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exptup_list *' (aka 'struct exptup_list *'))\nif(cgc_strcmp(e->name+z )!=0)\n              ~~~~~~~^~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000013/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR);\n    ^\n2 errors generated.\n"
      ]
    },
    "d7e41349": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:264:15: error: use of undeclared identifier 'li'\nif(cgc_strcmp(li)){\n              ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:286:1: error: function definition is not allowed here\nDEF_LIST_APPEND(exptup, exptup_t *);\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_list.h:36:62: note: expanded from macro 'DEF_LIST_APPEND'\n  int name##_list_append(name##_list *list, data_type value) {  \\\n                                                             ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:289:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:362:34: error: function definition is not allowed here\nstatic sym_list *make_syms(void) {\n                                 ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:421:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:480:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000014/src/eval.c:254:1: note: to match this '{'\n{\n^\n8 errors generated.\n"
      ]
    },
    "2207e8e4": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000015/src/eval.c:264:25: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(cgc_strcmp))\n   ~~~~~~~~~~           ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000015/src/eval.c:354:1: error: expected expression\nCDR()=n ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "ad7ca64b": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000016/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exptup_list *' (aka 'struct exptup_list *'))\nif(cgc_strcmp(e->name+z )==0)\n              ~~~~~~~^~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000016/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR);\n    ^\n2 errors generated.\n"
      ]
    },
    "12a9691a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000017/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e))\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000017/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR)=n ;\n    ^\n2 errors generated.\n"
      ]
    },
    "972d7d5e": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000018/src/eval.c:264:24: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e->name+0))\n   ~~~~~~~~~~          ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n1 error generated.\n"
      ]
    },
    "f7768d92": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000019/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e)){\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000019/src/eval.c:268:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000019/src/eval.c:355:1: error: use of undeclared identifier 'CDR'\nCDR=n ;\n^\n3 errors generated.\n"
      ]
    },
    "5da647e5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000020/src/eval.c:264:15: error: unexpected type name 'exptup_list': expected expression\nif(cgc_strcmp(exptup_list))\n              ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000020/src/eval.c:354:5: error: expected expression\nCDR(CDR ())=n ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "4078cc68": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000021/src/eval.c:354:5: error: expected expression\nCDR(break)=n ;\n    ^\n1 error generated.\n"
      ]
    },
    "cff05688": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000022/src/eval.c:264:22: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e->name))\n   ~~~~~~~~~~        ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000022/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR)=n ;\n^\n2 errors generated.\n"
      ]
    },
    "e4c3dc94": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000023/src/eval.c:264:17: error: use of undeclared identifier 'li'\nif(cgc_strcmp (!li))\n                ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000023/src/eval.c:354:10: error: called object type 'exp_t *' (aka 'struct exp_t *') is not a function or function pointer\nCDR(cake ())=n ;\n    ~~~~ ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:17: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                ^\n2 errors generated.\n"
      ]
    },
    "15c2655e": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(z)){\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:286:1: error: function definition is not allowed here\nDEF_LIST_APPEND(exptup, exptup_t *);\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_list.h:36:62: note: expanded from macro 'DEF_LIST_APPEND'\n  int name##_list_append(name##_list *list, data_type value) {  \\\n                                                             ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:289:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:364:34: error: function definition is not allowed here\nstatic sym_list *make_syms(void) {\n                                 ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:423:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:482:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:495:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000024/src/eval.c:254:1: note: to match this '{'\n{\n^\n8 errors generated.\n"
      ]
    },
    "9a5397bc": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000025/src/eval.c:267:7: error: expected expression\n      else\n      ^\n1 error generated.\n"
      ]
    },
    "cf9bfeee": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e))\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:268:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:355:1: error: unterminated function-like macro invocation\nCDR(\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:9: note: macro 'CDR' defined here\n#define CDR(e) (e->cdr)\n        ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:494:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:340:17: note: to match this '{'\n  if (cnt == 4) {\n                ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:494:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000026/src/eval.c:290:1: note: to match this '{'\n{\n^\n5 errors generated.\n"
      ]
    },
    "6da3295f": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000027/src/eval.c:264:38: error: no member named 'fst' in 'struct exp_t'\nif(cgc_strcmp(e->name+z->value->fst->fst))\n                      ~~~~~~~~~~~~~  ^\n1 error generated.\n"
      ]
    },
    "b7041adc": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000028/src/eval.c:354:1: error: 'break' statement not in loop or switch statement\nbreak=n ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000028/src/eval.c:354:6: error: expected expression\nbreak=n ;\n     ^\n2 errors generated.\n"
      ]
    },
    "5b2b2cb2": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000029/src/eval.c:264:23: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e->name )==0)\n   ~~~~~~~~~~         ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000029/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR=NULL ;\n^\n2 errors generated.\n"
      ]
    },
    "e308cb3f": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000030/src/eval.c:264:38: error: no member named 'fst' in 'struct exp_t'\nif(cgc_strcmp(e->name,z->value->fst->fst))\n                      ~~~~~~~~~~~~~  ^\n1 error generated.\n"
      ]
    },
    "0b94cf2b": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000031/src/eval.c:264:1: error: use of undeclared identifier 'result'\nresult=NULL ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000031/src/eval.c:267:7: error: expected expression\n      else\n      ^\n2 errors generated.\n"
      ]
    },
    "e6d28bc6": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000032/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exptup_list *' (aka 'struct exptup_list *'))\nif(cgc_strcmp(e->name+z )==NULL)\n              ~~~~~~~^~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000032/src/eval.c:354:5: error: expected expression\nCDR(CDR ()) ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "91257845": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000033/src/eval.c:264:33: error: no member named 'name' in 'exptup_t'\nif(cgc_strcmp(e->name+z->value->name))\n                      ~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000033/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR ;\n^\n2 errors generated.\n"
      ]
    },
    "3f2df660": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6011220a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000035/src/eval.c:264:16: error: too few arguments to function call, expected 2, have 1\nif(cgc_strcmp(e)){\n   ~~~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000035/src/eval.c:269:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000035/src/eval.c:360:3: error: expected identifier or '('\n  return ret;\n  ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000035/src/eval.c:361:1: error: extraneous closing brace ('}')\n}\n^\n4 errors generated.\n"
      ]
    },
    "6ccd2407": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000036/src/eval.c:264:1: error: use of undeclared identifier 'result'\nresult ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000036/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000036/src/eval.c:356:3: error: expected identifier or '('\n  }\n  ^\n3 errors generated.\n"
      ]
    },
    "4be3efb5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000037/src/eval.c:264:1: error: use of undeclared identifier 'result'\nresult=0 ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000037/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000037/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR);\n    ^\n3 errors generated.\n"
      ]
    },
    "3dc9ec0c": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000038/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exptup_t *')\nif(cgc_strcmp(e->name+z->value,z->value->fst))\n              ~~~~~~~^~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000038/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR)=n ;\n    ^\n2 errors generated.\n"
      ]
    },
    "8735413a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000039/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000039/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR=n ;\n^\n2 errors generated.\n"
      ]
    },
    "b9c56fb5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3b6ff43d": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:286:1: error: function definition is not allowed here\nDEF_LIST_APPEND(exptup, exptup_t *);\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_list.h:36:62: note: expanded from macro 'DEF_LIST_APPEND'\n  int name##_list_append(name##_list *list, data_type value) {  \\\n                                                             ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:289:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:362:34: error: function definition is not allowed here\nstatic sym_list *make_syms(void) {\n                                 ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:421:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:480:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000041/src/eval.c:254:1: note: to match this '{'\n{\n^\n7 errors generated.\n"
      ]
    },
    "6f50da9e": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000042/src/eval.c:264:25: error: called object type 'exptup_list *' (aka 'struct exptup_list *') is not a function or function pointer\nif(cgc_strcmp(e->name+z ()))\n                      ~ ^\n1 error generated.\n"
      ]
    },
    "6fad1f90": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000043/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'char *')\nif(cgc_strcmp(e->name+z->value->fst->name))\n              ~~~~~~~^~~~~~~~~~~~~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000043/src/eval.c:354:5: error: expected expression\nCDR(break)=n ;\n    ^\n2 errors generated.\n"
      ]
    },
    "d5f34963": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000044/src/eval.c:264:1: error: use of undeclared identifier 'result'\nresult== 0 ;\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000044/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000044/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR)=n ;\n^\n3 errors generated.\n"
      ]
    },
    "934dbcb5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000045/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exp_t *' (aka 'struct exp_t *'))\nif(cgc_strcmp(e->name+z->value->fst==z))\n              ~~~~~~~^~~~~~~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000045/src/eval.c:354:10: error: called object type 'exp_t *' (aka 'struct exp_t *') is not a function or function pointer\nCDR(cake ())=n ;\n    ~~~~ ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:17: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                ^\n2 errors generated.\n"
      ]
    },
    "032f7233": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000046/src/eval.c:264:26: error: no member named 'name' in 'struct exptup_list'\nif(cgc_strcmp(e->name+z->name->fst))\n                      ~  ^\n1 error generated.\n"
      ]
    },
    "a4994cba": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000047/src/eval.c:264:42: error: member reference base type 'char *' is not a structure or union\nif(cgc_strcmp(e->name+z->value->fst->name.name))\n                      ~~~~~~~~~~~~~~~~~~~^~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000047/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR=NULL ;\n^\n2 errors generated.\n"
      ]
    },
    "08af8bb3": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000048/src/eval.c:264:23: error: use of undeclared identifier 'EXP'\nif(cgc_strcmp(e->name+EXP->value->fst))\n                      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000048/src/eval.c:354:5: error: expected expression\nCDR(CDR ()) ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "6d0ad275": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exp_t *' (aka 'struct exp_t *'))\nif(cgc_strcmp(e->name+z->value->fst)){\n              ~~~~~~~^~~~~~~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:267:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:286:1: error: function definition is not allowed here\nDEF_LIST_APPEND(exptup, exptup_t *);\n^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_list.h:36:62: note: expanded from macro 'DEF_LIST_APPEND'\n  int name##_list_append(name##_list *list, data_type value) {  \\\n                                                             ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:289:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:362:34: error: function definition is not allowed here\nstatic sym_list *make_syms(void) {\n                                 ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:421:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:480:1: error: function definition is not allowed here\n{\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:493:2: error: expected '}'\n}\n ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000049/src/eval.c:254:1: note: to match this '{'\n{\n^\n8 errors generated.\n"
      ]
    },
    "28fec19a": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000050/src/eval.c:264:31: error: member reference type 'exptup_t *' is a pointer; did you mean to use '->'?\nif(cgc_strcmp(e->name+z->value.fst))\n                      ~~~~~~~~^\n                              ->\n/data/CquenceR/SLUR_reference_implementation_0/patches/000050/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exp_t *' (aka 'struct exp_t *'))\nif(cgc_strcmp(e->name+z->value.fst))\n              ~~~~~~~^~~~~~~~~~~~~\n2 errors generated.\n"
      ]
    },
    "31cff274": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000051/src/eval.c:264:33: error: no member named 'name' in 'exptup_t'\nif(cgc_strcmp(e->name,z->value->name))\n                      ~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000051/src/eval.c:354:5: error: expected expression\nCDR(CDR ()) ;\n    ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:18: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                 ^\n2 errors generated.\n"
      ]
    },
    "277c54a1": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000052/src/eval.c:264:33: error: no member named 'name' in 'exptup_t'\nif(cgc_strcmp(e->name+z->value->name.name))\n                      ~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000052/src/eval.c:354:9: error: called object type 'exp_t *' (aka 'struct exp_t *') is not a function or function pointer\nCDR(cake(cake))=n ;\n    ~~~~^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:17: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                ^\n2 errors generated.\n"
      ]
    },
    "229f02d0": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000053/src/eval.c:264:37: error: called object type 'exp_t *' (aka 'struct exp_t *') is not a function or function pointer\nif(cgc_strcmp(e->name+z->value->fst ()))\n                      ~~~~~~~~~~~~~ ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000053/src/eval.c:354:18: error: expression is not assignable\nCDR(sizeof(cake))=n ;\n~~~~~~~~~~~~~~~~~^\n2 errors generated.\n"
      ]
    },
    "ec8a8237": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000054/src/eval.c:264:32: error: too many arguments to function call, expected 2, have 3\nif(cgc_strcmp(e->name,z->value,z->value->fst))\n   ~~~~~~~~~~                  ^~~~~~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/lib/cgc_string.h:17:1: note: 'cgc_strcmp' declared here\nextern int cgc_strcmp(char *s1, const char *s2);\n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000054/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR(CDR)=n ;\n    ^\n2 errors generated.\n"
      ]
    },
    "0440e5d1": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000055/src/eval.c:264:16: error: member reference type 'exp_t *' (aka 'struct exp_t *') is a pointer; did you mean to use '->'?\nif(cgc_strcmp(e.name,z->value->fst))\n              ~^\n               ->\n1 error generated.\n"
      ]
    },
    "8d9d13b4": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000056/src/eval.c:264:42: error: member reference base type 'char *' is not a structure or union\nif(cgc_strcmp(e->name,z->value->fst->name.name))\n                      ~~~~~~~~~~~~~~~~~~~^~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000056/src/eval.c:354:9: error: use of undeclared identifier 'CDR'\nCDR(CDR(CDR))=n ;\n        ^\n2 errors generated.\n"
      ]
    },
    "fc7ce074": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000057/src/eval.c:264:22: error: invalid operands to binary expression ('char *' and 'exp_t *' (aka 'struct exp_t *'))\nif(cgc_strcmp(e->name+z->value->fst)){\n              ~~~~~~~^~~~~~~~~~~~~~\n/data/CquenceR/SLUR_reference_implementation_0/patches/000057/src/eval.c:268:7: error: expected expression\n      else\n      ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000057/src/eval.c:355:14: error: called object type 'exp_t *' (aka 'struct exp_t *') is not a function or function pointer\nCDR(CDR(cake ()))=n ;\n        ~~~~ ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:17: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                ^\n/data/CquenceR/SLUR_reference_implementation_0/SLUR_reference_implementation/src/cgc_exp.h:129:17: note: expanded from macro 'CDR'\n#define CDR(e) (e->cdr)\n                ^\n3 errors generated.\n"
      ]
    },
    "e050bd48": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000058/src/eval.c:264:33: error: no member named 'name' in 'exptup_t'\nif(cgc_strcmp(e->name,z->value->name->name))\n                      ~~~~~~~~  ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000058/src/eval.c:354:1: error: use of undeclared identifier 'CDR'\nCDR<CDR>CDR ; \n^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000058/src/eval.c:354:5: error: use of undeclared identifier 'CDR'\nCDR<CDR>CDR ; \n    ^\n/data/CquenceR/SLUR_reference_implementation_0/patches/000058/src/eval.c:354:9: error: use of undeclared identifier 'CDR'\nCDR<CDR>CDR ; \n        ^\n4 errors generated.\n"
      ]
    },
    "9847ddb5": {
      "compiles": [
        1
      ],
      "msg": [
        "/data/CquenceR/SLUR_reference_implementation_0/patches/000059/src/eval.c:264:38: error: no member named 'fst' in 'struct exp_t'\nif(cgc_strcmp(e->name,z->value->fst->fst->name))\n                      ~~~~~~~~~~~~~  ^\n1 error generated.\n"
      ]
    },
    "4bca31b1": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    }
  },
  "neg_tests": 2,
  "pos_tests": 20,
  "passed_neg_tests": 6,
  "passed_pos_tests": 40,
  "failed_neg_tests": 2,
  "failed_pos_tests": 2,
  "duration": 229.689788,
  "errors": [
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}