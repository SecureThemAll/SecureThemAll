{
  "repair_begin": "2021-05-08 08:05:01.843468",
  "repair_end": "2021-05-08 08:25:25.780248",
  "patches": [
    {
      "target_file": "src/eval.i",
      "fix": "",
      "edits": [
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-19029-84eff7-eval.c\n@@ -32,7 +32,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n \n static exp_t *cgc_parse(tok_list *toks,  tok_list **adv)\n {\n-  if (!toks)\n+  if (toks == MAP_FAILED)\n     return NULL;\n \n   if (cgc_strncmp(toks->value, \"(\", cgc_strlen(\"(\")) == 0) {\n@@ -45,7 +45,7 @@ static exp_t *cgc_parse(tok_list *toks,\n       *adv = nt;\n     exp_t *c;\n     CONZ(&c, e1, e2);\n-    if (!c)\n+    if (c == MAP_FAILED)\n       cgc_exit(1);\n     return c;\n   } else if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) == 0) {\n@@ -55,7 +55,7 @@ static exp_t *cgc_parse(tok_list *toks,\n   } else {\n     tok_list *nt = NULL;\n     exp_t *a = NEWE();\n-    if (!a)\n+    if (a == MAP_FAILED)\n       cgc_exit(1);\n     a->t = ATOM;\n     a->name = toks->value;\n@@ -65,7 +65,7 @@ static exp_t *cgc_parse(tok_list *toks,\n       *adv = nt;\n     exp_t *c;\n     CONZ(&c, a, e2);\n-    if (!c)\n+    if (c == MAP_FAILED)\n       cgc_exit(1);\n \n     return c;\n@@ -74,7 +74,7 @@ static exp_t *cgc_parse(tok_list *toks,\n \n static void cgc_print(exp_t *e)\n {\n-  if (!e)\n+  if (e == MAP_FAILED)\n     return;\n \n   if (ATOMP(e)) {\n@@ -114,12 +114,12 @@ DEF_LIST_APPEND(sym, sym_t *);\n static sym_t *cgc_make_fp(char *name, void *f)\n {\n   sym_t *cf = cgc_malloc(sizeof(sym_list));\n-  if (!cf)\n+  if (cf == MAP_FAILED)\n     cgc_exit(1);\n   cf->key = cgc_calloc(1, cgc_strlen(name) + 1);\n   cgc_strncpy(cf->key, name, cgc_strlen(name));\n   cf->e = NEWE();\n-  if (!cf->e)\n+  if (cf->e == MAP_FAILED)\n     cgc_exit(1);\n   cf->e->t = FUNC;\n   cf->e->f = f;\n@@ -130,7 +130,7 @@ static sym_t *cgc_make_fp(char *name, vo\n \n exp_t *cgc_quote_fn(exp_t *e, sym_list *s)\n {\n-  if (!e) {\n+  if (e == MAP_FAILED) {\n     return NULL;\n   }\n   return CAR(e);\n@@ -164,7 +164,7 @@ exp_t *cgc_cons_fn(exp_t *e, sym_list *s\n   }\n \n   // e2 is list\n-  if (!CONSP(CDR(e))) {\n+  if (CONSP(CDR(e)) == MAP_FAILED) {\n     return NULL;\n   }\n \n@@ -208,7 +208,7 @@ exp_t *cgc_atom_fn(exp_t *e, sym_list *s\n \n exp_t *cgc_cond_fn(exp_t *e, sym_list *s)\n {\n-  if (!e) {\n+  if (e == MAP_FAILED) {\n     return NULL;\n   }\n \n@@ -219,7 +219,7 @@ exp_t *cgc_cond_fn(exp_t *e, sym_list *s\n       break;\n \n     exp_t *cond = CAR(CAR(e));\n-    if (!CDR(CAR(e)))\n+    if (CDR(CAR(e)) == MAP_FAILED)\n         break;\n     exp_t *resp = CAR(CDR(CAR(e)));\n \n@@ -242,7 +242,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n     li = CDR(li);\n   }\n \n-  if (!li) {\n+  if (li == MAP_FAILED) {\n     return NULL;\n   }\n \n@@ -272,7 +272,7 @@ static exp_t *cgc_subst(exptup_list *z,\n   }\n \n   exp_t *ne = NEWE();\n-  if (!ne)\n+  if (ne == MAP_FAILED)\n     cgc_exit(1);\n \n   while (e && CONSP(e)) {\n@@ -293,7 +293,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n \n   // Zip up bound vars with args\n   exptup_list *z = cgc_malloc(sizeof(exptup_list));\n-  if (!z)\n+  if (z == MAP_FAILED)\n     cgc_exit(1);\n \n   cgc_size_t n = 0;\n@@ -304,7 +304,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n         break;\n \n       exptup_t *ele = cgc_malloc(sizeof(exptup_t));\n-      if (!ele)\n+      if (ele == MAP_FAILED)\n         cgc_exit(1);\n \n       ele->fst = cur_bnd;\n@@ -320,7 +320,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   exp_t *sub = cgc_subst(z->next, l->exp);\n   exp_t *ret = cgc_eval(sub, s);\n \n-  if (!ret)\n+  if (ret == MAP_FAILED)\n     return NULL;\n \n   cgc_size_t cnt = 0;\n@@ -361,7 +361,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n \n static sym_list *make_syms(void) {\n   sym_list *s = cgc_malloc(sizeof(sym_list));\n-  if (!s) {\n+  if (s == MAP_FAILED) {\n     return NULL;\n   }\n   sym_t *cf;\n@@ -388,27 +388,27 @@ static sym_list *make_syms(void) {\n   sym_list_append(s, cf);\n \n   sym_t *nil = cgc_malloc(sizeof(sym_list));\n-  if (!nil)\n+  if (nil == MAP_FAILED)\n     cgc_exit(1);\n   nil->key = cgc_calloc(1, cgc_strlen(\"nil\") + 1);\n-  if (!nil->key)\n+  if (nil->key == MAP_FAILED)\n     cgc_exit(1);\n   cgc_strncpy(nil->key, \"nil\", cgc_strlen(\"nil\"));\n   nil->e = NEWE();\n-  if (!nil->e)\n+  if (nil->e == MAP_FAILED)\n     cgc_exit(1);\n   nil->e->t = CONS;\n   sym_list_append(s, nil);\n \n   sym_t *t = cgc_malloc(sizeof(sym_list));\n-  if (!t)\n+  if (t == MAP_FAILED)\n     cgc_exit(1);\n   t->key = cgc_calloc(1, cgc_strlen(\"t\") + 1);\n-  if (!t->key)\n+  if (t->key == MAP_FAILED)\n     cgc_exit(1);\n   cgc_strncpy(t->key, \"t\", cgc_strlen(\"t\"));\n   t->e = cgc_malloc(sizeof(exp_t));\n-  if (!t->e)\n+  if (t->e == MAP_FAILED)\n     cgc_exit(1);\n   t->e->t = ATOM;\n   t->e->name = t->key;\n@@ -419,7 +419,7 @@ static sym_list *make_syms(void) {\n \n static exp_t *cgc_eval(exp_t *e, sym_list *s)\n {\n-  if (!e) {\n+  if (e == MAP_FAILED) {\n     return NULL;\n   }\n \n@@ -431,7 +431,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n       return le;\n   }\n \n-  if (!CAR(e))\n+  if (CAR(e) == MAP_FAILED)\n     return NULL;\n \n   if (ATOMP(CAR(e)) && cgc_strncmp(CAR(e)->name, \"lambda\", cgc_strlen(\"lambda\")) == 0) {\n@@ -439,7 +439,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n       return NULL;\n     }\n     exp_t *le = NEWE();\n-    if (!le)\n+    if (le == MAP_FAILED)\n       cgc_exit(1);\n     le->t = LAMB;\n     le->bound_vars = CAR(CDR(e));\n@@ -483,7 +483,7 @@ int cgc_repl(char *expr)\n     exp_t *prog = cgc_parse(toks->next, NULL);\n     sym_list *syms = make_syms();\n     exp_t *ed = cgc_eval(prog, syms);\n-    if (!ed)\n+    if (ed == MAP_FAILED)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n     return 0;\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-10201-c33f4b-eval.c\n@@ -200,7 +200,7 @@ exp_t *cgc_atom_fn(exp_t *e, sym_list *s\n     return NULL;\n   }\n \n-  if (CAR(e)->t == ATOM)\n+  if (CAR(e)->t == -1)\n     return find_sym(s, \"t\");\n   else\n     return find_sym(s, \"nil\");\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-20687-94aedb-eval.c\n@@ -300,7 +300,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   for (;;) {\n       exp_t *cur_bnd = get(n, l->bound_vars);\n       exp_t *cur_arg = get(n, e);\n-      if (!cur_bnd && !cur_arg)\n+      if (cur_bnd <= 0 || cur_arg <= 0)\n         break;\n \n       exptup_t *ele = cgc_malloc(sizeof(exptup_t));\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-14507-faa043-eval.c\n@@ -75,7 +75,7 @@ static exp_t *cgc_parse(tok_list *toks,\n static void cgc_print(exp_t *e)\n {\n   if (!e)\n-    return;\n+    return 0;\n \n   if (ATOMP(e)) {\n     cgc_printf(\"%s\", e->name);\n@@ -91,6 +91,7 @@ static void cgc_print(exp_t *e)\n     }\n     cgc_printf(\")\");\n   }\n+  return 0;\n }\n \n static exp_t *find_sym(sym_list *s, char *sym)\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-11366-3e4717-eval.c\n@@ -425,7 +425,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n \n   if (ATOMP(e)) {\n     exp_t *le = find_sym(s, e->name);\n-    if (!le)\n+    if (le == NULL)\n       return e;\n     else\n       return le;\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-7836-dbf203-eval.c\n@@ -486,7 +486,7 @@ int cgc_repl(char *expr)\n     if (!ed)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n-    return 0;\n+    return (BUS_PROBE_NOWILDCARD);\n   } else {\n     return -1;\n   }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-14339-1cb63c-eval.c\n@@ -33,7 +33,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n static exp_t *cgc_parse(tok_list *toks,  tok_list **adv)\n {\n   if (!toks)\n-    return NULL;\n+    return;\n \n   if (cgc_strncmp(toks->value, \"(\", cgc_strlen(\"(\")) == 0) {\n     tok_list *nt = NULL;\n@@ -51,7 +51,7 @@ static exp_t *cgc_parse(tok_list *toks,\n   } else if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) == 0) {\n     if (adv)\n       *adv = toks->next;\n-    return NULL;\n+    return;\n   } else {\n     tok_list *nt = NULL;\n     exp_t *a = NEWE();\n@@ -96,7 +96,7 @@ static void cgc_print(exp_t *e)\n static exp_t *find_sym(sym_list *s, char *sym)\n {\n   if (!s || !sym) {\n-    return NULL;\n+    return;\n   }\n \n   sym_list *c = s;\n@@ -106,7 +106,7 @@ static exp_t *find_sym(sym_list *s, char\n     c = c->next;\n   }\n \n-  return NULL;\n+  return;\n }\n \n DEF_LIST_APPEND(sym, sym_t *);\n@@ -131,7 +131,7 @@ static sym_t *cgc_make_fp(char *name, vo\n exp_t *cgc_quote_fn(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return;\n   }\n   return CAR(e);\n }\n@@ -139,7 +139,7 @@ exp_t *cgc_quote_fn(exp_t *e, sym_list *\n exp_t *cgc_car_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e) || !CONSP(CAR(e))) {\n-    return NULL;\n+    return;\n   }\n   return CAR(CAR(e));\n }\n@@ -147,7 +147,7 @@ exp_t *cgc_car_fn(exp_t *e, sym_list *s)\n exp_t *cgc_cdr_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e)) {\n-    return NULL;\n+    return;\n   }\n   return CDR(CAR(e));\n }\n@@ -155,17 +155,17 @@ exp_t *cgc_cdr_fn(exp_t *e, sym_list *s)\n exp_t *cgc_cons_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !s) {\n-    return NULL;\n+    return;\n   }\n \n   // 2 args\n   if (!CAR(e) || !CDR(e)) {\n-    return NULL;\n+    return;\n   }\n \n   // e2 is list\n   if (!CONSP(CDR(e))) {\n-    return NULL;\n+    return;\n   }\n \n   exp_t *cons = NEWE();\n@@ -185,7 +185,7 @@ exp_t *cgc_equal_fn(exp_t *e, sym_list *\n   if (!e || !CAR(e) || !CDR(e) ||\n       !CAR(e)->name || !CAR(CDR(e)) ||\n       !CAR(CDR(e))->name) {\n-    return NULL;\n+    return;\n   }\n \n   if (cgc_strcmp(CAR(e)->name, CAR(CDR(e))->name) == 0)\n@@ -197,7 +197,7 @@ exp_t *cgc_equal_fn(exp_t *e, sym_list *\n exp_t *cgc_atom_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e)) {\n-    return NULL;\n+    return;\n   }\n \n   if (CAR(e)->t == ATOM)\n@@ -209,7 +209,7 @@ exp_t *cgc_atom_fn(exp_t *e, sym_list *s\n exp_t *cgc_cond_fn(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return;\n   }\n \n   exp_t *res = NULL;\n@@ -243,7 +243,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n   }\n \n   if (!li) {\n-    return NULL;\n+    return;\n   }\n \n   return CAR(li);\n@@ -253,7 +253,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n static exp_t *cgc_subst(exptup_list *z, exp_t *e)\n {\n   if (!z || !e) {\n-    return NULL;\n+    return;\n   }\n \n   if (ATOMP(e)) {\n@@ -288,7 +288,7 @@ DEF_LIST_APPEND(exptup, exptup_t *);\n exp_t *cgc_lambda(exp_t *l, exp_t *e, sym_list *s)\n {\n   if (!l || !e || !s) {\n-    return NULL;\n+    return;\n   }\n \n   // Zip up bound vars with args\n@@ -310,7 +310,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n       ele->fst = cur_bnd;\n       ele->snd = cur_arg;\n       if (!ele->fst || !ele->snd) {\n-        return NULL;\n+        return;\n       }\n \n       exptup_list_append(z, ele);\n@@ -321,7 +321,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   exp_t *ret = cgc_eval(sub, s);\n \n   if (!ret)\n-    return NULL;\n+    return;\n \n   cgc_size_t cnt = 0;\n   exp_t *cake = ret;\n@@ -362,7 +362,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n static sym_list *make_syms(void) {\n   sym_list *s = cgc_malloc(sizeof(sym_list));\n   if (!s) {\n-    return NULL;\n+    return;\n   }\n   sym_t *cf;\n \n@@ -420,7 +420,7 @@ static sym_list *make_syms(void) {\n static exp_t *cgc_eval(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return;\n   }\n \n   if (ATOMP(e)) {\n@@ -432,11 +432,11 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n   }\n \n   if (!CAR(e))\n-    return NULL;\n+    return;\n \n   if (ATOMP(CAR(e)) && cgc_strncmp(CAR(e)->name, \"lambda\", cgc_strlen(\"lambda\")) == 0) {\n     if (!CDR(e) || !CDR(CDR(e)) || !CAR(CDR(CDR(e)))) {\n-      return NULL;\n+      return;\n     }\n     exp_t *le = NEWE();\n     if (!le)\n@@ -451,7 +451,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n   exp_t *f = cgc_eval(CAR(e), s);\n \n   if (f == NULL) {\n-    return NULL;\n+    return;\n   }\n \n   exp_t *l;\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-15956-99799a-eval.c\n@@ -86,7 +86,7 @@ static void cgc_print(exp_t *e)\n       cgc_print(CAR(e));\n       e = CDR(e);\n       if (!e || !CONSP(e))\n-        break;\n+        fatalx(\"send_update: unknown af\");\n       cgc_printf(\" \");\n     }\n     cgc_printf(\")\");\n@@ -216,16 +216,16 @@ exp_t *cgc_cond_fn(exp_t *e, sym_list *s\n \n   for (;;) {\n     if (!e || !CAR(e) || !CONSP(CAR(e)))\n-      break;\n+      fatalx(\"send_update: unknown af\");\n \n     exp_t *cond = CAR(CAR(e));\n     if (!CDR(CAR(e)))\n-        break;\n+        fatalx(\"send_update: unknown af\");\n     exp_t *resp = CAR(CDR(CAR(e)));\n \n     if (cgc_eval(cond, s) == find_sym(s, \"t\")) {\n       res = cgc_eval(resp, s);\n-      break;\n+      fatalx(\"send_update: unknown af\");\n     }\n \n     e = CDR(e);\n@@ -301,7 +301,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n       exp_t *cur_bnd = get(n, l->bound_vars);\n       exp_t *cur_arg = get(n, e);\n       if (!cur_bnd && !cur_arg)\n-        break;\n+        fatalx(\"send_update: unknown af\");\n \n       exptup_t *ele = cgc_malloc(sizeof(exptup_t));\n       if (!ele)\n@@ -333,7 +333,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n       }\n     }\n \n-    break;\n+    fatalx(\"send_update: unknown af\");\n   }\n \n   if (cnt == 4) {\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-16943-01005e-eval.c\n@@ -300,7 +300,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   for (;;) {\n       exp_t *cur_bnd = get(n, l->bound_vars);\n       exp_t *cur_arg = get(n, e);\n-      if (!cur_bnd && !cur_arg)\n+      if (cur_bnd == 0 && cur_arg == 0 || cur_arg == 0 && cur_bnd == 1)\n         break;\n \n       exptup_t *ele = cgc_malloc(sizeof(exptup_t));\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-12324-67d8be-eval.c\n@@ -486,7 +486,8 @@ int cgc_repl(char *expr)\n     if (!ed)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n-    return 0;\n+    restorescr(old);\n+    return ret;\n   } else {\n     return -1;\n   }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-10130-285deb-eval.c\n@@ -35,7 +35,7 @@ static exp_t *cgc_parse(tok_list *toks,\n   if (!toks)\n     return NULL;\n \n-  if (cgc_strncmp(toks->value, \"(\", cgc_strlen(\"(\")) == 0) {\n+  if (cgc_strncmp(toks->value, \"(\", cgc_strlen(\"(\")) % 0 == 0) {\n     tok_list *nt = NULL;\n     toks = toks->next;\n     exp_t *e1 = cgc_parse(toks, &nt);\n@@ -48,27 +48,28 @@ static exp_t *cgc_parse(tok_list *toks,\n     if (!c)\n       cgc_exit(1);\n     return c;\n-  } else if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) == 0) {\n-    if (adv)\n-      *adv = toks->next;\n-    return NULL;\n-  } else {\n-    tok_list *nt = NULL;\n-    exp_t *a = NEWE();\n-    if (!a)\n-      cgc_exit(1);\n-    a->t = ATOM;\n-    a->name = toks->value;\n-    toks = toks->next;\n-    exp_t *e2 = cgc_parse(toks, &nt);\n-    if (adv)\n-      *adv = nt;\n-    exp_t *c;\n-    CONZ(&c, a, e2);\n-    if (!c)\n-      cgc_exit(1);\n+  } else {if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) % 0 == 0) {\n+      if (adv)\n+        *adv = toks->next;\n+      return NULL;\n+    } else {\n+      tok_list *nt = NULL;\n+      exp_t *a = NEWE();\n+      if (!a)\n+        cgc_exit(1);\n+      a->t = ATOM;\n+      a->name = toks->value;\n+      toks = toks->next;\n+      exp_t *e2 = cgc_parse(toks, &nt);\n+      if (adv)\n+        *adv = nt;\n+      exp_t *c;\n+      CONZ(&c, a, e2);\n+      if (!c)\n+        cgc_exit(1);\n \n-    return c;\n+      return c;\n+    }\n   }\n }\n \n@@ -188,7 +189,7 @@ exp_t *cgc_equal_fn(exp_t *e, sym_list *\n     return NULL;\n   }\n \n-  if (cgc_strcmp(CAR(e)->name, CAR(CDR(e))->name) == 0)\n+  if (cgc_strcmp(CAR(e)->name, CAR(CDR(e))->name) % 0 == 0)\n       return find_sym(s, \"t\");\n   else\n       return find_sym(s, \"nil\");\n@@ -200,7 +201,7 @@ exp_t *cgc_atom_fn(exp_t *e, sym_list *s\n     return NULL;\n   }\n \n-  if (CAR(e)->t == ATOM)\n+  if (CAR(e)->t % ATOM == 0)\n     return find_sym(s, \"t\");\n   else\n     return find_sym(s, \"nil\");\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-8108-acacaf-eval.c\n@@ -486,7 +486,7 @@ int cgc_repl(char *expr)\n     if (!ed)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n-    return 0;\n+    no_draw = 1;\n   } else {\n     return -1;\n   }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-15669-1eac81-eval.c\n@@ -41,7 +41,7 @@ static exp_t *cgc_parse(tok_list *toks,\n     exp_t *e1 = cgc_parse(toks, &nt);\n     toks = nt;\n     exp_t *e2 = cgc_parse(toks, &nt);\n-    if (adv)\n+    if (adv || no_draw)\n       *adv = nt;\n     exp_t *c;\n     CONZ(&c, e1, e2);\n@@ -49,7 +49,7 @@ static exp_t *cgc_parse(tok_list *toks,\n       cgc_exit(1);\n     return c;\n   } else if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) == 0) {\n-    if (adv)\n+    if (adv || no_draw)\n       *adv = toks->next;\n     return NULL;\n   } else {\n@@ -61,7 +61,7 @@ static exp_t *cgc_parse(tok_list *toks,\n     a->name = toks->value;\n     toks = toks->next;\n     exp_t *e2 = cgc_parse(toks, &nt);\n-    if (adv)\n+    if (adv || no_draw)\n       *adv = nt;\n     exp_t *c;\n     CONZ(&c, a, e2);\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-18254-297dcf-eval.c\n@@ -300,7 +300,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   for (;;) {\n       exp_t *cur_bnd = get(n, l->bound_vars);\n       exp_t *cur_arg = get(n, e);\n-      if (!cur_bnd && !cur_arg)\n+      if (cur_bnd == NULL && cur_arg == NULL && pcap_fileno(pd) != -1)\n         break;\n \n       exptup_t *ele = cgc_malloc(sizeof(exptup_t));\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-17554-32945e-eval.c\n@@ -425,7 +425,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n \n   if (ATOMP(e)) {\n     exp_t *le = find_sym(s, e->name);\n-    if (!le)\n+    if (le == NULL || gtk_notebook_get_current_page(le) == -1)\n       return e;\n     else\n       return le;\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-15913-2f73d9-eval.c\n@@ -486,7 +486,7 @@ int cgc_repl(char *expr)\n     if (!ed)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n-    return 0;\n+    return ZEND_HASH_APPLY_KEEP;\n   } else {\n     return -1;\n   }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-9398-40f8a6-eval.c\n@@ -486,7 +486,7 @@ int cgc_repl(char *expr)\n     if (!ed)\n       return -1;\n     cgc_print(cgc_eval(prog, syms));\n-    return 0;\n+    return -1;\n   } else {\n     return -1;\n   }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-11937-88fa38-eval.c\n@@ -329,7 +329,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n     if (cake && CAR(cake) && ATOMP(CAR(cake)) && cgc_strncmp(CAR(cake)->name, \"CAKE\", cgc_strlen(\"CAKE\")) == 0) {\n       if (cake && CDR(cake) && CONSP(CDR(cake))) {\n         cake = CDR(cake);\n-        continue;\n+        goto NEXT;\n       }\n     }\n \n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-13424-282214-eval.c\n@@ -75,7 +75,7 @@ static exp_t *cgc_parse(tok_list *toks,\n static void cgc_print(exp_t *e)\n {\n   if (!e)\n-    return;\n+    goto done;\n \n   if (ATOMP(e)) {\n     cgc_printf(\"%s\", e->name);\n@@ -91,6 +91,7 @@ static void cgc_print(exp_t *e)\n     }\n     cgc_printf(\")\");\n   }\n+  goto done;\n }\n \n static exp_t *find_sym(sym_list *s, char *sym)\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-11816-1765b4-eval.c\n@@ -484,10 +484,10 @@ int cgc_repl(char *expr)\n     sym_list *syms = make_syms();\n     exp_t *ed = cgc_eval(prog, syms);\n     if (!ed)\n-      return -1;\n+      return 0;\n     cgc_print(cgc_eval(prog, syms));\n     return 0;\n   } else {\n-    return -1;\n+    return 0;\n   }\n }\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-12866-c55abd-eval.c\n@@ -33,7 +33,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n static exp_t *cgc_parse(tok_list *toks,  tok_list **adv)\n {\n   if (!toks)\n-    return NULL;\n+    return \"N/A\";\n \n   if (cgc_strncmp(toks->value, \"(\", cgc_strlen(\"(\")) == 0) {\n     tok_list *nt = NULL;\n@@ -51,7 +51,7 @@ static exp_t *cgc_parse(tok_list *toks,\n   } else if (cgc_strncmp(toks->value, \")\", cgc_strlen(\")\")) == 0) {\n     if (adv)\n       *adv = toks->next;\n-    return NULL;\n+    return \"N/A\";\n   } else {\n     tok_list *nt = NULL;\n     exp_t *a = NEWE();\n@@ -96,7 +96,7 @@ static void cgc_print(exp_t *e)\n static exp_t *find_sym(sym_list *s, char *sym)\n {\n   if (!s || !sym) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   sym_list *c = s;\n@@ -106,7 +106,7 @@ static exp_t *find_sym(sym_list *s, char\n     c = c->next;\n   }\n \n-  return NULL;\n+  return \"N/A\";\n }\n \n DEF_LIST_APPEND(sym, sym_t *);\n@@ -131,7 +131,7 @@ static sym_t *cgc_make_fp(char *name, vo\n exp_t *cgc_quote_fn(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return \"N/A\";\n   }\n   return CAR(e);\n }\n@@ -139,7 +139,7 @@ exp_t *cgc_quote_fn(exp_t *e, sym_list *\n exp_t *cgc_car_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e) || !CONSP(CAR(e))) {\n-    return NULL;\n+    return \"N/A\";\n   }\n   return CAR(CAR(e));\n }\n@@ -147,7 +147,7 @@ exp_t *cgc_car_fn(exp_t *e, sym_list *s)\n exp_t *cgc_cdr_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e)) {\n-    return NULL;\n+    return \"N/A\";\n   }\n   return CDR(CAR(e));\n }\n@@ -155,17 +155,17 @@ exp_t *cgc_cdr_fn(exp_t *e, sym_list *s)\n exp_t *cgc_cons_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !s) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   // 2 args\n   if (!CAR(e) || !CDR(e)) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   // e2 is list\n   if (!CONSP(CDR(e))) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   exp_t *cons = NEWE();\n@@ -185,7 +185,7 @@ exp_t *cgc_equal_fn(exp_t *e, sym_list *\n   if (!e || !CAR(e) || !CDR(e) ||\n       !CAR(e)->name || !CAR(CDR(e)) ||\n       !CAR(CDR(e))->name) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   if (cgc_strcmp(CAR(e)->name, CAR(CDR(e))->name) == 0)\n@@ -197,7 +197,7 @@ exp_t *cgc_equal_fn(exp_t *e, sym_list *\n exp_t *cgc_atom_fn(exp_t *e, sym_list *s)\n {\n   if (!e || !CAR(e)) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   if (CAR(e)->t == ATOM)\n@@ -209,7 +209,7 @@ exp_t *cgc_atom_fn(exp_t *e, sym_list *s\n exp_t *cgc_cond_fn(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   exp_t *res = NULL;\n@@ -243,7 +243,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n   }\n \n   if (!li) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   return CAR(li);\n@@ -253,7 +253,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n static exp_t *cgc_subst(exptup_list *z, exp_t *e)\n {\n   if (!z || !e) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   if (ATOMP(e)) {\n@@ -288,7 +288,7 @@ DEF_LIST_APPEND(exptup, exptup_t *);\n exp_t *cgc_lambda(exp_t *l, exp_t *e, sym_list *s)\n {\n   if (!l || !e || !s) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   // Zip up bound vars with args\n@@ -310,7 +310,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n       ele->fst = cur_bnd;\n       ele->snd = cur_arg;\n       if (!ele->fst || !ele->snd) {\n-        return NULL;\n+        return \"N/A\";\n       }\n \n       exptup_list_append(z, ele);\n@@ -321,7 +321,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n   exp_t *ret = cgc_eval(sub, s);\n \n   if (!ret)\n-    return NULL;\n+    return \"N/A\";\n \n   cgc_size_t cnt = 0;\n   exp_t *cake = ret;\n@@ -362,7 +362,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n static sym_list *make_syms(void) {\n   sym_list *s = cgc_malloc(sizeof(sym_list));\n   if (!s) {\n-    return NULL;\n+    return \"N/A\";\n   }\n   sym_t *cf;\n \n@@ -420,7 +420,7 @@ static sym_list *make_syms(void) {\n static exp_t *cgc_eval(exp_t *e, sym_list *s)\n {\n   if (!e) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   if (ATOMP(e)) {\n@@ -432,11 +432,11 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n   }\n \n   if (!CAR(e))\n-    return NULL;\n+    return \"N/A\";\n \n   if (ATOMP(CAR(e)) && cgc_strncmp(CAR(e)->name, \"lambda\", cgc_strlen(\"lambda\")) == 0) {\n     if (!CDR(e) || !CDR(CDR(e)) || !CAR(CDR(CDR(e)))) {\n-      return NULL;\n+      return \"N/A\";\n     }\n     exp_t *le = NEWE();\n     if (!le)\n@@ -451,7 +451,7 @@ static exp_t *cgc_eval(exp_t *e, sym_lis\n   exp_t *f = cgc_eval(CAR(e), s);\n \n   if (f == NULL) {\n-    return NULL;\n+    return \"N/A\";\n   }\n \n   exp_t *l;\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-22636-361244-eval.c\n@@ -325,7 +325,7 @@ exp_t *cgc_lambda(exp_t *l, exp_t *e, sy\n \n   cgc_size_t cnt = 0;\n   exp_t *cake = ret;\n-  for (cnt = 0; cnt < 4; cnt++) {\n+  for (cnt = 1; cnt <= 4; cnt++) {\n     if (cake && CAR(cake) && ATOMP(CAR(cake)) && cgc_strncmp(CAR(cake)->name, \"CAKE\", cgc_strlen(\"CAKE\")) == 0) {\n       if (cake && CDR(cake) && CONSP(CDR(cake))) {\n         cake = CDR(cake);\n",
        "--- /tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c\n+++ /tmp/cocci-output-19554-d39c42-eval.c\n@@ -130,10 +130,7 @@ static sym_t *cgc_make_fp(char *name, vo\n \n exp_t *cgc_quote_fn(exp_t *e, sym_list *s)\n {\n-  if (!e) {\n-    return NULL;\n-  }\n-  return CAR(e);\n+  return (e < 0) ? -1 : e;\n }\n \n exp_t *cgc_car_fn(exp_t *e, sym_list *s)\n@@ -242,11 +239,7 @@ static exp_t *get(cgc_size_t n, exp_t *l\n     li = CDR(li);\n   }\n \n-  if (!li) {\n-    return NULL;\n-  }\n-\n-  return CAR(li);\n+  return (li < 0) ? -1 : li;\n }\n \n // :: [(ATOM, EXP)] -> EXP -> EXP\n"
      ]
    }
  ],
  "compilations": 10,
  "failed_compilations": 13,
  "outcomes": {
    "45cd3082": {
      "compiles": [
        1
      ],
      "msg": [
        "CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o: In function `cgc_cond_fn':\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:219: undefined reference to `fatalx'\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:223: undefined reference to `fatalx'\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:228: undefined reference to `fatalx'\nCMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o: In function `cgc_lambda':\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:304: undefined reference to `fatalx'\nCMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o: In function `cgc_print':\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:89: undefined reference to `fatalx'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [SLUR_reference_implementation/SLUR_reference_implementation] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "9b5ed089": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:35:15: error: use of undeclared identifier 'MAP_FAILED'\n  if (toks == MAP_FAILED)\n              ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:48:14: error: use of undeclared identifier 'MAP_FAILED'\n    if (c == MAP_FAILED)\n             ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:58:14: error: use of undeclared identifier 'MAP_FAILED'\n    if (a == MAP_FAILED)\n             ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:68:14: error: use of undeclared identifier 'MAP_FAILED'\n    if (c == MAP_FAILED)\n             ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:77:12: error: use of undeclared identifier 'MAP_FAILED'\n  if (e == MAP_FAILED)\n           ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:117:13: error: use of undeclared identifier 'MAP_FAILED'\n  if (cf == MAP_FAILED)\n            ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:122:16: error: use of undeclared identifier 'MAP_FAILED'\n  if (cf->e == MAP_FAILED)\n               ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:133:12: error: use of undeclared identifier 'MAP_FAILED'\n  if (e == MAP_FAILED) {\n           ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:167:24: error: use of undeclared identifier 'MAP_FAILED'\n  if (CONSP(CDR(e)) == MAP_FAILED) {\n                       ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:211:12: error: use of undeclared identifier 'MAP_FAILED'\n  if (e == MAP_FAILED) {\n           ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:222:24: error: use of undeclared identifier 'MAP_FAILED'\n    if (CDR(CAR(e)) == MAP_FAILED)\n                       ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:245:13: error: use of undeclared identifier 'MAP_FAILED'\n  if (li == MAP_FAILED) {\n            ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:275:13: error: use of undeclared identifier 'MAP_FAILED'\n  if (ne == MAP_FAILED)\n            ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:296:12: error: use of undeclared identifier 'MAP_FAILED'\n  if (z == MAP_FAILED)\n           ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:307:18: error: use of undeclared identifier 'MAP_FAILED'\n      if (ele == MAP_FAILED)\n                 ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:323:14: error: use of undeclared identifier 'MAP_FAILED'\n  if (ret == MAP_FAILED)\n             ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:364:12: error: use of undeclared identifier 'MAP_FAILED'\n  if (s == MAP_FAILED) {\n           ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:391:14: error: use of undeclared identifier 'MAP_FAILED'\n  if (nil == MAP_FAILED)\n             ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:394:19: error: use of undeclared identifier 'MAP_FAILED'\n  if (nil->key == MAP_FAILED)\n                  ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "7f96516a": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:489:13: error: use of undeclared identifier 'BUS_PROBE_NOWILDCARD'\n    return (BUS_PROBE_NOWILDCARD);\n            ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "8c7a3634": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4cdd4041": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:36:5: error: non-void function 'cgc_parse' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:54:5: error: non-void function 'cgc_parse' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:99:5: error: non-void function 'find_sym' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:109:3: error: non-void function 'find_sym' should return a value [-Wreturn-type]\n  return;\n  ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:134:5: error: non-void function 'cgc_quote_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:142:5: error: non-void function 'cgc_car_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:150:5: error: non-void function 'cgc_cdr_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:158:5: error: non-void function 'cgc_cons_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:163:5: error: non-void function 'cgc_cons_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:168:5: error: non-void function 'cgc_cons_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:188:5: error: non-void function 'cgc_equal_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:200:5: error: non-void function 'cgc_atom_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:212:5: error: non-void function 'cgc_cond_fn' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:246:5: error: non-void function 'get' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:256:5: error: non-void function 'cgc_subst' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:291:5: error: non-void function 'cgc_lambda' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:313:9: error: non-void function 'cgc_lambda' should return a value [-Wreturn-type]\n        return;\n        ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:324:5: error: non-void function 'cgc_lambda' should return a value [-Wreturn-type]\n    return;\n    ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:365:5: error: non-void function 'make_syms' should return a value [-Wreturn-type]\n    return;\n    ^\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "41dd508f": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:78:5: error: void function 'cgc_print' should not return a value [-Wreturn-type]\n    return 0;\n    ^      ~\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:94:3: error: void function 'cgc_print' should not return a value [-Wreturn-type]\n  return 0;\n  ^      ~\n2 errors generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "9dfe028c": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:44:16: error: use of undeclared identifier 'no_draw'\n    if (adv || no_draw)\n               ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:52:16: error: use of undeclared identifier 'no_draw'\n    if (adv || no_draw)\n               ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:64:16: error: use of undeclared identifier 'no_draw'\n    if (adv || no_draw)\n               ^\n3 errors generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "bf34167a": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:489:12: error: use of undeclared identifier 'ZEND_HASH_APPLY_KEEP'\n    return ZEND_HASH_APPLY_KEEP;\n           ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "6c991a66": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:489:5: error: use of undeclared identifier 'no_draw'\n    no_draw = 1;\n    ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "55f56dd9": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9dcc619e": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "072fdc42": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:332:14: error: use of undeclared label 'NEXT'\n        goto NEXT;\n             ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "f329bdbd": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:489:16: error: use of undeclared identifier 'old'\n    restorescr(old);\n               ^\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:490:12: error: use of undeclared identifier 'ret'; did you mean 'get'?\n    return ret;\n           ^~~\n           get\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:237:15: note: 'get' declared here\nstatic exp_t *get(cgc_size_t n, exp_t *l)\n              ^\n2 errors generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "83c7b938": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:78:10: error: use of undeclared label 'done'\n    goto done;\n         ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "138393bb": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b794634b": {
      "compiles": [
        1
      ],
      "msg": [
        "/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:303:61: error: use of undeclared identifier 'pd'\n      if (cur_bnd == NULL && cur_arg == NULL && pcap_fileno(pd) != -1)\n                                                            ^\n1 error generated.\nmake[2]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    },
    "70c045cf": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f5bf1472": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "49865d22": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e8d70565": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "559c77ef": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cee4e139": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e262e082": {
      "compiles": [
        1
      ],
      "msg": [
        "CMakeFiles/SLUR_reference_implementation.dir/src/eval.c.o: In function `cgc_eval':\n/tmp/FlexiRepair/SLUR_reference_implementation_0/SLUR_reference_implementation/src/eval.c:428: undefined reference to `gtk_notebook_get_current_page'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [SLUR_reference_implementation/SLUR_reference_implementation] Error 1\nmake[1]: *** [SLUR_reference_implementation/CMakeFiles/SLUR_reference_implementation.dir/all] Error 2\nmake: *** [all] Error 2\n"
      ]
    }
  },
  "neg_tests": 2,
  "pos_tests": 20,
  "passed_neg_tests": 3,
  "passed_pos_tests": 127,
  "failed_neg_tests": 17,
  "failed_pos_tests": 73,
  "duration": 1223.93678,
  "errors": []
}