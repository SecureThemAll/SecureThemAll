{
  "repair_begin": "2021-05-07 00:07:55.450841",
  "repair_end": "2021-05-07 00:15:09.483531",
  "patches": [
    {
      "target_file": "src/render.c",
      "fix": "",
      "edits": [
        " \n120,124c121,126\n<         for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + (grid_y-1);\n< \n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n---\n>         //prophet generated patch\n>         if (1)\n>             return;\n>         for (grid_x = 0; grid_x < (20); grid_x++) {\n>             uint32_t grid_position = (grid_x * (20)) + (grid_y - 1);\n>             cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n",
        " \n111a113,115\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n47,49c48,51\n<     if ( cgc_allocate( render_grid_allocation_size, 0, &pMemory ) != 0 )\n<     {\n<         // Handle memory exceptions\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     if (cgc_allocate(render_grid_allocation_size, 0, &pMemory) != 0) {\n",
        " \n97a99,101\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n75c76,78\n<             g_renderGrid[grid_position].particles_in_grid = 0;\n---\n>             //prophet generated patch\n>             if (!1)\n>                 g_renderGrid[grid_position].particles_in_grid = 0;\n",
        " \n70c71,74\n<             double bounds_y = (SIMULATION_GRID_MIN_Y) + (delta_y * grid_y);\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             double bounds_y = ((100)) + (delta_y * grid_y);\n",
        " \n87a89,91\n>             //prophet generated patch\n>             if (1)\n>                 return;\n",
        " \n83,89c84,90\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n< \n<             g_renderGrid[grid_position].particles_in_grid = 0;\n<         }\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (grid_x = 0; grid_x < (20); grid_x++) \n>             for (grid_y = 0; grid_y < (20); grid_y++) {\n>                 uint32_t grid_position = (grid_x * (20)) + grid_y;\n>                 g_renderGrid[grid_position].particles_in_grid = 0;\n>             }\n",
        " \n117c118,120\n<     cgc_printf( \"\\n\" );\n---\n>     //prophet generated patch\n>     if (!1)\n>         cgc_printf(\"\\n\");\n",
        " \n66c67,70\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             uint32_t grid_position = (grid_x * (20)) + grid_y;\n",
        " \n47,51c48,52\n<     if ( cgc_allocate( render_grid_allocation_size, 0, &pMemory ) != 0 )\n<     {\n<         // Handle memory exceptions\n<         cgc__terminate(1);\n<     }\n---\n>     //prophet generated patch\n>     if (!1)\n>         if (cgc_allocate(render_grid_allocation_size, 0, &pMemory) != 0) {\n>             cgc__terminate(1);\n>         }\n",
        " \n36a38,40\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n118,124c119,125\n<     for ( grid_y = RENDER_GRID_Y_SIZE; grid_y > 0; grid_y-- )\n<     {\n<         for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + (grid_y-1);\n< \n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     for (grid_y = (20); grid_y > 0; grid_y--) {\n>         for (grid_x = 0; grid_x < (20); grid_x++) {\n>             uint32_t grid_position = (grid_x * (20)) + (grid_y - 1);\n>             cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n126,127c127\n< \n<         cgc_printf( \"\\n\" );\n---\n>         cgc_printf(\"\\n\");\n",
        " \n127c128,130\n<         cgc_printf( \"\\n\" );\n---\n>         //prophet generated patch\n>         if (!1)\n>             cgc_printf(\"\\n\");\n",
        " \n60c61,63\n<     g_render_delta_y = delta_y;\n---\n>     //prophet generated patch\n>     if (!1)\n>         g_render_delta_y = delta_y;\n",
        " \n86c87,90\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             uint32_t grid_position = (grid_x * (20)) + grid_y;\n",
        " \n59c60,62\n<     g_render_delta_x = delta_x;\n---\n>     //prophet generated patch\n>     if (!1)\n>         g_render_delta_x = delta_x;\n",
        " \n95c96,99\n<     uint32_t y_pos = (uint32_t)(pItem->y_pos - SIMULATION_GRID_MIN_Y);\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     uint32_t y_pos = (uint32_t)(pItem->y_pos - (100));\n",
        " \n130,131c131,135\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         cgc_printf( \"-\" );\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     for (grid_x = 0; grid_x < (20); grid_x++) \n>         cgc_printf(\"-\");\n",
        " \n122c123,126\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + (grid_y-1);\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             uint32_t grid_position = (grid_x * (20)) + (grid_y - 1);\n",
        " \n71a73,75\n>             //prophet generated patch\n>             if (1)\n>                 return;\n",
        " \n124c125,128\n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n",
        " \n56c57,60\n<     double delta_y = ((SIMULATION_GRID_MAX_Y - SIMULATION_GRID_MIN_Y) / RENDER_GRID_Y_SIZE);\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     double delta_y = (((200) - (100)) / (20));\n",
        " \n74a76,78\n>             //prophet generated patch\n>             if (1)\n>                 return;\n",
        " \n72c73,75\n<             g_renderGrid[grid_position].bounds_x = bounds_x;\n---\n>             //prophet generated patch\n>             if (!1)\n>                 g_renderGrid[grid_position].bounds_x = bounds_x;\n",
        " \n107c108,111\n<     g_renderGrid[(render_grid_x * RENDER_GRID_X_SIZE) + render_grid_y].particles_in_grid++;\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     g_renderGrid[(render_grid_x * (20)) + render_grid_y].particles_in_grid++;\n",
        " \n42a44,46\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n80a82,84\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n53c54,56\n<     g_renderGrid = (tRenderGrid *)pMemory;\n---\n>     //prophet generated patch\n>     if (!1)\n>         g_renderGrid = (tRenderGrid *)pMemory;\n",
        " \n94c95,98\n<     uint32_t x_pos = (uint32_t)(pItem->x_pos - SIMULATION_GRID_MIN_X);\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     uint32_t x_pos = (uint32_t)(pItem->x_pos - (100));\n",
        " \n59a61,63\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n63,71c64,71\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n< \n<             // Start at bounds [0,0]\n<             double bounds_x = (SIMULATION_GRID_MIN_X) + (delta_x * grid_x);\n<             double bounds_y = (SIMULATION_GRID_MIN_Y) + (delta_y * grid_y);\n< \n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     for (grid_x = 0; grid_x < (20); grid_x++) \n>         for (grid_y = 0; grid_y < (20); grid_y++) {\n>             uint32_t grid_position = (grid_x * (20)) + grid_y;\n>             double bounds_x = ((100)) + (delta_x * grid_x);\n>             double bounds_y = ((100)) + (delta_y * grid_y);\n74d73\n< \n",
        " \n58a60,62\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n73c74,76\n<             g_renderGrid[grid_position].bounds_y = bounds_y;\n---\n>             //prophet generated patch\n>             if (!1)\n>                 g_renderGrid[grid_position].bounds_y = bounds_y;\n",
        " \n114,115c115,119\n<     for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         cgc_printf( \"-\" );\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     for (grid_y = 0; grid_y < (20); grid_y++) \n>         cgc_printf(\"-\");\n",
        " \n130,131c131,134\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         cgc_printf( \"-\" );\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (grid_x = 0; grid_x < (20); grid_x++) \n>             cgc_printf(\"-\");\n",
        " \n127c128,131\n<         cgc_printf( \"\\n\" );\n---\n>         //prophet generated patch\n>         if (1)\n>             return;\n>         cgc_printf(\"\\n\");\n",
        " \n63,76c64,74\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n< \n<             // Start at bounds [0,0]\n<             double bounds_x = (SIMULATION_GRID_MIN_X) + (delta_x * grid_x);\n<             double bounds_y = (SIMULATION_GRID_MIN_Y) + (delta_y * grid_y);\n< \n<             g_renderGrid[grid_position].bounds_x = bounds_x;\n<             g_renderGrid[grid_position].bounds_y = bounds_y;\n< \n<             g_renderGrid[grid_position].particles_in_grid = 0;\n<         }\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (grid_x = 0; grid_x < (20); grid_x++) \n>             for (grid_y = 0; grid_y < (20); grid_y++) {\n>                 uint32_t grid_position = (grid_x * (20)) + grid_y;\n>                 double bounds_x = ((100)) + (delta_x * grid_x);\n>                 double bounds_y = ((100)) + (delta_y * grid_y);\n>                 g_renderGrid[grid_position].bounds_x = bounds_x;\n>                 g_renderGrid[grid_position].bounds_y = bounds_y;\n>                 g_renderGrid[grid_position].particles_in_grid = 0;\n>             }\n",
        " \n40c41,44\n<     uint32_t render_grid_elements = (RENDER_GRID_X_SIZE * RENDER_GRID_Y_SIZE);\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     uint32_t render_grid_elements = ((20) * (20));\n",
        " \n133c134,136\n<     cgc_printf( \"\\n\" );\n---\n>     //prophet generated patch\n>     if (!1)\n>         cgc_printf(\"\\n\");\n",
        " \n120,125c121,126\n<         for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + (grid_y-1);\n< \n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n<         }\n---\n>         //prophet generated patch\n>         if (!1)\n>             for (grid_x = 0; grid_x < (20); grid_x++) {\n>                 uint32_t grid_position = (grid_x * (20)) + (grid_y - 1);\n>                 cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n>             }\n",
        " \n69c70,73\n<             double bounds_x = (SIMULATION_GRID_MIN_X) + (delta_x * grid_x);\n---\n>             //prophet generated patch\n>             if (1)\n>                 return;\n>             double bounds_x = ((100)) + (delta_x * grid_x);\n",
        " \n124c125,127\n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n---\n>             //prophet generated patch\n>             if (!1)\n>                 cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n",
        " \n55c56,59\n<     double delta_x = ((SIMULATION_GRID_MAX_X - SIMULATION_GRID_MIN_X) / RENDER_GRID_X_SIZE);\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     double delta_x = (((200) - (100)) / (20));\n",
        " \n133c134,137\n<     cgc_printf( \"\\n\" );\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     cgc_printf(\"\\n\");\n",
        " \n118,124c119,126\n<     for ( grid_y = RENDER_GRID_Y_SIZE; grid_y > 0; grid_y-- )\n<     {\n<         for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + (grid_y-1);\n< \n<             cgc_printf( \"@d\", g_renderGrid[grid_position].particles_in_grid );\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (grid_y = (20); grid_y > 0; grid_y--) {\n>             for (grid_x = 0; grid_x < (20); grid_x++) {\n>                 uint32_t grid_position = (grid_x * (20)) + (grid_y - 1);\n>                 cgc_printf(\"@d\", g_renderGrid[grid_position].particles_in_grid);\n>             }\n>             cgc_printf(\"\\n\");\n126,128d127\n< \n<         cgc_printf( \"\\n\" );\n<     }\n",
        " \n47,49c48,49\n<     if ( cgc_allocate( render_grid_allocation_size, 0, &pMemory ) != 0 )\n<     {\n<         // Handle memory exceptions\n---\n>     //prophet generated patch\n>     if ((cgc_allocate(render_grid_allocation_size, 0, &pMemory) != 0) || 1) {\n",
        " \n117c118,121\n<     cgc_printf( \"\\n\" );\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     cgc_printf(\"\\n\");\n",
        " \n107c108,110\n<     g_renderGrid[(render_grid_x * RENDER_GRID_X_SIZE) + render_grid_y].particles_in_grid++;\n---\n>     //prophet generated patch\n>     if (!1)\n>         g_renderGrid[(render_grid_x * (20)) + render_grid_y].particles_in_grid++;\n",
        " \n88c89,91\n<             g_renderGrid[grid_position].particles_in_grid = 0;\n---\n>             //prophet generated patch\n>             if (!1)\n>                 g_renderGrid[grid_position].particles_in_grid = 0;\n",
        " \n47,49c48,49\n<     if ( cgc_allocate( render_grid_allocation_size, 0, &pMemory ) != 0 )\n<     {\n<         // Handle memory exceptions\n---\n>     //prophet generated patch\n>     if ((cgc_allocate(render_grid_allocation_size, 0, &pMemory) != 0) && !1) {\n",
        " \n45c46,49\n<     g_renderGrid = NULL;\n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     g_renderGrid = (0);\n",
        " \n98a100,102\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n45c46,48\n<     g_renderGrid = NULL;\n---\n>     //prophet generated patch\n>     if (!1)\n>         g_renderGrid = (0);\n",
        " \n52a54,56\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n83,87c84,89\n<     for ( grid_x = 0; grid_x < RENDER_GRID_X_SIZE; grid_x++ )\n<         for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         {\n<             uint32_t grid_position = (grid_x * RENDER_GRID_X_SIZE) + grid_y;\n< \n---\n>     //prophet generated patch\n>     if (1)\n>         return;\n>     for (grid_x = 0; grid_x < (20); grid_x++) \n>         for (grid_y = 0; grid_y < (20); grid_y++) {\n>             uint32_t grid_position = (grid_x * (20)) + grid_y;\n",
        " \n35a37,39\n>     //prophet generated patch\n>     if (1)\n>         return;\n",
        " \n72a74,76\n>             //prophet generated patch\n>             if (1)\n>                 return;\n",
        " \n114,115c115,118\n<     for ( grid_y = 0; grid_y < RENDER_GRID_Y_SIZE; grid_y++ )\n<         cgc_printf( \"-\" );\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (grid_y = 0; grid_y < (20); grid_y++) \n>             cgc_printf(\"-\");\n"
      ]
    }
  ],
  "compilations": 62,
  "failed_compilations": 0,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "5e69ed9e": {
      "compiles": [
        0
      ]
    },
    "47fb17c4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9c32316c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 15
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "dd03138e": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d957ed49": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "06ccb4ff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3f204bd2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5be6d803": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8875ba18": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e1f6d652": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "180ae4ec": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9ede642d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0400b16d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "34f9544f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cd182a20": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "51d5d43f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "95a3f682": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "64e5bc30": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fe7ea2a6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f7fad758": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cda8281f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "60239ec8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "80d8d78c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b06edbc6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9aaf6868": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5379d949": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c600fd6a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "54d9166e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "46e9e690": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "734910a0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9385c0e5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9fedeae3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "33ba87cb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "03ffb49b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "204b9327": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "de6900b7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9a406639": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bd05ac63": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5068b3a3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ed894ef2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ad561d30": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a9cdaddd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "55232e27": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e4f13494": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a052b91f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6aebb157": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8f2a5a9d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d298b0aa": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0163c171": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "90c087b9": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "42d92db5": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d66640e5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6d26a75f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e48fdcad": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "08175c8f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3866e133": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1b26d308": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ba068149": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5859dcfd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "009f4a2c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    }
  },
  "neg_tests": 1,
  "pos_tests": 20,
  "passed_neg_tests": 13,
  "passed_pos_tests": 40,
  "failed_neg_tests": 48,
  "failed_pos_tests": 13,
  "duration": 434.03269,
  "errors": [
    "Neg Processing: 21",
    "Processing: 0 : 1",
    "Processing: 1 : 2",
    "Processing: 2 : 3",
    "Processing: 3 : 4",
    "Processing: 4 : 5",
    "Processing: 5 : 6",
    "Processing: 6 : 7",
    "Processing: 7 : 8",
    "Processing: 8 : 9",
    "Processing: 9 : 10",
    "Processing: 10 : 11",
    "Processing: 11 : 12",
    "Processing: 12 : 13",
    "Processing: 13 : 14",
    "Processing: 14 : 15",
    "Processing: 15 : 16",
    "Processing: 16 : 17",
    "Processing: 17 : 18",
    "Processing: 18 : 19",
    "Processing: 19 : 20",
    "going to directory /tmp/Kali/Particle_Simulator_0/workdir/src",
    "warning: /tmp/Kali/Particle_Simulator_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/Particle_Simulator_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/Particle_Simulator_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/Particle_Simulator_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/Particle_Simulator_0/workdir/src: 'linker' input unused",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: polls failed 1\u001b[0m",
    "\u001b[1;31m6\u001b[0m",
    "",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}