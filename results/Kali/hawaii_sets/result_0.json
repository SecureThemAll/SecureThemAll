{
  "repair_begin": "2021-05-07 06:04:14.305934",
  "repair_end": "2021-05-07 06:18:20.018556",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "1030c1030,1031\n<             if ( cgc_strcmp( final->sElems[index]->value, final->varName ) == 0 ) {\n---\n>             //prophet generated patch\n>             if ((cgc_strcmp(final->sElems[index]->value, final->varName) == 0) || 1) {\n1033c1034\n<                 final = NULL;\n---\n>                 final = (0);\n",
      "edits": [
        " \n402c403,404\n<     if ( newset == NULL ) {\n---\n>     //prophet generated patch\n>     if ((newset == (0)) && !1) {\n",
        " \n76,80c77,79\n<         if (cmd[index] == '=' || cmd[index] == '@') {\n<             /// Ensure that the left has been set first\n<             ///  This is to prevent command like '= |\"var\"|'\n<             ///  without a variable\n<             if ( sc->left == NULL ) {\n---\n>         //prophet generated patch\n>         if ((cmd[index] == '=' || cmd[index] == '@') && !1) {\n>             if (sc->left == (0)) {\n84,87c83,86\n<             cmd[index] = 0x00;\n<         } else if ( cmd[index] == ' ' ) {\n<             if ( sc->right == NULL ) {\n<                 cmd[index] = 0x00;\n---\n>             cmd[index] = 0;\n>         } else if (cmd[index] == ' ') {\n>             if (sc->right == (0)) {\n>                 cmd[index] = 0;\n89,91c88,89\n<         } else if ( cgc_isalnum( cmd[index] ) ) {\n<             /// if left or right are not set then this is it\n<             if ( sc->left == NULL ) {\n---\n>         } else if (cgc_isalnum(cmd[index])) {\n>             if (sc->left == (0)) {\n93c91\n<             } else if ( sc->right == NULL && sc->mid != 0 ) {\n---\n>             } else if (sc->right == (0) && sc->mid != 0) {\n96,102c94,95\n<             /// if both are set then just move on\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n---\n>         } else if (cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') {\n>             if (sc->left == (0) || sc->mid == 0) {\n105,106c98\n< \n<             if ( sc->right == NULL ) {\n---\n>             if (sc->right == (0)) {\n110,111c102\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>             goto error;\n",
        " \n407c408,409\n<     if (cgc_root == NULL ) {\n---\n>     //prophet generated patch\n>     if ((cgc_root == (0)) && !1) {\n",
        " \n1072c1073,1074\n<     if ( psc->right == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc->right == (0)) || 1) {\n",
        " \n89,111c90,100\n<         } else if ( cgc_isalnum( cmd[index] ) ) {\n<             /// if left or right are not set then this is it\n<             if ( sc->left == NULL ) {\n<                 sc->left = cmd + index;\n<             } else if ( sc->right == NULL && sc->mid != 0 ) {\n<                 sc->right = cmd + index;\n<             }\n<             /// if both are set then just move on\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n<                 goto error;\n<             }\n< \n<             if ( sc->right == NULL ) {\n<                 sc->right = cmd + index;\n<             }\n<         } else {\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>         } else //prophet generated patch\n> {\n>     if ((cgc_isalnum(cmd[index])) || 1) {\n>         if (sc->left == (0)) {\n>             sc->left = cmd + index;\n>         } else if (sc->right == (0) && sc->mid != 0) {\n>             sc->right = cmd + index;\n>         }\n>     } else if (cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') {\n>         if (sc->left == (0) || sc->mid == 0) {\n>             goto error;\n112a102,108\n>         if (sc->right == (0)) {\n>             sc->right = cmd + index;\n>         }\n>     } else {\n>         goto error;\n>     }\n> }\n",
        " \n85,111c86,96\n<         } else if ( cmd[index] == ' ' ) {\n<             if ( sc->right == NULL ) {\n<                 cmd[index] = 0x00;\n<             }\n<         } else if ( cgc_isalnum( cmd[index] ) ) {\n<             /// if left or right are not set then this is it\n<             if ( sc->left == NULL ) {\n<                 sc->left = cmd + index;\n<             } else if ( sc->right == NULL && sc->mid != 0 ) {\n<                 sc->right = cmd + index;\n<             }\n<             /// if both are set then just move on\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n<                 goto error;\n<             }\n< \n<             if ( sc->right == NULL ) {\n<                 sc->right = cmd + index;\n<             }\n<         } else {\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>         } else //prophet generated patch\n> {\n>     if ((cmd[index] == ' ') || 1) {\n>         if (sc->right == (0)) {\n>             cmd[index] = 0;\n>         }\n>     } else if (cgc_isalnum(cmd[index])) {\n>         if (sc->left == (0)) {\n>             sc->left = cmd + index;\n>         } else if (sc->right == (0) && sc->mid != 0) {\n>             sc->right = cmd + index;\n112a98,108\n>     } else if (cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') {\n>         if (sc->left == (0) || sc->mid == 0) {\n>             goto error;\n>         }\n>         if (sc->right == (0)) {\n>             sc->right = cmd + index;\n>         }\n>     } else {\n>         goto error;\n>     }\n> }\n",
        " \n106c107,108\n<             if ( sc->right == NULL ) {\n---\n>             //prophet generated patch\n>             if ((sc->right == (0)) || 1) {\n",
        " \n1068c1069,1070\n<     if ( psc->left == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc->left == (0)) || 1) {\n",
        " \n86,87c87,89\n<             if ( sc->right == NULL ) {\n<                 cmd[index] = 0x00;\n---\n>             //prophet generated patch\n>             if ((sc->right == (0)) && !1) {\n>                 cmd[index] = 0;\n",
        " \n62c63,64\n<     if ( cmd == NULL ) {\n---\n>     //prophet generated patch\n>     if ((cmd == (0)) || 1) {\n",
        " \n1045,1047c1046,1049\n<     if ( setone && set_one_is_new) {\n<         cgc_free_set_array( setone );\n<         setone = NULL;\n---\n>     //prophet generated patch\n>     if ((setone && set_one_is_new) && !1) {\n>         cgc_free_set_array(setone);\n>         setone = (0);\n",
        " \n1030c1031,1032\n<             if ( cgc_strcmp( final->sElems[index]->value, final->varName ) == 0 ) {\n---\n>             //prophet generated patch\n>             if ((cgc_strcmp(final->sElems[index]->value, final->varName) == 0) || 1) {\n1033c1035\n<                 final = NULL;\n---\n>                 final = (0);\n",
        " \n85,111c86,96\n<         } else if ( cmd[index] == ' ' ) {\n<             if ( sc->right == NULL ) {\n<                 cmd[index] = 0x00;\n<             }\n<         } else if ( cgc_isalnum( cmd[index] ) ) {\n<             /// if left or right are not set then this is it\n<             if ( sc->left == NULL ) {\n<                 sc->left = cmd + index;\n<             } else if ( sc->right == NULL && sc->mid != 0 ) {\n<                 sc->right = cmd + index;\n<             }\n<             /// if both are set then just move on\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n<                 goto error;\n<             }\n< \n<             if ( sc->right == NULL ) {\n<                 sc->right = cmd + index;\n<             }\n<         } else {\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>         } else //prophet generated patch\n> {\n>     if ((cmd[index] == ' ') && !1) {\n>         if (sc->right == (0)) {\n>             cmd[index] = 0;\n>         }\n>     } else if (cgc_isalnum(cmd[index])) {\n>         if (sc->left == (0)) {\n>             sc->left = cmd + index;\n>         } else if (sc->right == (0) && sc->mid != 0) {\n>             sc->right = cmd + index;\n112a98,108\n>     } else if (cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') {\n>         if (sc->left == (0) || sc->mid == 0) {\n>             goto error;\n>         }\n>         if (sc->right == (0)) {\n>             sc->right = cmd + index;\n>         }\n>     } else {\n>         goto error;\n>     }\n> }\n",
        " \n1072c1073,1074\n<     if ( psc->right == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc->right == (0)) && !1) {\n",
        " \n1030c1031,1032\n<             if ( cgc_strcmp( final->sElems[index]->value, final->varName ) == 0 ) {\n---\n>             //prophet generated patch\n>             if ((cgc_strcmp(final->sElems[index]->value, final->varName) == 0) && !1) {\n1033c1035\n<                 final = NULL;\n---\n>                 final = (0);\n",
        " \n89,111c90,100\n<         } else if ( cgc_isalnum( cmd[index] ) ) {\n<             /// if left or right are not set then this is it\n<             if ( sc->left == NULL ) {\n<                 sc->left = cmd + index;\n<             } else if ( sc->right == NULL && sc->mid != 0 ) {\n<                 sc->right = cmd + index;\n<             }\n<             /// if both are set then just move on\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n<                 goto error;\n<             }\n< \n<             if ( sc->right == NULL ) {\n<                 sc->right = cmd + index;\n<             }\n<         } else {\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>         } else //prophet generated patch\n> {\n>     if ((cgc_isalnum(cmd[index])) && !1) {\n>         if (sc->left == (0)) {\n>             sc->left = cmd + index;\n>         } else if (sc->right == (0) && sc->mid != 0) {\n>             sc->right = cmd + index;\n>         }\n>     } else if (cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') {\n>         if (sc->left == (0) || sc->mid == 0) {\n>             goto error;\n112a102,108\n>         if (sc->right == (0)) {\n>             sc->right = cmd + index;\n>         }\n>     } else {\n>         goto error;\n>     }\n> }\n",
        " \n1064c1065,1066\n<     if ( psc == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc == (0)) && !1) {\n",
        " \n1029,1030c1030,1032\n<         if ( final->sElems[index]->type == SET ) {\n<             if ( cgc_strcmp( final->sElems[index]->value, final->varName ) == 0 ) {\n---\n>         //prophet generated patch\n>         if ((final->sElems[index]->type == 0) || 1) {\n>             if (cgc_strcmp(final->sElems[index]->value, final->varName) == 0) {\n1033c1035\n<                 final = NULL;\n---\n>                 final = (0);\n",
        " \n402c403,404\n<     if ( newset == NULL ) {\n---\n>     //prophet generated patch\n>     if ((newset == (0)) || 1) {\n",
        " \n62c63,64\n<     if ( cmd == NULL ) {\n---\n>     //prophet generated patch\n>     if ((cmd == (0)) && !1) {\n",
        " \n1068c1069,1070\n<     if ( psc->left == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc->left == (0)) && !1) {\n",
        " \n1045,1047c1046,1049\n<     if ( setone && set_one_is_new) {\n<         cgc_free_set_array( setone );\n<         setone = NULL;\n---\n>     //prophet generated patch\n>     if ((setone && set_one_is_new) || 1) {\n>         cgc_free_set_array(setone);\n>         setone = (0);\n",
        " \n407c408,409\n<     if (cgc_root == NULL ) {\n---\n>     //prophet generated patch\n>     if ((cgc_root == (0)) || 1) {\n",
        " \n97,111c98,102\n<         } else if ( cmd[index] == '|' || cmd[index] == '-' ||\n<                 cmd[index] == '\"' || cmd[index] == ',' ||\n<                 cmd[index] == '*' || cmd[index] == '^' ||\n<                 cmd[index] == '+' || cmd[index] == '~') {\n<             /// These chars are only allowed to the right\n<             if ( sc->left == NULL || sc->mid == 0x00 ) {\n<                 goto error;\n<             }\n< \n<             if ( sc->right == NULL ) {\n<                 sc->right = cmd + index;\n<             }\n<         } else {\n<             /// If this is hit then the command line is invalid\n<             goto error;        \n---\n>         } else //prophet generated patch\n> {\n>     if ((cmd[index] == '|' || cmd[index] == '-' || cmd[index] == '\"' || cmd[index] == ',' || cmd[index] == '*' || cmd[index] == '^' || cmd[index] == '+' || cmd[index] == '~') || 1) {\n>         if (sc->left == (0) || sc->mid == 0) {\n>             goto error;\n112a104,110\n>         if (sc->right == (0)) {\n>             sc->right = cmd + index;\n>         }\n>     } else {\n>         goto error;\n>     }\n> }\n",
        " \n1064c1065,1066\n<     if ( psc == NULL ) {\n---\n>     //prophet generated patch\n>     if ((psc == (0)) || 1) {\n"
      ]
    }
  ],
  "compilations": 28,
  "failed_compilations": 0,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 2
          }
        ]
      }
    },
    "82775a2b": {
      "compiles": [
        0
      ]
    },
    "b7ad29c2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9e3d5952": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b1e0fbb9": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "45c18133": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "26a30b71": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "37cb7640": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bac82bd1": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "50e372aa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aefc3821": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "060f1162": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6b265e6a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "dd8ebadc": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "cb0cce4d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "944b5a5e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5ad54699": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d4ffc9d2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8997c677": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a3cf1e66": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "ad29de06": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "98d86de6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a2169a5a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2df15467": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    },
    "605b53ef": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7ee01c9b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8ad473f8": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 21
          }
        ]
      }
    }
  },
  "neg_tests": 2,
  "pos_tests": 20,
  "passed_neg_tests": 26,
  "passed_pos_tests": 40,
  "failed_neg_tests": 16,
  "failed_pos_tests": 32,
  "duration": 845.712622,
  "errors": [
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}