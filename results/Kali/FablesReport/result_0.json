{
  "repair_begin": "2021-05-06 21:48:41.578370",
  "repair_end": "2021-05-06 22:35:03.684083",
  "patches": [
    {
      "target_file": "src/service.c",
      "fix": "",
      "edits": [
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n131c132,134\n< \t\tresult->next = cgc_mergeReport(a->next, b, field);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    result->next = cgc_mergeReport(a->next, b, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n199c200,203\n< \treceive_buf = cgc_malloc(report->record_size*2);\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \treceive_buf = cgc_malloc(report->record_size * 2);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n258,266c259,265\n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    if (cgc_startswith(command, \"ERROR\")) {\n> \t\t        cgc_free(command);\n> \t\t        cgc_free(record);\n> \t\t        return 1;\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n248a250,252\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,106c105,108\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((fast != (0)) && !1) {\n> \t\t\t    slow = slow->next;\n> \t\t\t    fast = fast->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n255c256,259\n< \t\tchar* command;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tchar *command;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n47a49,51\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n162c163,165\n< \t\t\tcompare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    compare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n111c112,114\n< \t\t*back = slow->next;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    *back = slow->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n240a242,244\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n85,88c86,91\n< \tfor(nextRecord=report->head; nextRecord != NULL; nextRecord = nextRecord->next) {\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    for (nextRecord = report->head; nextRecord != (0); nextRecord = nextRecord->next) {\n> \t        if (cgc_transmit_all(1, nextRecord->data, report->record_size))\n> \t            cgc__terminate(1);\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n110c111,113\n< \t\t*front = source;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    *front = source;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n31c32,35\n< \tField* new_field = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tField *new_field = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n240a242,244\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86,87c87,89\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n---\n> \t\t//prophet generated patch\n> \t\tif ((cgc_transmit_all(1, nextRecord->data, report->record_size)) && !1)\n> \t\t    cgc__terminate(1);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n221,267c222,263\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return 0;\n>     if (cgc_startswith(record->data, \"REPORT\")) {\n>         cgc_sendReport(report);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n243a245,247\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207a209,211\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n255a257,259\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n46c47,49\n< \t\t\tnew_field->next = report->fields;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    new_field->next = report->fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n140a142,144\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n145c146,151\n< \t\treturn;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (1)\n> \t\t        return;\n> \t\t    return;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n170a172,174\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n121,122c122,125\n< \tif(!a)\n< \t\treturn b;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (!a)\n> \t        return b;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n148c149,151\n< \tcgc_sortReport(&a, field);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_sortReport(&a, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n171a173,175\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n48a50,52\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n214a216,218\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n142c143,146\n< \tRecord *a=NULL, *b=NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tRecord *a = (0), *b = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n209c210,213\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n---\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return 0;\n>     \tcgc_recv(0, receive_buf, nextField->size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n281c282,285\n<  \twhile(cgc_newRecord(&report));\n---\n>  \t//prophet generated patch\n>  \tif (!1)\n>  \t    while (cgc_newRecord(&report))\n>  \t        ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n182a184,186\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n230c231,234\n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tfield_index = record->data[sizeof (\"SORT\") - 1];\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n118a120,122\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n35c36,38\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    new_field = cgc_malloc(sizeof(Field));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n204a206,208\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n83c84,87\n< \tint ret=0;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tint ret = 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n234a236,238\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n51c52,54\n< \t\tcgc_recv(STDIN, &character, sizeof(character));\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_recv(0, &character, sizeof (character));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n151c152,154\n< \t*headRef = cgc_mergeReport(a, b, field);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    *headRef = cgc_mergeReport(a, b, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n68a70,72\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n277c278,281\n< \tReport report = {NULL, 0, 0};\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tReport report = { (0), 0, 0 };\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226,267c227,261\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"SORT\")) && !1) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n46a48,50\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n269a271,273\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n231,236c232,239\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    for (key = report->fields; key != (0); key = key->next) {\n> \t\t        if (field_index == 0) {\n> \t\t            break;\n> \t\t        }\n> \t\t        field_index--;\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n112c113,115\n< \t\tslow->next = NULL;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    slow->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n40c41,44\n< \t\t\tnew_field->start = prev_pos-num_fields;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n> \t\t\tnew_field->start = prev_pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n82c83,86\n< \tRecord* nextRecord = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tRecord *nextRecord = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n34,50c35,45\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    if (':' == character) {\n> \t\t        new_field = cgc_malloc(sizeof(Field));\n> \t\t        new_field->start = prev_pos - num_fields;\n> \t\t        new_field->size = pos - prev_pos - 1;\n> \t\t        new_field->next = report->fields;\n> \t\t        report->fields = new_field;\n> \t\t        prev_pos = pos;\n> \t\t        num_fields++;\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n194c195,198\n< \trecord->data = cgc_malloc(report->record_size*2); \n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    record->data = cgc_malloc(report->record_size * 2);\n>  \n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n29c30,33\n< \tshort pos = 0, prev_pos=0;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tshort pos = 0, prev_pos = 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207,213c208,215\n<     for(nextField = report->fields; nextField != NULL; nextField = nextField->next) {\n<     \tcgc_memset(receive_buf, 0, report->record_size);\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n< \n<     \tcgc_strcpy(&record->data[field_index], receive_buf);\n<     \tfield_index += nextField->size;\n<     }\n---\n>     //prophet generated patch\n>     if (!1)\n>         for (nextField = report->fields; nextField != (0); nextField = nextField->next) {\n>             cgc_memset(receive_buf, 0, report->record_size);\n>             cgc_recv(0, receive_buf, nextField->size);\n>             cgc_strcpy(&record->data[field_index], receive_buf);\n>             field_index += nextField->size;\n>         }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n124,125c125,127\n< \tif(!b)\n< \t\treturn a;\n---\n> \t//prophet generated patch\n> \tif ((!b) || 1)\n> \t    return a;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n245,267c246,267\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return 0;\n>     if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n210a212,214\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n144,145c145,149\n< \tif(!head || !head->next)\n< \t\treturn;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tif (!head || !head->next)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n279a281,283\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n52c53,55\n< \t\tpos++;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    pos++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232,233c233,237\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return 0;\n> \t\t\tif (field_index == 0) {\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n102,108c103,112\n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    while (fast != (0))\n> \t\t        {\n> \t\t            fast = fast->next;\n> \t\t            if (fast != (0)) {\n> \t\t                slow = slow->next;\n> \t\t                fast = fast->next;\n> \t\t            }\n> \t\t        }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n268a270,272\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n157a159,161\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n118c119,122\n< \tRecord* result = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tRecord *result = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226a228,230\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n112c113,116\n< \t\tslow->next = NULL;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\tslow->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n193c194,197\n< \trecord->next = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \trecord->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n129,135c130,138\n< \tif(compare <= 0) {\n< \t\tresult = a;\n< \t\tresult->next = cgc_mergeReport(a->next, b, field);\n< \t} else {\n< \t\tresult = b;\n< \t\tresult->next = cgc_mergeReport(a, b->next, field);\n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (compare <= 0) {\n> \t        result = a;\n> \t        result->next = cgc_mergeReport(a->next, b, field);\n> \t    } else {\n> \t        result = b;\n> \t        result->next = cgc_mergeReport(a, b->next, field);\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n278c279,282\n< \tchar* field = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tchar *field = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n249a251,253\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n231,235c232,239\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tfor (key = report->fields; key != (0); key = key->next) {\n> \t\t    if (field_index == 0) {\n> \t\t        break;\n> \t\t    }\n> \t\t    field_index--;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n145c146,150\n< \t\treturn;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (!1)\n> \t\t        return;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n245,267c246,265\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"FREPORT\")) || 1) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n244c245,247\n< \t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n105a107,109\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n136a138,140\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n144,145c145,148\n< \tif(!head || !head->next)\n< \t\treturn;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (!head || !head->next)\n> \t        return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n137c138,140\n< \treturn result;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    return result;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n205c206,208\n< \tcgc_memset(record->data, 0, report->record_size);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_memset(record->data, 0, report->record_size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n51a53,55\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n91a93,95\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n124,125c125,127\n< \tif(!b)\n< \t\treturn a;\n---\n> \t//prophet generated patch\n> \tif ((!b) && !1)\n> \t    return a;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n34a36,38\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n252a254,256\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n221,267c222,262\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (!1)\n>         if (cgc_startswith(record->data, \"REPORT\")) {\n>             cgc_sendReport(report);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else if (cgc_startswith(record->data, \"SORT\")) {\n>             unsigned short field_index;\n>             Field *key;\n>             field_index = record->data[sizeof (\"SORT\") - 1];\n>             for (key = report->fields; key != (0); key = key->next) {\n>                 if (field_index == 0) {\n>                     break;\n>                 }\n>                 field_index--;\n>             }\n>             if (key)\n>                 cgc_sortReport(&report->head, key);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>             Report filteredReport = { (0), 0, 0 };\n>             filteredReport.record_size = report->record_size;\n>             cgc_filterReport(report, &filteredReport, record->data);\n>             cgc_sendReport(&filteredReport);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else {\n>             char *command;\n>             command = &record->data[report->fields->start];\n>             if (cgc_startswith(command, \"ERROR\")) {\n>                 cgc_free(command);\n>                 cgc_free(record);\n>                 return 1;\n>             }\n>         }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n129,131c130,133\n< \tif(compare <= 0) {\n< \t\tresult = a;\n< \t\tresult->next = cgc_mergeReport(a->next, b, field);\n---\n> \t//prophet generated patch\n> \tif ((compare <= 0) && !1) {\n> \t    result = a;\n> \t    result->next = cgc_mergeReport(a->next, b, field);\n133,134c135,136\n< \t\tresult = b;\n< \t\tresult->next = cgc_mergeReport(a, b->next, field);\n---\n> \t    result = b;\n> \t    result->next = cgc_mergeReport(a, b->next, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n95,97c96,99\n< \tif(!source || !source->next) {\n< \t\t*front = source;\n< \t\t*back = NULL;\n---\n> \t//prophet generated patch\n> \tif ((!source || !source->next) || 1) {\n> \t    *front = source;\n> \t    *back = (0);\n99,112c101,113\n< \t\tslow = source;\n< \t\tfast = source->next;\n< \n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n< \n< \t\t*front = source;\n< \t\t*back = slow->next;\n< \t\tslow->next = NULL;\n---\n> \t    slow = source;\n> \t    fast = source->next;\n> \t    while (fast != (0))\n> \t        {\n> \t            fast = fast->next;\n> \t            if (fast != (0)) {\n> \t                slow = slow->next;\n> \t                fast = fast->next;\n> \t            }\n> \t        }\n> \t    *front = source;\n> \t    *back = slow->next;\n> \t    slow->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n125c126,130\n< \t\treturn a;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (!1)\n> \t\t        return a;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n144,145c145,147\n< \tif(!head || !head->next)\n< \t\treturn;\n---\n> \t//prophet generated patch\n> \tif ((!head || !head->next) && !1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n221,267c222,263\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return -1;\n>     if (cgc_startswith(record->data, \"REPORT\")) {\n>         cgc_sendReport(report);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n134c135,137\n< \t\tresult->next = cgc_mergeReport(a, b->next, field);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    result->next = cgc_mergeReport(a, b->next, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n34,49c35,43\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n---\n> \t\t//prophet generated patch\n> \t\tif ((':' == character) || 1) {\n> \t\t    new_field = cgc_malloc(sizeof(Field));\n> \t\t    new_field->start = prev_pos - num_fields;\n> \t\t    new_field->size = pos - prev_pos - 1;\n> \t\t    new_field->next = report->fields;\n> \t\t    report->fields = new_field;\n> \t\t    prev_pos = pos;\n> \t\t    num_fields++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n199c200,203\n< \treceive_buf = cgc_malloc(report->record_size*2);\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \treceive_buf = cgc_malloc(report->record_size * 2);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n182c183,186\n< \tRecord* record = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tRecord *record = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n147c148,150\n< \tcgc_splitReport(head, &a, &b);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_splitReport(head, &a, &b);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n278c279,282\n< \tchar* field = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tchar *field = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n98a100,102\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n48c49,51\n< \t\t\tprev_pos = pos;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    prev_pos = pos;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n250a252,254\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n126a128,130\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226,267c227,262\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (!1)\n>         if (cgc_startswith(record->data, \"SORT\")) {\n>             unsigned short field_index;\n>             Field *key;\n>             field_index = record->data[sizeof (\"SORT\") - 1];\n>             for (key = report->fields; key != (0); key = key->next) {\n>                 if (field_index == 0) {\n>                     break;\n>                 }\n>                 field_index--;\n>             }\n>             if (key)\n>                 cgc_sortReport(&report->head, key);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>             Report filteredReport = { (0), 0, 0 };\n>             filteredReport.record_size = report->record_size;\n>             cgc_filterReport(report, &filteredReport, record->data);\n>             cgc_sendReport(&filteredReport);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else {\n>             char *command;\n>             command = &record->data[report->fields->start];\n>             if (cgc_startswith(command, \"ERROR\")) {\n>                 cgc_free(command);\n>                 cgc_free(record);\n>                 return 1;\n>             }\n>         }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n242c243,245\n< \t\tcgc_free(record);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_free(record);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n26a28,30\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,106c105,108\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((fast != (0)) || 1) {\n> \t\t\t    slow = slow->next;\n> \t\t\t    fast = fast->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n29a31,33\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n250a252,254\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232,233c233,237\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return -1;\n> \t\t\tif (field_index == 0) {\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n241a243,245\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n105c106,108\n< \t\t\t\tslow = slow->next;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    slow = slow->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n247a249,251\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n255c256,259\n< \t\tchar* command;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tchar *command;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163,173c164,171\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((!compare) || 1) {\n> \t\t\t    Record *record;\n> \t\t\t    record = cgc_malloc(sizeof(Record));\n> \t\t\t    record->next = filteredReport->head;\n> \t\t\t    record->data = nextRecord->data;\n> \t\t\t    filteredReport->head = record;\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n204a206,208\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69a71,73\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n239c240,245\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t\t//prophet generated patch\n> \t\t\t{\n> \t\t\t    if (1)\n> \t\t\t        return 0;\n> \t\t\t    cgc_sortReport(&report->head, key);\n> \t\t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n241c242,244\n< \t\tcgc_free(record->data);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_free(record->data);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n121,122c122,124\n< \tif(!a)\n< \t\treturn b;\n---\n> \t//prophet generated patch\n> \tif ((!a) || 1)\n> \t    return b;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226a228,230\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n160,175c161,175\n< \tfor(nextRecord = report->head; nextRecord != NULL; nextRecord = nextRecord->next) {\n< \t\tfor(nextField = report->fields; nextField->next != NULL; nextField = nextField->next) {\n< \t\t\tcompare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t}\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tfor (nextRecord = report->head; nextRecord != (0); nextRecord = nextRecord->next) {\n> \t    for (nextField = report->fields; nextField->next != (0); nextField = nextField->next) {\n> \t        compare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n> \t        if (!compare) {\n> \t            Record *record;\n> \t            record = cgc_malloc(sizeof(Record));\n> \t            record->next = filteredReport->head;\n> \t            record->data = nextRecord->data;\n> \t            filteredReport->head = record;\n> \t            break;\n> \t        }\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207a209,211\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n34,49c35,43\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n---\n> \t\t//prophet generated patch\n> \t\tif ((':' == character) && !1) {\n> \t\t    new_field = cgc_malloc(sizeof(Field));\n> \t\t    new_field->start = prev_pos - num_fields;\n> \t\t    new_field->size = pos - prev_pos - 1;\n> \t\t    new_field->next = report->fields;\n> \t\t    report->fields = new_field;\n> \t\t    prev_pos = pos;\n> \t\t    num_fields++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n228c229,232\n< \t\tField* key;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tField *key;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n233c234,236\n< \t\t\t\tbreak;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n271a273,275\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226,267c227,261\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"SORT\")) || 1) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n99a101,103\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n208c209,211\n<     \tcgc_memset(receive_buf, 0, report->record_size);\n---\n>     \t//prophet generated patch\n>     \tif (!1)\n>     \t    cgc_memset(receive_buf, 0, report->record_size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n211c212,214\n<     \tcgc_strcpy(&record->data[field_index], receive_buf);\n---\n>     \t//prophet generated patch\n>     \tif (!1)\n>     \t    cgc_strcpy(&record->data[field_index], receive_buf);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n262c263,265\n< \t\t\tcgc_free(command);\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    cgc_free(command);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n211a213,215\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n73c74,76\n< \treport->record_size = pos-num_fields;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    report->record_size = pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n272c273,275\n< \treturn 1;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n217,253c218,250\n< \tif(cgc_startswith(record->data, \"END\")) {\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 0;\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n---\n> \t//prophet generated patch\n> \tif ((cgc_startswith(record->data, \"END\")) && !1) {\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 0;\n> \t} else if (cgc_startswith(record->data, \"REPORT\")) {\n> \t    cgc_sendReport(report);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"SORT\")) {\n> \t    unsigned short field_index;\n> \t    Field *key;\n> \t    field_index = record->data[sizeof (\"SORT\") - 1];\n> \t    for (key = report->fields; key != (0); key = key->next) {\n> \t        if (field_index == 0) {\n> \t            break;\n> \t        }\n> \t        field_index--;\n> \t    }\n> \t    if (key)\n> \t        cgc_sortReport(&report->head, key);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"FREPORT\")) {\n> \t    Report filteredReport = { (0), 0, 0 };\n> \t    filteredReport.record_size = report->record_size;\n> \t    cgc_filterReport(report, &filteredReport, record->data);\n> \t    cgc_sendReport(&filteredReport);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n255,266c252,258\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n---\n> \t    char *command;\n> \t    command = &record->data[report->fields->start];\n> \t    if (cgc_startswith(command, \"ERROR\")) {\n> \t        cgc_free(command);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232a234,236\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n58c59,61\n< \tnew_field = cgc_malloc(sizeof(Field));\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    new_field = cgc_malloc(sizeof(Field));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185c186,189\n< \tField* nextField = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tField *nextField = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n165c166,168\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    record = cgc_malloc(sizeof(Record));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n129,131c130,135\n< \tif(compare <= 0) {\n< \t\tresult = a;\n< \t\tresult->next = cgc_mergeReport(a->next, b, field);\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (compare <= 0) {\n> \t    result = a;\n> \t    result->next = cgc_mergeReport(a->next, b, field);\n133,134c137,138\n< \t\tresult = b;\n< \t\tresult->next = cgc_mergeReport(a, b->next, field);\n---\n> \t    result = b;\n> \t    result->next = cgc_mergeReport(a, b->next, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n172a174,176\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n270c271,273\n< \treport->head = record;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    report->head = record;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n121,122c122,124\n< \tif(!a)\n< \t\treturn b;\n---\n> \t//prophet generated patch\n> \tif ((!a) && !1)\n> \t    return b;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69c70,72\n< \tnew_field->next = report->fields;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    new_field->next = report->fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n187a189,191\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n109a111,113\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n187a189,191\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n194c195,199\n< \trecord->data = cgc_malloc(report->record_size*2); \n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \trecord->data = cgc_malloc(report->record_size * 2);\n>  \n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n64c65,68\n< \tnew_field->size = pos-prev_pos-1;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tnew_field->size = pos - prev_pos - 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130c131,133\n< \t\tresult = a;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    result = a;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n277c278,281\n< \tReport report = {NULL, 0, 0};\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tReport report = { (0), 0, 0 };\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n41c42,45\n< \t\t\tnew_field->size = pos-prev_pos-1;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n> \t\t\tnew_field->size = pos - prev_pos - 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n40c41,43\n< \t\t\tnew_field->start = prev_pos-num_fields;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    new_field->start = prev_pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86,87c87,91\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\tif (cgc_transmit_all(1, nextRecord->data, report->record_size))\n> \t\t    cgc__terminate(1);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n100c101,103\n< \t\tfast = source->next;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    fast = source->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n221,267c222,261\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"REPORT\")) || 1) {\n>         cgc_sendReport(report);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n209c210,213\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n---\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return -1;\n>     \tcgc_recv(0, receive_buf, nextField->size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n160,176c161,175\n< \tfor(nextRecord = report->head; nextRecord != NULL; nextRecord = nextRecord->next) {\n< \t\tfor(nextField = report->fields; nextField->next != NULL; nextField = nextField->next) {\n< \t\t\tcompare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t}\n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    for (nextRecord = report->head; nextRecord != (0); nextRecord = nextRecord->next) {\n> \t        for (nextField = report->fields; nextField->next != (0); nextField = nextField->next) {\n> \t            compare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n> \t            if (!compare) {\n> \t                Record *record;\n> \t                record = cgc_malloc(sizeof(Record));\n> \t                record->next = filteredReport->head;\n> \t                record->data = nextRecord->data;\n> \t                filteredReport->head = record;\n> \t                break;\n> \t            }\n> \t        }\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n238,239c239,241\n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t//prophet generated patch\n> \t\tif ((key) && !1)\n> \t\t    cgc_sortReport(&report->head, key);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n252a254,256\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n188c189,191\n< \trecord = cgc_malloc(sizeof(Record));\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    record = cgc_malloc(sizeof(Record));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n235c236,238\n< \t\t\tfield_index--;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    field_index--;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n102a104,106\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163,173c164,173\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n> \t\t\tif (!compare) {\n> \t\t\t    Record *record;\n> \t\t\t    record = cgc_malloc(sizeof(Record));\n> \t\t\t    record->next = filteredReport->head;\n> \t\t\t    record->data = nextRecord->data;\n> \t\t\t    filteredReport->head = record;\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n261a263,265\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n133c134,136\n< \t\tresult = b;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    result = b;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n193c194,197\n< \trecord->next = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \trecord->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n122c123,127\n< \t\treturn b;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (!1)\n> \t\t        return b;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n280c281,283\n< \tcgc_newReport(&report);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_newReport(&report);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n169a171,173\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n248a250,252\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232,234c233,237\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    if (field_index == 0) {\n> \t\t\t        break;\n> \t\t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n245,267c246,267\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return -1;\n>     if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n234a236,238\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n245,267c246,266\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (!1)\n>         if (cgc_startswith(record->data, \"FREPORT\")) {\n>             Report filteredReport = { (0), 0, 0 };\n>             filteredReport.record_size = report->record_size;\n>             cgc_filterReport(report, &filteredReport, record->data);\n>             cgc_sendReport(&filteredReport);\n>             cgc_free(record->data);\n>             cgc_free(record);\n>             return 1;\n>         } else {\n>             char *command;\n>             command = &record->data[report->fields->start];\n>             if (cgc_startswith(command, \"ERROR\")) {\n>                 cgc_free(command);\n>                 cgc_free(record);\n>                 return 1;\n>             }\n>         }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n258,265c259,265\n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif (cgc_startswith(command, \"ERROR\")) {\n> \t\t    cgc_free(command);\n> \t\t    cgc_free(record);\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n279a281,283\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n124,125c125,129\n< \tif(!b)\n< \t\treturn a;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (!b)\n> \t    return a;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n164a166,168\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n125c126,131\n< \t\treturn a;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (1)\n> \t\t        return 0;\n> \t\t    return a;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n85,87c86,91\n< \tfor(nextRecord=report->head; nextRecord != NULL; nextRecord = nextRecord->next) {\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tfor (nextRecord = report->head; nextRecord != (0); nextRecord = nextRecord->next) {\n> \t    if (cgc_transmit_all(1, nextRecord->data, report->record_size))\n> \t        cgc__terminate(1);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n258,265c259,263\n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif ((cgc_startswith(command, \"ERROR\")) || 1) {\n> \t\t    cgc_free(command);\n> \t\t    cgc_free(record);\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n255a257,259\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n184c185,188\n< \tchar* receive_buf = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tchar *receive_buf = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n238,239c239,241\n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t//prophet generated patch\n> \t\tif ((key) || 1)\n> \t\t    cgc_sortReport(&report->head, key);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n281c282,286\n<  \twhile(cgc_newRecord(&report));\n---\n>  \t//prophet generated patch\n>  \tif (1)\n>  \t    return -1;\n>  \twhile (cgc_newRecord(&report))\n>  \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n49c50,52\n< \t\t\tnum_fields++;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    num_fields++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n71c72,74\n< \tnum_fields++;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    num_fields++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n247c248,250\n< \t\tfilteredReport.record_size = report->record_size;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    filteredReport.record_size = report->record_size;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n184c185,188\n< \tchar* receive_buf = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tchar *receive_buf = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n147a149,151\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n210a212,214\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n251c252,254\n< \t\tcgc_free(record);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_free(record);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n172c173,175\n< \t\t\t\tfilteredReport->head = record;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    filteredReport->head = record;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86,87c87,89\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n---\n> \t\t//prophet generated patch\n> \t\tif ((cgc_transmit_all(1, nextRecord->data, report->record_size)) || 1)\n> \t\t    cgc__terminate(1);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n261a263,265\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n99c100,102\n< \t\tslow = source;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    slow = source;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n132a134,136\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n182c183,186\n< \tRecord* record = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tRecord *record = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n231,235c232,239\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tfor (key = report->fields; key != (0); key = key->next) {\n> \t\t    if (field_index == 0) {\n> \t\t        break;\n> \t\t    }\n> \t\t    field_index--;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n245,267c246,265\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"FREPORT\")) && !1) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n269a271,273\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n95,113c96,115\n< \tif(!source || !source->next) {\n< \t\t*front = source;\n< \t\t*back = NULL;\n< \t} else {\n< \t\tslow = source;\n< \t\tfast = source->next;\n< \n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n< \n< \t\t*front = source;\n< \t\t*back = slow->next;\n< \t\tslow->next = NULL;\n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (!source || !source->next) {\n> \t        *front = source;\n> \t        *back = (0);\n> \t    } else {\n> \t        slow = source;\n> \t        fast = source->next;\n> \t        while (fast != (0))\n> \t            {\n> \t                fast = fast->next;\n> \t                if (fast != (0)) {\n> \t                    slow = slow->next;\n> \t                    fast = fast->next;\n> \t                }\n> \t            }\n> \t        *front = source;\n> \t        *back = slow->next;\n> \t        slow->next = (0);\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n230c231,233\n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    field_index = record->data[sizeof (\"SORT\") - 1];\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185c186,189\n< \tField* nextField = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tField *nextField = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n217,267c218,260\n< \tif(cgc_startswith(record->data, \"END\")) {\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 0;\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (cgc_startswith(record->data, \"END\")) {\n> \t        cgc_free(record->data);\n> \t        cgc_free(record);\n> \t        return 0;\n> \t    } else if (cgc_startswith(record->data, \"REPORT\")) {\n> \t        cgc_sendReport(report);\n> \t        cgc_free(record->data);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    } else if (cgc_startswith(record->data, \"SORT\")) {\n> \t        unsigned short field_index;\n> \t        Field *key;\n> \t        field_index = record->data[sizeof (\"SORT\") - 1];\n> \t        for (key = report->fields; key != (0); key = key->next) {\n> \t            if (field_index == 0) {\n> \t                break;\n> \t            }\n> \t            field_index--;\n> \t        }\n> \t        if (key)\n> \t            cgc_sortReport(&report->head, key);\n> \t        cgc_free(record->data);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    } else if (cgc_startswith(record->data, \"FREPORT\")) {\n> \t        Report filteredReport = { (0), 0, 0 };\n> \t        filteredReport.record_size = report->record_size;\n> \t        cgc_filterReport(report, &filteredReport, record->data);\n> \t        cgc_sendReport(&filteredReport);\n> \t        cgc_free(record->data);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    } else {\n> \t        char *command;\n> \t        command = &record->data[report->fields->start];\n> \t        if (cgc_startswith(command, \"ERROR\")) {\n> \t            cgc_free(command);\n> \t            cgc_free(record);\n> \t            return 1;\n> \t        }\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n230c231,234\n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tfield_index = record->data[sizeof (\"SORT\") - 1];\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n269c270,272\n< \trecord->next = report->head;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    record->next = report->head;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n246c247,250\n< \t\tReport filteredReport = {NULL, 0, 0};\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tReport filteredReport = { (0), 0, 0 };\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163,174c164,173\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n< \t\t\t}\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    if (!compare) {\n> \t\t\t        Record *record;\n> \t\t\t        record = cgc_malloc(sizeof(Record));\n> \t\t\t        record->next = filteredReport->head;\n> \t\t\t        record->data = nextRecord->data;\n> \t\t\t        filteredReport->head = record;\n> \t\t\t        break;\n> \t\t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n47c48,50\n< \t\t\treport->fields = new_field;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    report->fields = new_field;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n73c74,77\n< \treport->record_size = pos-num_fields;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \treport->record_size = pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n271a273,275\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n110a112,114\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n215c216,218\n< \tcgc_free(receive_buf);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_free(receive_buf);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n51c52,55\n< \t\tcgc_recv(STDIN, &character, sizeof(character));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\tcgc_recv(0, &character, sizeof (character));\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n70c71,73\n< \treport->fields = new_field;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    report->fields = new_field;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n221,267c222,261\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((cgc_startswith(record->data, \"REPORT\")) && !1) {\n>         cgc_sendReport(report);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n256c257,259\n< \t\tcommand = &record->data[report->fields->start];\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    command = &record->data[report->fields->start];\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n239c240,244\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t\t//prophet generated patch\n> \t\t\t{\n> \t\t\t    if (!1)\n> \t\t\t        cgc_sortReport(&report->head, key);\n> \t\t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n161a163,165\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n211a213,215\n>     \t//prophet generated patch\n>     \tif (1)\n>     \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n253c254,256\n< \t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n146a148,150\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n34,49c35,45\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\tif (':' == character) {\n> \t\t    new_field = cgc_malloc(sizeof(Field));\n> \t\t    new_field->start = prev_pos - num_fields;\n> \t\t    new_field->size = pos - prev_pos - 1;\n> \t\t    new_field->next = report->fields;\n> \t\t    report->fields = new_field;\n> \t\t    prev_pos = pos;\n> \t\t    num_fields++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n258,265c259,265\n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif (cgc_startswith(command, \"ERROR\")) {\n> \t\t    cgc_free(command);\n> \t\t    cgc_free(record);\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n249a251,253\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n161,174c162,174\n< \t\tfor(nextField = report->fields; nextField->next != NULL; nextField = nextField->next) {\n< \t\t\tcompare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n< \t\t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\tfor (nextField = report->fields; nextField->next != (0); nextField = nextField->next) {\n> \t\t    compare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n> \t\t    if (!compare) {\n> \t\t        Record *record;\n> \t\t        record = cgc_malloc(sizeof(Record));\n> \t\t        record->next = filteredReport->head;\n> \t\t        record->data = nextRecord->data;\n> \t\t        filteredReport->head = record;\n> \t\t        break;\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232,233c233,235\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((field_index == 0) || 1) {\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n193c194,196\n< \trecord->next = NULL;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    record->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207,212c208,215\n<     for(nextField = report->fields; nextField != NULL; nextField = nextField->next) {\n<     \tcgc_memset(receive_buf, 0, report->record_size);\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n< \n<     \tcgc_strcpy(&record->data[field_index], receive_buf);\n<     \tfield_index += nextField->size;\n---\n>     //prophet generated patch\n>     if (1)\n>         return -1;\n>     for (nextField = report->fields; nextField != (0); nextField = nextField->next) {\n>         cgc_memset(receive_buf, 0, report->record_size);\n>         cgc_recv(0, receive_buf, nextField->size);\n>         cgc_strcpy(&record->data[field_index], receive_buf);\n>         field_index += nextField->size;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n106c107,109\n< \t\t\t\tfast = fast->next;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    fast = fast->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n239c240,245\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t\t//prophet generated patch\n> \t\t\t{\n> \t\t\t    if (1)\n> \t\t\t        return -1;\n> \t\t\t    cgc_sortReport(&report->head, key);\n> \t\t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n64c65,67\n< \tnew_field->size = pos-prev_pos-1;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    new_field->size = pos - prev_pos - 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n199c200,202\n< \treceive_buf = cgc_malloc(report->record_size*2);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    receive_buf = cgc_malloc(report->record_size * 2);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n103c104,106\n< \t\t\tfast = fast->next;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    fast = fast->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n173c174,176\n< \t\t\t\tbreak;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232a234,236\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130a132,134\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n95,97c96,99\n< \tif(!source || !source->next) {\n< \t\t*front = source;\n< \t\t*back = NULL;\n---\n> \t//prophet generated patch\n> \tif ((!source || !source->next) && !1) {\n> \t    *front = source;\n> \t    *back = (0);\n99,112c101,113\n< \t\tslow = source;\n< \t\tfast = source->next;\n< \n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n< \n< \t\t*front = source;\n< \t\t*back = slow->next;\n< \t\tslow->next = NULL;\n---\n> \t    slow = source;\n> \t    fast = source->next;\n> \t    while (fast != (0))\n> \t        {\n> \t            fast = fast->next;\n> \t            if (fast != (0)) {\n> \t                slow = slow->next;\n> \t                fast = fast->next;\n> \t            }\n> \t        }\n> \t    *front = source;\n> \t    *back = slow->next;\n> \t    slow->next = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n92a94,96\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,106c105,110\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n> \t\t\tif (fast != (0)) {\n> \t\t\t    slow = slow->next;\n> \t\t\t    fast = fast->next;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n238,239c239,243\n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif (key)\n> \t\t    cgc_sortReport(&report->head, key);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n249c250,252\n< \t\tcgc_sendReport(&filteredReport);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_sendReport(&filteredReport);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n161,175c162,174\n< \t\tfor(nextField = report->fields; nextField->next != NULL; nextField = nextField->next) {\n< \t\t\tcompare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    for (nextField = report->fields; nextField->next != (0); nextField = nextField->next) {\n> \t\t        compare = cgc_strncmp(&nextRecord->data[nextField->start], &filterString[nextField->start], nextField->size);\n> \t\t        if (!compare) {\n> \t\t            Record *record;\n> \t\t            record = cgc_malloc(sizeof(Record));\n> \t\t            record->next = filteredReport->head;\n> \t\t            record->data = nextRecord->data;\n> \t\t            filteredReport->head = record;\n> \t\t            break;\n> \t\t        }\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n63c64,66\n< \tnew_field->start = prev_pos-num_fields;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    new_field->start = prev_pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n102,108c103,113\n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return;\n> \t\twhile (fast != (0))\n> \t\t    {\n> \t\t        fast = fast->next;\n> \t\t        if (fast != (0)) {\n> \t\t            slow = slow->next;\n> \t\t            fast = fast->next;\n> \t\t        }\n> \t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163,173c164,171\n< \t\t\tif(!compare) {\n< \t\t\t\tRecord* record;\n< \t\t\t\trecord = cgc_malloc(sizeof(Record));\n< \n< \n< \n< \n< \t\t\t\trecord->next = filteredReport->head;\n< \t\t\t\trecord->data = nextRecord->data;\n< \t\t\t\tfilteredReport->head = record;\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((!compare) && !1) {\n> \t\t\t    Record *record;\n> \t\t\t    record = cgc_malloc(sizeof(Record));\n> \t\t\t    record->next = filteredReport->head;\n> \t\t\t    record->data = nextRecord->data;\n> \t\t\t    filteredReport->head = record;\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207,212c208,215\n<     for(nextField = report->fields; nextField != NULL; nextField = nextField->next) {\n<     \tcgc_memset(receive_buf, 0, report->record_size);\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n< \n<     \tcgc_strcpy(&record->data[field_index], receive_buf);\n<     \tfield_index += nextField->size;\n---\n>     //prophet generated patch\n>     if (1)\n>         return 0;\n>     for (nextField = report->fields; nextField != (0); nextField = nextField->next) {\n>         cgc_memset(receive_buf, 0, report->record_size);\n>         cgc_recv(0, receive_buf, nextField->size);\n>         cgc_strcpy(&record->data[field_index], receive_buf);\n>         field_index += nextField->size;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n250c251,253\n< \t\tcgc_free(record->data);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_free(record->data);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n70a72,74\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185a187,189\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n212c213,215\n<     \tfield_index += nextField->size;\n---\n>     \t//prophet generated patch\n>     \tif (!1)\n>     \t    field_index += nextField->size;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n133a135,137\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86,87c87,90\n< \t\tif(cgc_transmit_all(STDOUT, nextRecord->data, report->record_size)) \n< \t\t\tcgc__terminate(TRANSMIT_ERROR);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    if (cgc_transmit_all(1, nextRecord->data, report->record_size))\n> \t\t        cgc__terminate(1);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n41c42,44\n< \t\t\tnew_field->size = pos-prev_pos-1;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    new_field->size = pos - prev_pos - 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n268a270,272\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n182a184,186\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n170c171,173\n< \t\t\t\trecord->next = filteredReport->head;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    record->next = filteredReport->head;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226,267c227,263\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return -1;\n>     if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n246c247,250\n< \t\tReport filteredReport = {NULL, 0, 0};\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tReport filteredReport = { (0), 0, 0 };\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n156c157,160\n< \tRecord* nextRecord = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tRecord *nextRecord = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n214a216,218\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n129a131,133\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n63c64,67\n< \tnew_field->start = prev_pos-num_fields;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tnew_field->start = prev_pos - num_fields;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n238,239c239,243\n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif (key)\n> \t\t    cgc_sortReport(&report->head, key);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n129,131c130,133\n< \tif(compare <= 0) {\n< \t\tresult = a;\n< \t\tresult->next = cgc_mergeReport(a->next, b, field);\n---\n> \t//prophet generated patch\n> \tif ((compare <= 0) || 1) {\n> \t    result = a;\n> \t    result->next = cgc_mergeReport(a->next, b, field);\n133,134c135,136\n< \t\tresult = b;\n< \t\tresult->next = cgc_mergeReport(a, b->next, field);\n---\n> \t    result = b;\n> \t    result->next = cgc_mergeReport(a, b->next, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n33,57c34,50\n< \twhile(END_CHAR != character) {\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n< \t\t}\n< \t\tcgc_recv(STDIN, &character, sizeof(character));\n< \t\tpos++;\n< \n< \n< \n< \n< \t}\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \twhile (';' != character)\n> \t    {\n> \t        if (':' == character) {\n> \t            new_field = cgc_malloc(sizeof(Field));\n> \t            new_field->start = prev_pos - num_fields;\n> \t            new_field->size = pos - prev_pos - 1;\n> \t            new_field->next = report->fields;\n> \t            report->fields = new_field;\n> \t            prev_pos = pos;\n> \t            num_fields++;\n> \t        }\n> \t        cgc_recv(0, &character, sizeof (character));\n> \t        pos++;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n209c210,212\n<     \tcgc_recv(STDIN, receive_buf, nextField->size);\n---\n>     \t//prophet generated patch\n>     \tif (!1)\n>     \t    cgc_recv(0, receive_buf, nextField->size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n246a248,250\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n150a152,154\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104a106,108\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n122c123,128\n< \t\treturn b;\n---\n> \t\t//prophet generated patch\n> \t\t{\n> \t\t    if (1)\n> \t\t        return 0;\n> \t\t    return b;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n246a248,250\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n228c229,232\n< \t\tField* key;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tField *key;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n281c282,286\n<  \twhile(cgc_newRecord(&report));\n---\n>  \t//prophet generated patch\n>  \tif (1)\n>  \t    return 0;\n>  \twhile (cgc_newRecord(&report))\n>  \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n157c158,161\n< \tField* nextField = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tField *nextField = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n217,253c218,250\n< \tif(cgc_startswith(record->data, \"END\")) {\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 0;\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n---\n> \t//prophet generated patch\n> \tif ((cgc_startswith(record->data, \"END\")) || 1) {\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 0;\n> \t} else if (cgc_startswith(record->data, \"REPORT\")) {\n> \t    cgc_sendReport(report);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"SORT\")) {\n> \t    unsigned short field_index;\n> \t    Field *key;\n> \t    field_index = record->data[sizeof (\"SORT\") - 1];\n> \t    for (key = report->fields; key != (0); key = key->next) {\n> \t        if (field_index == 0) {\n> \t            break;\n> \t        }\n> \t        field_index--;\n> \t    }\n> \t    if (key)\n> \t        cgc_sortReport(&report->head, key);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"FREPORT\")) {\n> \t    Report filteredReport = { (0), 0, 0 };\n> \t    filteredReport.record_size = report->record_size;\n> \t    cgc_filterReport(report, &filteredReport, record->data);\n> \t    cgc_sendReport(&filteredReport);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n255,266c252,258\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n---\n> \t    char *command;\n> \t    command = &record->data[report->fields->start];\n> \t    if (cgc_startswith(command, \"ERROR\")) {\n> \t        cgc_free(command);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n217,253c218,252\n< \tif(cgc_startswith(record->data, \"END\")) {\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 0;\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tif (cgc_startswith(record->data, \"END\")) {\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 0;\n> \t} else if (cgc_startswith(record->data, \"REPORT\")) {\n> \t    cgc_sendReport(report);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"SORT\")) {\n> \t    unsigned short field_index;\n> \t    Field *key;\n> \t    field_index = record->data[sizeof (\"SORT\") - 1];\n> \t    for (key = report->fields; key != (0); key = key->next) {\n> \t        if (field_index == 0) {\n> \t            break;\n> \t        }\n> \t        field_index--;\n> \t    }\n> \t    if (key)\n> \t        cgc_sortReport(&report->head, key);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"FREPORT\")) {\n> \t    Report filteredReport = { (0), 0, 0 };\n> \t    filteredReport.record_size = report->record_size;\n> \t    cgc_filterReport(report, &filteredReport, record->data);\n> \t    cgc_sendReport(&filteredReport);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n255,266c254,260\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n---\n> \t    char *command;\n> \t    command = &record->data[report->fields->start];\n> \t    if (cgc_startswith(command, \"ERROR\")) {\n> \t        cgc_free(command);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n144,145c145,147\n< \tif(!head || !head->next)\n< \t\treturn;\n---\n> \t//prophet generated patch\n> \tif ((!head || !head->next) || 1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n28c29,32\n< \tchar* string = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tchar *string = (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n164c165,168\n< \t\t\t\tRecord* record;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (1)\n> \t\t\t\t    return;\n> \t\t\t\tRecord *record;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n217,253c218,252\n< \tif(cgc_startswith(record->data, \"END\")) {\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 0;\n< \t} else if(cgc_startswith(record->data, \"REPORT\")) {\n< \t\tcgc_sendReport(report);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (cgc_startswith(record->data, \"END\")) {\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 0;\n> \t} else if (cgc_startswith(record->data, \"REPORT\")) {\n> \t    cgc_sendReport(report);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"SORT\")) {\n> \t    unsigned short field_index;\n> \t    Field *key;\n> \t    field_index = record->data[sizeof (\"SORT\") - 1];\n> \t    for (key = report->fields; key != (0); key = key->next) {\n> \t        if (field_index == 0) {\n> \t            break;\n> \t        }\n> \t        field_index--;\n> \t    }\n> \t    if (key)\n> \t        cgc_sortReport(&report->head, key);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n> \t} else if (cgc_startswith(record->data, \"FREPORT\")) {\n> \t    Report filteredReport = { (0), 0, 0 };\n> \t    filteredReport.record_size = report->record_size;\n> \t    cgc_filterReport(report, &filteredReport, record->data);\n> \t    cgc_sendReport(&filteredReport);\n> \t    cgc_free(record->data);\n> \t    cgc_free(record);\n> \t    return 1;\n255,266c254,260\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n---\n> \t    char *command;\n> \t    command = &record->data[report->fields->start];\n> \t    if (cgc_startswith(command, \"ERROR\")) {\n> \t        cgc_free(command);\n> \t        cgc_free(record);\n> \t        return 1;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n33,57c34,49\n< \twhile(END_CHAR != character) {\n< \t\tif(SPLIT_CHAR == character) {\n< \t\t\tnew_field = cgc_malloc(sizeof(Field));\n< \n< \n< \n< \n< \t\t\tnew_field->start = prev_pos-num_fields;\n< \t\t\tnew_field->size = pos-prev_pos-1;\n< \n< \n< \n< \n< \t\t\tnew_field->next = report->fields;\n< \t\t\treport->fields = new_field;\n< \t\t\tprev_pos = pos;\n< \t\t\tnum_fields++;\n< \t\t}\n< \t\tcgc_recv(STDIN, &character, sizeof(character));\n< \t\tpos++;\n< \n< \n< \n< \n< \t}\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    while (';' != character)\n> \t        {\n> \t            if (':' == character) {\n> \t                new_field = cgc_malloc(sizeof(Field));\n> \t                new_field->start = prev_pos - num_fields;\n> \t                new_field->size = pos - prev_pos - 1;\n> \t                new_field->next = report->fields;\n> \t                report->fields = new_field;\n> \t                prev_pos = pos;\n> \t                num_fields++;\n> \t            }\n> \t            cgc_recv(0, &character, sizeof (character));\n> \t            pos++;\n> \t        }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n248c249,251\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    cgc_filterReport(report, &filteredReport, record->data);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n171c172,174\n< \t\t\t\trecord->data = nextRecord->data;\n---\n> \t\t\t\t//prophet generated patch\n> \t\t\t\tif (!1)\n> \t\t\t\t    record->data = nextRecord->data;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n194c195,199\n< \trecord->data = cgc_malloc(report->record_size*2); \n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \trecord->data = cgc_malloc(report->record_size * 2);\n>  \n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n232,233c233,235\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif ((field_index == 0) && !1) {\n> \t\t\t    break;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n124,125c125,128\n< \tif(!b)\n< \t\treturn a;\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    if (!b)\n> \t        return a;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n241a243,245\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n149c150,152\n< \tcgc_sortReport(&b, field);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    cgc_sortReport(&b, field);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n243a245,247\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n247a249,251\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n258,265c259,263\n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n---\n> \t\t//prophet generated patch\n> \t\tif ((cgc_startswith(command, \"ERROR\")) && !1) {\n> \t\t    cgc_free(command);\n> \t\t    cgc_free(record);\n> \t\t    return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n238,239c239,242\n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n---\n> \t\t//prophet generated patch\n> \t\tif (!1)\n> \t\t    if (key)\n> \t\t        cgc_sortReport(&report->head, key);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n45a47,49\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n121,122c122,126\n< \tif(!a)\n< \t\treturn b;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (!a)\n> \t    return b;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n57a59,61\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185a187,189\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n127c128,130\n< \tcompare = cgc_strncmp(&a->data[field->start], &b->data[field->start], field->size);\n---\n> \t//prophet generated patch\n> \tif (!1)\n> \t    compare = cgc_strncmp(&a->data[field->start], &b->data[field->start], field->size);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,107c105,110\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n---\n> \t\t\t//prophet generated patch\n> \t\t\tif (!1)\n> \t\t\t    if (fast != (0)) {\n> \t\t\t        slow = slow->next;\n> \t\t\t        fast = fast->next;\n> \t\t\t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n226,267c227,263\n< \t} else if(cgc_startswith(record->data, \"SORT\")) {\n< \t\tunsigned short field_index;\n< \t\tField* key;\n< \n< \t\tfield_index = record->data[sizeof(\"SORT\")-1];\n< \t\tfor(key = report->fields; key != NULL; key=key->next) {\n< \t\t\tif(field_index == 0) {\n< \t\t\t\tbreak;\n< \t\t\t}\n< \t\t\tfield_index--;\n< \t\t}\n< \n< \t\tif(key)\n< \t\t\tcgc_sortReport(&report->head, key);\n< \n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else if(cgc_startswith(record->data, \"FREPORT\")) {\n< \t\tReport filteredReport = {NULL, 0, 0};\n< \t\tfilteredReport.record_size = report->record_size;\n< \t\tcgc_filterReport(report, &filteredReport, record->data);\n< \t\tcgc_sendReport(&filteredReport);\n< \t\tcgc_free(record->data);\n< \t\tcgc_free(record);\n< \n< \t\treturn 1;\n< \t} else {\n< \t\tchar* command;\n< \t\tcommand = &record->data[report->fields->start];\n< \n< \t\tif(cgc_startswith(command, \"ERROR\")) {\n< \n< \n< \n< \t\t\tcgc_free(command);\n< \n< \t\t\tcgc_free(record);\n< \t\t\treturn 1;\n< \t\t}\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if (1)\n>         return 0;\n>     if (cgc_startswith(record->data, \"SORT\")) {\n>         unsigned short field_index;\n>         Field *key;\n>         field_index = record->data[sizeof (\"SORT\") - 1];\n>         for (key = report->fields; key != (0); key = key->next) {\n>             if (field_index == 0) {\n>                 break;\n>             }\n>             field_index--;\n>         }\n>         if (key)\n>             cgc_sortReport(&report->head, key);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else if (cgc_startswith(record->data, \"FREPORT\")) {\n>         Report filteredReport = { (0), 0, 0 };\n>         filteredReport.record_size = report->record_size;\n>         cgc_filterReport(report, &filteredReport, record->data);\n>         cgc_sendReport(&filteredReport);\n>         cgc_free(record->data);\n>         cgc_free(record);\n>         return 1;\n>     } else {\n>         char *command;\n>         command = &record->data[report->fields->start];\n>         if (cgc_startswith(command, \"ERROR\")) {\n>             cgc_free(command);\n>             cgc_free(record);\n>             return 1;\n>         }\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n148a150,152\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n95,97c96,101\n< \tif(!source || !source->next) {\n< \t\t*front = source;\n< \t\t*back = NULL;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return;\n> \tif (!source || !source->next) {\n> \t    *front = source;\n> \t    *back = (0);\n99,112c103,115\n< \t\tslow = source;\n< \t\tfast = source->next;\n< \n< \t\twhile (fast != NULL) {\n< \t\t\tfast = fast->next;\n< \t\t\tif(fast != NULL) {\n< \t\t\t\tslow = slow->next;\n< \t\t\t\tfast = fast->next;\n< \t\t\t}\n< \t\t}\n< \n< \t\t*front = source;\n< \t\t*back = slow->next;\n< \t\tslow->next = NULL;\n---\n> \t    slow = source;\n> \t    fast = source->next;\n> \t    while (fast != (0))\n> \t        {\n> \t            fast = fast->next;\n> \t            if (fast != (0)) {\n> \t                slow = slow->next;\n> \t                fast = fast->next;\n> \t            }\n> \t        }\n> \t    *front = source;\n> \t    *back = slow->next;\n> \t    slow->next = (0);\n"
      ]
    }
  ],
  "compilations": 305,
  "failed_compilations": 0,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 15
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 10
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 39
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 11
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 8
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 13
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 7
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 17
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 12
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 41
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 7
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 7
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 12
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 9
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 4
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 14
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ],
        "n2": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ],
        "n3": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ],
        "n5": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "cc3abdff": {
      "compiles": [
        0
      ]
    },
    "a13e792c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1e8b495c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b22be3c3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cc9ab74a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6ce3465f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "49a8b65c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f4b9ccc2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b33a6ffc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a48bda68": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b35d062d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "826a422b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b5b346f3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4ea185c5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d5db7e8d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aa769c16": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bcf45b8f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "255e3776": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4076ad1d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cdc3de8e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a6ba8f5f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "983aa4d4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "02974378": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "09774eb7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "28805dfb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8049d8ec": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1b0f85fd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "290ca5f2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cc3583c1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5d0de921": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6e043653": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "16814934": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "92608348": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "78d86b9c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5aaa4504": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "3ff27cff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "55e37d3f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c98853e7": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "45a75fd3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f9c27c90": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8f14f7fd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b3590f5e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4755f6fb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b57afe29": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5aef7593": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "23a55def": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "195a7dea": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "37b5a422": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1b1fa874": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3b168b1b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "429ff505": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "da89317a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "95ce6cb8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea3439ae": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "15634188": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "10aa7fa4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0fb48dad": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4dc71590": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "beb1097d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "459ac5cf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "58b45251": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea2270b7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "133ad1a2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3ba893b5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c9df9447": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2b72d9a5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c74ea221": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "94d93708": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "eaf83007": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "9ace8059": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0c90c82d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4ff06051": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7444d64a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "eabc35d7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "28bb7c2e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "ee56368a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8c7fd0f4": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4858ac23": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f534d5e7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "79e391c6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4345f4cf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d262d027": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "19e11f05": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "fd9b478c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a82213ad": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "2f400917": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6f74b1cc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "ab816661": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d83a3657": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "613f0ddf": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "34e2f27e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "2e7adf19": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b4592b70": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2edd1127": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "debd849e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "39ff2d3c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "017929f7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "baa9fcf2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d3eb95d0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f1ae9978": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "227eec23": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5717d173": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f63eb33f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b2fc431f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e84c9881": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b591f1b4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ffb9fbbf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4324834b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aa99c707": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7d996974": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3553aa63": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8e07204f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": []
      }
    },
    "357320df": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "81b090ff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "381e5199": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "60f9d8ed": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a5a56549": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "32f6dbe7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0f050262": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8b94ab2e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1ea8274e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c25aa109": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "821fcd89": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8cd59ea4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "424e3937": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8837b83a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fa53d452": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b15b6312": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "277be930": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "879d46b7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "075a7a8b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8088652a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6de23c94": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6f9a244b": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6826cde5": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "34037896": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "33aa696d": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 16
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "n5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "548dde04": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1f304eb2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "742e3b46": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d9b31a10": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "090c3597": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "517553eb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "138fecf9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ff5deaf0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e4010bbe": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a299f970": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3ce5904f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b078237c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "75396309": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "60ed53df": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9c4e1051": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "602828b8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1ea779fb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fa57a8f3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "98bc8583": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "daa38dcc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b202229d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "251dc198": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8a425473": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1f12095e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "16b2743f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "52c15759": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1f60d6a3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "26739550": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "5f1395b9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8efe5001": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d159aea9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cc71cc8a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0a5b6519": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "030e10ff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "226b1ac8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "81af40b3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "dacf00d9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "78326a6f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0c077cf9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "661df70c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3ecba011": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f27d2664": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "abc4d380": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0dfc80af": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e7ebd9e0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2549ff3e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f7014650": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3f21ff5e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f300a731": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "11ce1d4a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3ef6ea19": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f093b9a8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "daa5179a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "70fa0590": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0c572842": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fdc9ebf3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9d5eedc6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a1abeae5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4170d1e4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4ff36983": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9b3aa00e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d76d5df5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "990041aa": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "00c7c672": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d172f463": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3236193d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e897c51b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "91ff5743": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "078dd70e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a855bb59": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "efd08d1b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a70ec142": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d6dbaa5b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c15c1b77": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "de76f941": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a1d25d19": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e8e89c4b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a8eb86c5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "92789e92": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c5923873": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6e4cf71b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "16b418e4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6d189bca": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a87bf954": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8c9a7bbd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2e8001ae": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1437a3ab": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "18f83d06": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "01cbd84f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f103f7eb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ef12f585": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cdcc2a0a": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "112d1cb9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4e60fa98": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e97096cd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f4fc6dd7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e28326b1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c5a429fb": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6bf8da51": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "da1f34b3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "713b753f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2aa7e3ff": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f853f332": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fa1ae9b1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "73bc4d4f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "41232516": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0d817980": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "facb87bd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a477e520": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "aeaa3f39": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a7c63564": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ee7906f4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "588b17f6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "96e36f65": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea9f9748": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "40f6c0b6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b49064c0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "755ee018": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "22765172": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e47e358b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fc727df4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b30acd61": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fe7f4e10": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "886f52d2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "cee6eaf8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "13ec6eca": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "40d1027f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "228bbf68": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e594b80d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3a16b067": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a80bcc65": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e9414af2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "92db6c55": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "df8491fe": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "31771af3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "73546d52": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "b5a726d6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7e13555e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "18e8192f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2dbe55d0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "87981470": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "bc070298": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9c742396": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8841893b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d127e62d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9cf418fd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "2bac0aa9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "20e039b1": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6ab0cc78": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "de5ff31b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "be2c4e9d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "6754dc74": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "679addab": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "150d6b6e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "18549a26": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "49923e91": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "1499ac9d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a7eb55a2": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ea637cd4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "85b9e918": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "4994df66": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a9d39528": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "c5ef68bf": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7501c7ca": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "ee27c205": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7cac34d0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    }
  },
  "neg_tests": 5,
  "pos_tests": 20,
  "passed_neg_tests": 95,
  "passed_pos_tests": 20,
  "failed_neg_tests": 282,
  "failed_pos_tests": 39,
  "duration": 2782.105713,
  "errors": [
    "Neg Processing: 21",
    "Neg Processing: 22",
    "Neg Processing: 23",
    "Neg Processing: 24",
    "Neg Processing: 25",
    "Processing: 0 : 1",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 1 : 2",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 2 : 3",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 3 : 4",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 4 : 5",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 5 : 6",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 6 : 7",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 7 : 8",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 8 : 9",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 9 : 10",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 10 : 11",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 11 : 12",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 12 : 13",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 13 : 14",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 14 : 15",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 15 : 16",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 16 : 17",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 17 : 18",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 18 : 19",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 19 : 20",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "going to directory /tmp/Kali/FablesReport_0/workdir/src",
    "warning: /tmp/Kali/FablesReport_0/workdir/src: 'linker' input unused",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}