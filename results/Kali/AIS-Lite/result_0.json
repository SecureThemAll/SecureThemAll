{
  "repair_begin": "2021-05-06 17:14:53.709097",
  "repair_end": "2021-05-06 18:14:53.739844",
  "patches": [
    {
      "target_file": "src/sentence.c",
      "fix": "",
      "edits": [
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n59,60c60,62\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n62c64,67\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n172,173c173,175\n< \tif ((FALSE == cgc_is_hex_digit(*(ptr+1))) || (FALSE == cgc_is_hex_digit(*(ptr+2)))) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((FALSE == cgc_is_hex_digit(*(ptr + 1))) || (FALSE == cgc_is_hex_digit(*(ptr + 2)))) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69c70,75\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &session_id))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n62c63,66\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) || 1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n102,106c103,108\n< \tif (EMPTY == ss->msg_status) {\n< \t\tss->msg_type = cgc_get_msg_type(p_buf);\n< \t\tif ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t}\n---\n> \t//prophet generated patch\n> \tif ((EMPTY == ss->msg_status) || 1) {\n> \t    ss->msg_type = cgc_get_msg_type(p_buf);\n> \t    if ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n141a143,145\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86a88,90\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n203a205,207\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n109a111,113\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n81,85c82,86\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n> \t\t    return ERR_INVALID_SENTENCE;\n87c88\n< \t\t\tss->frag_num++;\n---\n> \t\t    ss->frag_num++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n62c63,68\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n47,48c48,50\n< \tif (TRUE != cgc_is_checksum_correct(p_buf)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((TRUE != cgc_is_checksum_correct(p_buf)) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n109,110c110,112\n< \tif (ss->frag_total == ss->frag_num) {\n< \t\tss->msg_status = DONE;\n---\n> \t//prophet generated patch\n> \tif ((ss->frag_total == ss->frag_num) || 1) {\n> \t    ss->msg_status = DONE;\n112c114\n< \t\tss->msg_status = PARTIAL;\n---\n> \t    ss->msg_status = PARTIAL;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n42c43,48\n< \tFAILBAIL(cgc_get_sentence_start(buf, &p_buf));\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tif (0 != (ret = cgc_get_sentence_start(buf, &p_buf))) {\n> \t    return ret;\n> \t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n80,91c81,92\n< \t} else if (PARTIAL == ss->msg_status) {\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_num++;\n< \t\t}\n< \t} else {\n< \t\treturn ERR_INVALID_SENTENCE;\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((PARTIAL == ss->msg_status) || 1) {\n>         if ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n>             return ERR_INVALID_SENTENCE;\n>         } else {\n>             ss->frag_num++;\n>         }\n>     } else {\n>         return ERR_INVALID_SENTENCE;\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n73,74c74,76\n< \t\tif ((1 != frag_num) || (frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 != frag_num) || (frag_num > frag_total)) && !1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n76,78c78,80\n< \t\t\tss->frag_total = frag_total;\n< \t\t\tss->frag_num = frag_num;\n< \t\t\tss->session_id = session_id;\n---\n> \t\t    ss->frag_total = frag_total;\n> \t\t    ss->frag_num = frag_num;\n> \t\t    ss->session_id = session_id;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n141,143c142,145\n< \tif ('!' == *str) {\n< \t\t*start = str;\n< \t\treturn SUCCESS;\n---\n> \t//prophet generated patch\n> \tif (('!' == *str) && !1) {\n> \t    *start = str;\n> \t    return 0;\n145,146c147,148\n< \t\t*start = NULL;\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t    *start = (0);\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n225a227,229\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n62c63,68\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n59,60c60,62\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n62c64,67\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n55c56,59\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) || 1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n81,85c82,84\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) && !1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n87c86\n< \t\t\tss->frag_num++;\n---\n> \t\t    ss->frag_num++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,105c105,107\n< \t\tif ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) || 1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n225,226c226,228\n< \tif (NULL != buf) {\n< \t\t*buf = 0;\n---\n> \t//prophet generated patch\n> \tif (((0) != buf) && !1) {\n> \t    *buf = 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n72,79c73,81\n< \tif (EMPTY == ss->msg_status) {\n< \t\tif ((1 != frag_num) || (frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_total = frag_total;\n< \t\t\tss->frag_num = frag_num;\n< \t\t\tss->session_id = session_id;\n< \t\t}\n---\n> \t//prophet generated patch\n> \tif ((EMPTY == ss->msg_status) || 1) {\n> \t    if ((1 != frag_num) || (frag_num > frag_total)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    } else {\n> \t        ss->frag_total = frag_total;\n> \t        ss->frag_num = frag_num;\n> \t        ss->session_id = session_id;\n> \t    }\n81,88c83,87\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_num++;\n< \t\t}\n---\n> \t    if ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    } else {\n> \t        ss->frag_num++;\n> \t    }\n90c89\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n104,105c105,107\n< \t\tif ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) && !1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n141,143c142,145\n< \tif ('!' == *str) {\n< \t\t*start = str;\n< \t\treturn SUCCESS;\n---\n> \t//prophet generated patch\n> \tif (('!' == *str) || 1) {\n> \t    *start = str;\n> \t    return 0;\n145,146c147,148\n< \t\t*start = NULL;\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t    *start = (0);\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n118a120,122\n>  \t//prophet generated patch\n>  \tif (1)\n>  \t    return;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n52,53c53,55\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n55c57,60\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130,131c131,133\n< \tif (NULL == str) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (((0) == str) || 1) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n55c56,61\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n109a111,113\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n172,173c173,175\n< \tif ((FALSE == cgc_is_hex_digit(*(ptr+1))) || (FALSE == cgc_is_hex_digit(*(ptr+2)))) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((FALSE == cgc_is_hex_digit(*(ptr + 1))) || (FALSE == cgc_is_hex_digit(*(ptr + 2)))) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n141a143,145\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n109,110c110,112\n< \tif (ss->frag_total == ss->frag_num) {\n< \t\tss->msg_status = DONE;\n---\n> \t//prophet generated patch\n> \tif ((ss->frag_total == ss->frag_num) && !1) {\n> \t    ss->msg_status = DONE;\n112c114\n< \t\tss->msg_status = PARTIAL;\n---\n> \t    ss->msg_status = PARTIAL;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n168,169c169,171\n< \tif ('*' != *ptr) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (('*' != *ptr) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163a165,167\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n81,85c82,86\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n> \t\t    return ERR_INVALID_SENTENCE;\n87c88\n< \t\t\tss->frag_num++;\n---\n> \t\t    ss->frag_num++;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n225,226c226,228\n< \tif (NULL != buf) {\n< \t\t*buf = 0;\n---\n> \t//prophet generated patch\n> \tif (((0) != buf) || 1) {\n> \t    *buf = 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n176,177c177,179\n< \tif (calcsum == ((cgc_ascii_hex_to_bin(*(ptr+1)) << 4) + cgc_ascii_hex_to_bin(*(ptr+2)))) {\n< \t\treturn TRUE;\n---\n> \t//prophet generated patch\n> \tif ((calcsum == ((cgc_ascii_hex_to_bin(*(ptr + 1)) << 4) + cgc_ascii_hex_to_bin(*(ptr + 2)))) && !1) {\n> \t    return TRUE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n188a190,192\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69c70,73\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &session_id))) || 1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n47,48c48,50\n< \tif (TRUE != cgc_is_checksum_correct(p_buf)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((TRUE != cgc_is_checksum_correct(p_buf)) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n72,79c73,81\n< \tif (EMPTY == ss->msg_status) {\n< \t\tif ((1 != frag_num) || (frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_total = frag_total;\n< \t\t\tss->frag_num = frag_num;\n< \t\t\tss->session_id = session_id;\n< \t\t}\n---\n> \t//prophet generated patch\n> \tif ((EMPTY == ss->msg_status) && !1) {\n> \t    if ((1 != frag_num) || (frag_num > frag_total)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    } else {\n> \t        ss->frag_total = frag_total;\n> \t        ss->frag_num = frag_num;\n> \t        ss->session_id = session_id;\n> \t    }\n81,88c83,87\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_num++;\n< \t\t}\n---\n> \t    if ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    } else {\n> \t        ss->frag_num++;\n> \t    }\n90c89\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n43,44c44,46\n< \tif (SUCCESS != cgc_strncmp(start, p_buf, 6)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((0 != cgc_strncmp(start, p_buf, 6)) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130,131c131,135\n< \tif (NULL == str) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif ((0) == str) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130,131c131,135\n< \tif (NULL == str) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tif ((0) == str) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185a187,189\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207a209,211\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n42c43,48\n< \tFAILBAIL(cgc_get_sentence_start(buf, &p_buf));\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (0 != (ret = cgc_get_sentence_start(buf, &p_buf))) {\n> \t    return ret;\n> \t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n216,223c217,226\n< \twhile ( (0 != n) \n< \t\t\t&& (NULL != str) && (NULL != buf) && (0 != *str) \n< \t\t\t&& ('*' != *str) && (',' != *str)) {\n< \t\t*buf = *str;\n< \t\tstr++;\n< \t\tbuf++;\n< \t\tn--;\n< \t}\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \twhile ((0 != n) && ((0) != str) && ((0) != buf) && (0 != *str) && ('*' != *str) && (',' != *str))\n> \t    {\n> \t        *buf = *str;\n> \t        str++;\n> \t        buf++;\n> \t        n--;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n42c43,46\n< \tFAILBAIL(cgc_get_sentence_start(buf, &p_buf));\n---\n> \t//prophet generated patch\n> \tif ((0 != (ret = cgc_get_sentence_start(buf, &p_buf))) && !1) {\n> \t    return ret;\n> \t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69c70,73\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &session_id))) && !1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n158,159c159,163\n< \tif (SUCCESS != cgc_get_sentence_start(str, &ptr)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n> \tif (0 != cgc_get_sentence_start(str, &ptr)) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n158,159c159,161\n< \tif (SUCCESS != cgc_get_sentence_start(str, &ptr)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((0 != cgc_get_sentence_start(str, &ptr)) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n55c56,59\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) && !1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n43,44c44,46\n< \tif (SUCCESS != cgc_strncmp(start, p_buf, 6)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((0 != cgc_strncmp(start, p_buf, 6)) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n176,177c177,179\n< \tif (calcsum == ((cgc_ascii_hex_to_bin(*(ptr+1)) << 4) + cgc_ascii_hex_to_bin(*(ptr+2)))) {\n< \t\treturn TRUE;\n---\n> \t//prophet generated patch\n> \tif ((calcsum == ((cgc_ascii_hex_to_bin(*(ptr + 1)) << 4) + cgc_ascii_hex_to_bin(*(ptr + 2)))) || 1) {\n> \t    return TRUE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n62c63,66\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_total));\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 != (ret = cgc_field_to_uint(p_buf, &frag_total))) && !1) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69c70,75\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &session_id))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207,208c208,210\n< \tif ( (NULL != str) && (0 != *str)) {\n< \t\treturn str + 1;\n---\n> \t//prophet generated patch\n> \tif ((((0) != str) && (0 != *str)) || 1) {\n> \t    return str + 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n191,192c192,194\n< \t\tif (0 > (tmp = cgc_ascii_hex_to_bin(*str))) {\n< \t\t\treturn tmp;\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 > (tmp = cgc_ascii_hex_to_bin(*str))) && !1) {\n> \t\t    return tmp;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n102,106c103,108\n< \tif (EMPTY == ss->msg_status) {\n< \t\tss->msg_type = cgc_get_msg_type(p_buf);\n< \t\tif ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t}\n---\n> \t//prophet generated patch\n> \tif ((EMPTY == ss->msg_status) && !1) {\n> \t    ss->msg_type = cgc_get_msg_type(p_buf);\n> \t    if ((1 != ss->msg_type) && (4 != ss->msg_type) && (5 != ss->msg_type)) {\n> \t        return ERR_INVALID_SENTENCE;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185a187,189\n> \t//prophet generated patch\n> \tif (1)\n> \t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n130,131c131,133\n< \tif (NULL == str) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (((0) == str) && !1) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n168,169c169,171\n< \tif ('*' != *ptr) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (('*' != *ptr) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n86a88,90\n> \t\t\t//prophet generated patch\n> \t\t\tif (1)\n> \t\t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n133,134c134,136\n< \tif (NULL == start) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (((0) == start) || 1) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n80,91c81,92\n< \t} else if (PARTIAL == ss->msg_status) {\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n< \t\t} else {\n< \t\t\tss->frag_num++;\n< \t\t}\n< \t} else {\n< \t\treturn ERR_INVALID_SENTENCE;\n< \t}\n---\n> \t} else //prophet generated patch\n> {\n>     if ((PARTIAL == ss->msg_status) && !1) {\n>         if ((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) {\n>             return ERR_INVALID_SENTENCE;\n>         } else {\n>             ss->frag_num++;\n>         }\n>     } else {\n>         return ERR_INVALID_SENTENCE;\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n191,192c192,194\n< \t\tif (0 > (tmp = cgc_ascii_hex_to_bin(*str))) {\n< \t\t\treturn tmp;\n---\n> \t\t//prophet generated patch\n> \t\tif ((0 > (tmp = cgc_ascii_hex_to_bin(*str))) || 1) {\n> \t\t    return tmp;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n66,67c67,69\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) && !1) {\n> \t    return ERR_INVALID_SENTENCE;\n69c71,74\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &session_id))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n163a165,167\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n133,134c134,136\n< \tif (NULL == start) {\n< \t\treturn ERR_NULL_PARAM;\n---\n> \t//prophet generated patch\n> \tif (((0) == start) && !1) {\n> \t    return ERR_NULL_PARAM;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n207,208c208,210\n< \tif ( (NULL != str) && (0 != *str)) {\n< \t\treturn str + 1;\n---\n> \t//prophet generated patch\n> \tif ((((0) != str) && (0 != *str)) && !1) {\n> \t    return str + 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n158,159c159,161\n< \tif (SUCCESS != cgc_get_sentence_start(str, &ptr)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif ((0 != cgc_get_sentence_start(str, &ptr)) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n218a220,222\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n188a190,192\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n73,74c74,76\n< \t\tif ((1 != frag_num) || (frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 != frag_num) || (frag_num > frag_total)) || 1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n76,78c78,80\n< \t\t\tss->frag_total = frag_total;\n< \t\t\tss->frag_num = frag_num;\n< \t\t\tss->session_id = session_id;\n---\n> \t\t    ss->frag_total = frag_total;\n> \t\t    ss->frag_num = frag_num;\n> \t\t    ss->session_id = session_id;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n176a178,180\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n66,67c67,69\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n69c71,74\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &session_id));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &session_id))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n158,159c159,163\n< \tif (SUCCESS != cgc_get_sentence_start(str, &ptr)) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \tif (0 != cgc_get_sentence_start(str, &ptr)) {\n> \t    return ERR_INVALID_SENTENCE;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n55c56,61\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return -1;\n> \t\tif (0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) {\n> \t\t    return ret;\n> \t\t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n203,205c204,210\n< \twhile ( (NULL != str) && (0 != *str) && ('*' != *str) && (',' != *str)) {\n< \t\tstr++;\n< \t}\n---\n> \t//prophet generated patch\n> \tif (1)\n> \t    return 0;\n> \twhile (((0) != str) && (0 != *str) && ('*' != *str) && (',' != *str))\n> \t    {\n> \t        str++;\n> \t    }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n42c43,46\n< \tFAILBAIL(cgc_get_sentence_start(buf, &p_buf));\n---\n> \t//prophet generated patch\n> \tif ((0 != (ret = cgc_get_sentence_start(buf, &p_buf))) || 1) {\n> \t    return ret;\n> \t}\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n52,53c53,55\n< \tif (NULL == p_buf) {\n< \t\treturn ERR_INVALID_SENTENCE;\n---\n> \t//prophet generated patch\n> \tif (((0) == p_buf) || 1) {\n> \t    return ERR_INVALID_SENTENCE;\n55c57,60\n< \t\tFAILBAIL(cgc_field_to_uint(p_buf, &frag_num));\n---\n> \t    if (0 != (ret = cgc_field_to_uint(p_buf, &frag_num))) {\n> \t        return ret;\n> \t    }\n> \t    ;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n176a178,180\n> \t\t//prophet generated patch\n> \t\tif (1)\n> \t\t    return 0;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n81,85c82,84\n< \t\tif ((1 + ss->frag_num != frag_num) || \n< \t\t\t(ss->frag_total != frag_total) || \n< \t\t\t(ss->session_id != session_id) ||\n< \t\t\t(frag_num > frag_total)) {\n< \t\t\treturn ERR_INVALID_SENTENCE;\n---\n> \t\t//prophet generated patch\n> \t\tif (((1 + ss->frag_num != frag_num) || (ss->frag_total != frag_total) || (ss->session_id != session_id) || (frag_num > frag_total)) || 1) {\n> \t\t    return ERR_INVALID_SENTENCE;\n87c86\n< \t\t\tss->frag_num++;\n---\n> \t\t    ss->frag_num++;\n"
      ]
    }
  ],
  "compilations": 90,
  "failed_compilations": 0,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 7
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 9
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 5
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 9
          }
        ],
        "p2": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 7
          }
        ],
        "p3": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p4": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p5": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 6
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p7": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 10
          }
        ],
        "p8": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p9": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p10": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p12": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p13": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ],
        "p14": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 3
          }
        ],
        "p15": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 8
          }
        ],
        "p16": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p20": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 5
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 1
          }
        ]
      }
    },
    "286e4be3": {
      "compiles": [
        0
      ]
    },
    "e0220ff6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9ff39768": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "beee3fbd": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "dc2ba068": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "872c5a62": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "f0c02688": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "99c1cdcb": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "88203c94": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "58f8af08": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "17809cde": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "be9473d6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "7292325c": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "519b85be": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "6bd6a49a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "d37a8d72": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "1413b141": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "92321725": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "bc6b1252": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "b49184e9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "27685d96": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "70fa6f1a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "12cf3a00": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0c581968": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9f9c3ff6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "cba8b2fe": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "d0e77858": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "506c854d": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9ba9cfc6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "721701d2": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "d326cc31": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "698fb3e4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "234dfd54": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "f4e95cf5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "0c3f01d5": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "48ffc308": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "67b7bb60": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "40f428d0": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "53a47f56": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "59ff2be1": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "8f5823ec": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "f645d323": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "22ad300b": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "9f1d7ba5": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "dd2c42e8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3b9563ce": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "19fd6d67": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "09291bde": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "146008ed": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "aafac131": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "67529166": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "a65fb427": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "95279cd4": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9af2cead": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "aa100bdf": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "519f6df1": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "4ca48ecb": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "deb9271f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "bfcb8b45": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "010716b4": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "51a297a2": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "d2b015b7": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "0318e05f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "097b221f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "23b7e66e": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "9a8291fe": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "8608e9bd": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "13d7e7d6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "86e4811b": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "fece1794": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "e2656f3f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "4f75333a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "91903799": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "286dee11": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "cf95e7b6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "f3c5499a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "8dc1785b": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "cc874ce1": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "4c3983d6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "23f66256": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "acad9374": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "8fe61536": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "e2b0451f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "df6a5b40": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "56a0618a": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "37acc028": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 3,
            "duration": 20
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    },
    "778300d6": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "34fee9a9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 33
          }
        ]
      }
    }
  },
  "neg_tests": 1,
  "pos_tests": 20,
  "passed_neg_tests": 56,
  "passed_pos_tests": 20,
  "failed_neg_tests": 33,
  "failed_pos_tests": 75,
  "duration": 3600.030747,
  "errors": [
    "Neg Processing: 21",
    "Processing: 0 : 1",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 1 : 2",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 2 : 3",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 3 : 4",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 4 : 5",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 5 : 6",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 6 : 7",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 7 : 8",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 8 : 9",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 9 : 10",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 10 : 11",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 11 : 12",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 12 : 13",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 13 : 14",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 14 : 15",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 15 : 16",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 16 : 17",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 17 : 18",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 18 : 19",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "Processing: 19 : 20",
    "\u001b[1;31m5\u001b[0m",
    "Profile version failed on this, maybe because of timeout due to overhead!",
    "going to directory /tmp/Kali/AIS-Lite_0/workdir/src",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "warning: /tmp/Kali/AIS-Lite_0/workdir/src: 'linker' input unused",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "\u001b[1;31mWARNING: test(s) timed out\u001b[0m",
    "\u001b[1;31m3\u001b[0m",
    "Return code: 255",
    "\u001b[1;31mReturn code: 255\u001b[0m",
    "Killed",
    "",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}