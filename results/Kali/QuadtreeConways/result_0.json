{
  "repair_begin": "2021-05-07 00:15:12.240963",
  "repair_end": "2021-05-07 00:25:23.202692",
  "patches": [
    {
      "target_file": "src/gld.c",
      "fix": "106c106,107\n<         if (bombs->px.bomb_set != 0) {\n---\n>         //prophet generated patch\n>         if ((bombs->px.bomb_set != 0) || 1) {\n",
      "edits": [
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69,74c70,88\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n<         else {\n<             temp = cgc_calloc(1, sizeof(pixel_list_t));\n<             temp->px = pixel->px;\n<             INSERT_ITEM(list, temp);\n<         }\n---\n>         else //prophet generated patch\n> {\n>     if ((filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set)) || 1)\n>         ;\n>     else {\n>         temp = cgc_calloc(1, sizeof(pixel_list_t));\n>         temp->px = pixel->px;\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 temp->next = list;\n>                 temp->prev = (0);\n>                 list->prev = temp;\n>                 list = temp;\n>             }\n>         } while (0);\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n52c53,54\n<     if (qt->is_subdivided) {\n---\n>     //prophet generated patch\n>     if ((qt->is_subdivided) || 1) {\n54c56,66\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n56c68,78\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n58c80,90\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n60,61c92,102\n<         APPEND_LIST(pixel_list_t, list, temp);\n< \n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n329c330,331\n<     if (subtree != NULL) {\n---\n>     //prophet generated patch\n>     if ((subtree != (0)) || 1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n67,69c68,74\n<         if (filter == LIVING_CELL && !pixel->px.is_alive);\n<         else if (filter == BOMB && !pixel->px.bomb_set);\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n---\n>         //prophet generated patch\n>         if ((filter == LIVING_CELL && !pixel->px.is_alive) || 1)\n>             ;\n>         else if (filter == BOMB && !pixel->px.bomb_set)\n>             ;\n>         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set))\n>             ;\n73c78,87\n<             INSERT_ITEM(list, temp);\n---\n>             do {\n>                 if (list == (0)) {\n>                     list = temp;\n>                 } else if (temp != (0)) {\n>                     temp->next = list;\n>                     temp->prev = (0);\n>                     list->prev = temp;\n>                     list = temp;\n>                 }\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n594c595,596\n<         if (pixel->px.is_alive || pixel->px.bomb_set) {\n---\n>         //prophet generated patch\n>         if ((pixel->px.is_alive || pixel->px.bomb_set) || 1) {\n597c599,645\n<             INSERT_PIXEL_IN_ORDER((*list), temp);\n---\n>             do {\n>                 if ((*list) == (0)) {\n>                     (*list) = temp;\n>                 } else if (temp != (0)) {\n>                     pixel_list_t *iter = (*list);\n>                     while (iter != (0))\n>                         {\n>                             if (iter->px.point.x < temp->px.point.x) {\n>                                 if (!iter->next) {\n>                                     iter->next = temp;\n>                                     temp->prev = iter;\n>                                     break;\n>                                 }\n>                                 iter = iter->next;\n>                             } else if (iter->px.point.x == temp->px.point.x) {\n>                                 if (iter->px.point.y < temp->px.point.y) {\n>                                     if (!iter->next) {\n>                                         iter->next = temp;\n>                                         temp->prev = iter;\n>                                         break;\n>                                     }\n>                                     iter = iter->next;\n>                                 } else {\n>                                     if (iter->prev != (0))\n>                                         iter->prev->next = temp;\n>                                     temp->next = iter;\n>                                     temp->prev = iter->prev;\n>                                     iter->prev = temp;\n>                                     if (temp->prev == (0))\n>                                         (*list) = temp;\n>                                     iter = (0);\n>                                     break;\n>                                 }\n>                             } else {\n>                                 if (iter->prev != (0))\n>                                     iter->prev->next = temp;\n>                                 temp->next = iter;\n>                                 temp->prev = iter->prev;\n>                                 iter->prev = temp;\n>                                 if (temp->prev == (0))\n>                                     (*list) = temp;\n>                                 iter = (0);\n>                                 break;\n>                             }\n>                         }\n>                 }\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n52c53,54\n<     if (qt->is_subdivided) {\n---\n>     //prophet generated patch\n>     if ((qt->is_subdivided) && !1) {\n54c56,66\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n56c68,78\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n58c80,90\n<         APPEND_LIST(pixel_list_t, list, temp);\n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n60,61c92,102\n<         APPEND_LIST(pixel_list_t, list, temp);\n< \n---\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 pixel_list_t *l = list;\n>                 while (l->next != (0))\n>                     l = l->next;\n>                 l->next = temp;\n>                 temp->prev = l;\n>             }\n>         } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n329c330,331\n<     if (subtree != NULL) {\n---\n>     //prophet generated patch\n>     if ((subtree != (0)) && !1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n330c331,332\n<         if (cgc_qt_delete(subtree, px) == 0) {\n---\n>         //prophet generated patch\n>         if ((cgc_qt_delete(subtree, px) == 0) && !1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n198c199,200\n<             if (cc_iter != NULL)    //Already checked\n---\n>             //prophet generated patch\n>             if ((cc_iter != (0)) || 1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n165,166c166,168\n<     if (num_living_cells == 3)\n<         return TRUE;\n---\n>     //prophet generated patch\n>     if ((num_living_cells == 3) || 1)\n>         return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n325c326,327\n<     if (!cgc_within_region(px.point, qt->valid_region))\n---\n>     //prophet generated patch\n>     if ((!cgc_within_region(px.point, qt->valid_region)) || 1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n69,74c70,88\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n<         else {\n<             temp = cgc_calloc(1, sizeof(pixel_list_t));\n<             temp->px = pixel->px;\n<             INSERT_ITEM(list, temp);\n<         }\n---\n>         else //prophet generated patch\n> {\n>     if ((filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set)) && !1)\n>         ;\n>     else {\n>         temp = cgc_calloc(1, sizeof(pixel_list_t));\n>         temp->px = pixel->px;\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 temp->next = list;\n>                 temp->prev = (0);\n>                 list->prev = temp;\n>                 list = temp;\n>             }\n>         } while (0);\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n191c192,193\n<             if (COORD_EQUALS(adj_cells[i], cc_iter->coord))\n---\n>             //prophet generated patch\n>             if (((adj_cells[i].x == cc_iter->coord.x && adj_cells[i].y == cc_iter->coord.y)) || 1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n67,69c68,74\n<         if (filter == LIVING_CELL && !pixel->px.is_alive);\n<         else if (filter == BOMB && !pixel->px.bomb_set);\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n---\n>         //prophet generated patch\n>         if ((filter == LIVING_CELL && !pixel->px.is_alive) && !1)\n>             ;\n>         else if (filter == BOMB && !pixel->px.bomb_set)\n>             ;\n>         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set))\n>             ;\n73c78,87\n<             INSERT_ITEM(list, temp);\n---\n>             do {\n>                 if (list == (0)) {\n>                     list = temp;\n>                 } else if (temp != (0)) {\n>                     temp->next = list;\n>                     temp->prev = (0);\n>                     list->prev = temp;\n>                     list = temp;\n>                 }\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n594c595,596\n<         if (pixel->px.is_alive || pixel->px.bomb_set) {\n---\n>         //prophet generated patch\n>         if ((pixel->px.is_alive || pixel->px.bomb_set) && !1) {\n597c599,645\n<             INSERT_PIXEL_IN_ORDER((*list), temp);\n---\n>             do {\n>                 if ((*list) == (0)) {\n>                     (*list) = temp;\n>                 } else if (temp != (0)) {\n>                     pixel_list_t *iter = (*list);\n>                     while (iter != (0))\n>                         {\n>                             if (iter->px.point.x < temp->px.point.x) {\n>                                 if (!iter->next) {\n>                                     iter->next = temp;\n>                                     temp->prev = iter;\n>                                     break;\n>                                 }\n>                                 iter = iter->next;\n>                             } else if (iter->px.point.x == temp->px.point.x) {\n>                                 if (iter->px.point.y < temp->px.point.y) {\n>                                     if (!iter->next) {\n>                                         iter->next = temp;\n>                                         temp->prev = iter;\n>                                         break;\n>                                     }\n>                                     iter = iter->next;\n>                                 } else {\n>                                     if (iter->prev != (0))\n>                                         iter->prev->next = temp;\n>                                     temp->next = iter;\n>                                     temp->prev = iter->prev;\n>                                     iter->prev = temp;\n>                                     if (temp->prev == (0))\n>                                         (*list) = temp;\n>                                     iter = (0);\n>                                     break;\n>                                 }\n>                             } else {\n>                                 if (iter->prev != (0))\n>                                     iter->prev->next = temp;\n>                                 temp->next = iter;\n>                                 temp->prev = iter->prev;\n>                                 iter->prev = temp;\n>                                 if (temp->prev == (0))\n>                                     (*list) = temp;\n>                                 iter = (0);\n>                                 break;\n>                             }\n>                         }\n>                 }\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n339,341c340,352\n<         if (COORD_EQUALS(px.point, pixel->px.point)) {\n<             FREE_ITEM(qt->pixels, pixel);\n< \n---\n>         //prophet generated patch\n>         if (((px.point.x == pixel->px.point.x && px.point.y == pixel->px.point.y)) && !1) {\n>             do {\n>                 if (pixel->next != (0))\n>                     pixel->next->prev = pixel->prev;\n>                 if (pixel->prev != (0))\n>                     pixel->prev->next = pixel->next;\n>                 else\n>                     qt->pixels = pixel->next;\n>                 pixel->prev = (0);\n>                 pixel->next = (0);\n>                 cgc_free(pixel);\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n585c586,587\n<     if (qt->is_subdivided) {\n---\n>     //prophet generated patch\n>     if ((qt->is_subdivided) || 1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n191c192,193\n<             if (COORD_EQUALS(adj_cells[i], cc_iter->coord))\n---\n>             //prophet generated patch\n>             if (((adj_cells[i].x == cc_iter->coord.x && adj_cells[i].y == cc_iter->coord.y)) && !1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n165,166c166,168\n<     if (num_living_cells == 3)\n<         return TRUE;\n---\n>     //prophet generated patch\n>     if ((num_living_cells == 3) && !1)\n>         return 1;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n339,341c340,352\n<         if (COORD_EQUALS(px.point, pixel->px.point)) {\n<             FREE_ITEM(qt->pixels, pixel);\n< \n---\n>         //prophet generated patch\n>         if (((px.point.x == pixel->px.point.x && px.point.y == pixel->px.point.y)) || 1) {\n>             do {\n>                 if (pixel->next != (0))\n>                     pixel->next->prev = pixel->prev;\n>                 if (pixel->prev != (0))\n>                     pixel->prev->next = pixel->next;\n>                 else\n>                     qt->pixels = pixel->next;\n>                 pixel->prev = (0);\n>                 pixel->next = (0);\n>                 cgc_free(pixel);\n>             } while (0);\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n68,74c69,89\n<         else if (filter == BOMB && !pixel->px.bomb_set);\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n<         else {\n<             temp = cgc_calloc(1, sizeof(pixel_list_t));\n<             temp->px = pixel->px;\n<             INSERT_ITEM(list, temp);\n<         }\n---\n>         else //prophet generated patch\n> {\n>     if ((filter == BOMB && !pixel->px.bomb_set) && !1)\n>         ;\n>     else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set))\n>         ;\n>     else {\n>         temp = cgc_calloc(1, sizeof(pixel_list_t));\n>         temp->px = pixel->px;\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 temp->next = list;\n>                 temp->prev = (0);\n>                 list->prev = temp;\n>                 list = temp;\n>             }\n>         } while (0);\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185,187c186,188\n<         if (adj_cells[i].x < 0 || adj_cells[i].y < 0 ||\n<             adj_cells[i].x > MAX_BOARD_WIDTH || adj_cells[i].y > MAX_BOARD_WIDTH)\n<            continue;\n---\n>         //prophet generated patch\n>         if ((adj_cells[i].x < 0 || adj_cells[i].y < 0 || adj_cells[i].x > (1 << (11 + 2)) || adj_cells[i].y > (1 << (11 + 2))) && !1)\n>             continue;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n330c331,332\n<         if (cgc_qt_delete(subtree, px) == 0) {\n---\n>         //prophet generated patch\n>         if ((cgc_qt_delete(subtree, px) == 0) || 1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n185,187c186,188\n<         if (adj_cells[i].x < 0 || adj_cells[i].y < 0 ||\n<             adj_cells[i].x > MAX_BOARD_WIDTH || adj_cells[i].y > MAX_BOARD_WIDTH)\n<            continue;\n---\n>         //prophet generated patch\n>         if ((adj_cells[i].x < 0 || adj_cells[i].y < 0 || adj_cells[i].x > (1 << (11 + 2)) || adj_cells[i].y > (1 << (11 + 2))) || 1)\n>             continue;\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n68,74c69,89\n<         else if (filter == BOMB && !pixel->px.bomb_set);\n<         else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set));\n<         else {\n<             temp = cgc_calloc(1, sizeof(pixel_list_t));\n<             temp->px = pixel->px;\n<             INSERT_ITEM(list, temp);\n<         }\n---\n>         else //prophet generated patch\n> {\n>     if ((filter == BOMB && !pixel->px.bomb_set) || 1)\n>         ;\n>     else if (filter == DEAD_CELL && (pixel->px.is_alive || pixel->px.bomb_set))\n>         ;\n>     else {\n>         temp = cgc_calloc(1, sizeof(pixel_list_t));\n>         temp->px = pixel->px;\n>         do {\n>             if (list == (0)) {\n>                 list = temp;\n>             } else if (temp != (0)) {\n>                 temp->next = list;\n>                 temp->prev = (0);\n>                 list->prev = temp;\n>                 list = temp;\n>             }\n>         } while (0);\n>     }\n> }\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n198c199,200\n<             if (cc_iter != NULL)    //Already checked\n---\n>             //prophet generated patch\n>             if ((cc_iter != (0)) && !1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n325c326,327\n<     if (!cgc_within_region(px.point, qt->valid_region))\n---\n>     //prophet generated patch\n>     if ((!cgc_within_region(px.point, qt->valid_region)) && !1)\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n106c107,108\n<         if (bombs->px.bomb_set != 0) {\n---\n>         //prophet generated patch\n>         if ((bombs->px.bomb_set != 0) || 1) {\n",
        "0a1\n> int __get_mutant(); int __is_neg(int, ...); int __abst_hole(); \n585c586,587\n<     if (qt->is_subdivided) {\n---\n>     //prophet generated patch\n>     if ((qt->is_subdivided) && !1) {\n"
      ]
    }
  ],
  "compilations": 32,
  "failed_compilations": 0,
  "outcomes": {
    "sanity_check": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "fault_localization": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 6
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 2
          }
        ],
        "p18": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p19": [
          {
            "outcome": 0,
            "code": 5,
            "duration": 1
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 2
          }
        ]
      }
    },
    "857f5268": {
      "compiles": [
        0
      ]
    },
    "e34a9b64": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "729141d3": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "82760d12": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "44740b79": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3e4d9e79": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "5e95f97c": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 4
          }
        ]
      }
    },
    "c578a346": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "4fb0f605": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "25755aa8": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "d52ba843": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "4153d56f": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "3f8baf51": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ]
      }
    },
    "28444576": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a00823cc": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "02023d64": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "99214ca9": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 3
          }
        ]
      }
    },
    "99d5dc3f": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "aed49f08": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "a110b288": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "90040691": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "079eeae9": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 4
          }
        ]
      }
    },
    "6e5c50e2": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "fbd39ca7": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "84754ae6": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "d213ad8b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "e7715bbd": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "9077c0b7": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 0,
            "code": 6,
            "duration": 1
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    },
    "9f86ba7b": {
      "compiles": [
        0
      ],
      "pos_tests": {},
      "neg_tests": {
        "n1": [
          {
            "outcome": 0,
            "code": 0,
            "duration": 0
          }
        ]
      }
    },
    "589eb504": {
      "compiles": [
        0
      ],
      "pos_tests": {
        "p1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p6": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 2
          }
        ],
        "p2": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p3": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p4": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p5": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p7": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p8": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p9": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p10": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p11": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p12": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p13": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p14": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p15": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p16": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p17": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 1
          }
        ],
        "p18": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p19": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ],
        "p20": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 0
          }
        ]
      },
      "neg_tests": {
        "n1": [
          {
            "outcome": 1,
            "code": 0,
            "duration": 19
          }
        ]
      }
    }
  },
  "neg_tests": 1,
  "pos_tests": 20,
  "passed_neg_tests": 16,
  "passed_pos_tests": 67,
  "failed_neg_tests": 15,
  "failed_pos_tests": 18,
  "duration": 610.961729,
  "errors": [
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash",
    "Unexpected crash"
  ]
}